// source: css/msg.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_enum_pb = require('../common/enum_pb.js');
goog.object.extend(proto, common_enum_pb);
var common_base_pb = require('../common/base_pb.js');
goog.object.extend(proto, common_base_pb);
goog.exportSymbol('proto.css.msg.AtMessage', null, global);
goog.exportSymbol('proto.css.msg.AudioMessage', null, global);
goog.exportSymbol('proto.css.msg.CustomEntity', null, global);
goog.exportSymbol('proto.css.msg.CustomMessage', null, global);
goog.exportSymbol('proto.css.msg.CustomNoApnsMessage', null, global);
goog.exportSymbol('proto.css.msg.CustomSystemMessage', null, global);
goog.exportSymbol('proto.css.msg.EMsgContentType', null, global);
goog.exportSymbol('proto.css.msg.EMsgType', null, global);
goog.exportSymbol('proto.css.msg.FileMessage', null, global);
goog.exportSymbol('proto.css.msg.ImageMessage', null, global);
goog.exportSymbol('proto.css.msg.LocationMessage', null, global);
goog.exportSymbol('proto.css.msg.MessageUnit', null, global);
goog.exportSymbol('proto.css.msg.MsggwMessage', null, global);
goog.exportSymbol('proto.css.msg.ReadReceiptMessage', null, global);
goog.exportSymbol('proto.css.msg.RetractMessage', null, global);
goog.exportSymbol('proto.css.msg.TextMessage', null, global);
goog.exportSymbol('proto.css.msg.VideoMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.CustomEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.CustomEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.CustomEntity.displayName = 'proto.css.msg.CustomEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.CustomMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.msg.CustomMessage.repeatedFields_, null);
};
goog.inherits(proto.css.msg.CustomMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.CustomMessage.displayName = 'proto.css.msg.CustomMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.CustomNoApnsMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.msg.CustomNoApnsMessage.repeatedFields_, null);
};
goog.inherits(proto.css.msg.CustomNoApnsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.CustomNoApnsMessage.displayName = 'proto.css.msg.CustomNoApnsMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.MsggwMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.MsggwMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.MsggwMessage.displayName = 'proto.css.msg.MsggwMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.MessageUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.MessageUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.MessageUnit.displayName = 'proto.css.msg.MessageUnit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.TextMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.TextMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.TextMessage.displayName = 'proto.css.msg.TextMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.ImageMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.ImageMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.ImageMessage.displayName = 'proto.css.msg.ImageMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.VideoMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.VideoMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.VideoMessage.displayName = 'proto.css.msg.VideoMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.AudioMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.AudioMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.AudioMessage.displayName = 'proto.css.msg.AudioMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.LocationMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.LocationMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.LocationMessage.displayName = 'proto.css.msg.LocationMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.AtMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.msg.AtMessage.repeatedFields_, null);
};
goog.inherits(proto.css.msg.AtMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.AtMessage.displayName = 'proto.css.msg.AtMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.ReadReceiptMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.ReadReceiptMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.ReadReceiptMessage.displayName = 'proto.css.msg.ReadReceiptMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.FileMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.FileMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.FileMessage.displayName = 'proto.css.msg.FileMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.RetractMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.msg.RetractMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.RetractMessage.displayName = 'proto.css.msg.RetractMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.msg.CustomSystemMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.msg.CustomSystemMessage.repeatedFields_, null);
};
goog.inherits(proto.css.msg.CustomSystemMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.msg.CustomSystemMessage.displayName = 'proto.css.msg.CustomSystemMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.CustomEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.CustomEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.CustomEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.CustomEntity}
 */
proto.css.msg.CustomEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.CustomEntity;
  return proto.css.msg.CustomEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.CustomEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.CustomEntity}
 */
proto.css.msg.CustomEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.CustomEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.CustomEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.CustomEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.css.msg.CustomEntity.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.CustomEntity.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.css.msg.CustomEntity.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.msg.CustomEntity.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.msg.CustomMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.CustomMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.CustomMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.CustomMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    notification: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customEntityList: jspb.Message.toObjectList(msg.getCustomEntityList(),
    proto.css.msg.CustomEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.CustomMessage}
 */
proto.css.msg.CustomMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.CustomMessage;
  return proto.css.msg.CustomMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.CustomMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.CustomMessage}
 */
proto.css.msg.CustomMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotification(value);
      break;
    case 2:
      var value = new proto.css.msg.CustomEntity;
      reader.readMessage(value,proto.css.msg.CustomEntity.deserializeBinaryFromReader);
      msg.addCustomEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.CustomMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.CustomMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.CustomMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotification();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomEntityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.css.msg.CustomEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string notification = 1;
 * @return {string}
 */
proto.css.msg.CustomMessage.prototype.getNotification = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.CustomMessage.prototype.setNotification = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CustomEntity custom_entity = 2;
 * @return {!Array<!proto.css.msg.CustomEntity>}
 */
proto.css.msg.CustomMessage.prototype.getCustomEntityList = function() {
  return /** @type{!Array<!proto.css.msg.CustomEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.css.msg.CustomEntity, 2));
};


/** @param {!Array<!proto.css.msg.CustomEntity>} value */
proto.css.msg.CustomMessage.prototype.setCustomEntityList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.css.msg.CustomEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.css.msg.CustomEntity}
 */
proto.css.msg.CustomMessage.prototype.addCustomEntity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.css.msg.CustomEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.msg.CustomMessage.prototype.clearCustomEntityList = function() {
  this.setCustomEntityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.msg.CustomNoApnsMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.CustomNoApnsMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.CustomNoApnsMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.CustomNoApnsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomNoApnsMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    notification: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customEntityList: jspb.Message.toObjectList(msg.getCustomEntityList(),
    proto.css.msg.CustomEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.CustomNoApnsMessage}
 */
proto.css.msg.CustomNoApnsMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.CustomNoApnsMessage;
  return proto.css.msg.CustomNoApnsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.CustomNoApnsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.CustomNoApnsMessage}
 */
proto.css.msg.CustomNoApnsMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotification(value);
      break;
    case 2:
      var value = new proto.css.msg.CustomEntity;
      reader.readMessage(value,proto.css.msg.CustomEntity.deserializeBinaryFromReader);
      msg.addCustomEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.CustomNoApnsMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.CustomNoApnsMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.CustomNoApnsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomNoApnsMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotification();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomEntityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.css.msg.CustomEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string notification = 1;
 * @return {string}
 */
proto.css.msg.CustomNoApnsMessage.prototype.getNotification = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.CustomNoApnsMessage.prototype.setNotification = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CustomEntity custom_entity = 2;
 * @return {!Array<!proto.css.msg.CustomEntity>}
 */
proto.css.msg.CustomNoApnsMessage.prototype.getCustomEntityList = function() {
  return /** @type{!Array<!proto.css.msg.CustomEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.css.msg.CustomEntity, 2));
};


/** @param {!Array<!proto.css.msg.CustomEntity>} value */
proto.css.msg.CustomNoApnsMessage.prototype.setCustomEntityList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.css.msg.CustomEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.css.msg.CustomEntity}
 */
proto.css.msg.CustomNoApnsMessage.prototype.addCustomEntity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.css.msg.CustomEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.msg.CustomNoApnsMessage.prototype.clearCustomEntityList = function() {
  this.setCustomEntityList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.MsggwMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.MsggwMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.MsggwMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.MsggwMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    appkey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, ""),
    guid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    notification: jspb.Message.getFieldWithDefault(msg, 4, ""),
    from: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.MsggwMessage}
 */
proto.css.msg.MsggwMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.MsggwMessage;
  return proto.css.msg.MsggwMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.MsggwMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.MsggwMessage}
 */
proto.css.msg.MsggwMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppkey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotification(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.MsggwMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.MsggwMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.MsggwMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.MsggwMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppkey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGuid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getNotification();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string appkey = 1;
 * @return {string}
 */
proto.css.msg.MsggwMessage.prototype.getAppkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.MsggwMessage.prototype.setAppkey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.css.msg.MsggwMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.msg.MsggwMessage.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 guid = 3;
 * @return {number}
 */
proto.css.msg.MsggwMessage.prototype.getGuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.css.msg.MsggwMessage.prototype.setGuid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string notification = 4;
 * @return {string}
 */
proto.css.msg.MsggwMessage.prototype.getNotification = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.css.msg.MsggwMessage.prototype.setNotification = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string from = 5;
 * @return {string}
 */
proto.css.msg.MsggwMessage.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.css.msg.MsggwMessage.prototype.setFrom = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.MessageUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.MessageUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.MessageUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.MessageUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64(),
    isRetracted: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.MessageUnit}
 */
proto.css.msg.MessageUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.MessageUnit;
  return proto.css.msg.MessageUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.MessageUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.MessageUnit}
 */
proto.css.msg.MessageUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.msg.EMsgType} */ (reader.readEnum());
      msg.setMsgType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRetracted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.MessageUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.MessageUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.MessageUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.MessageUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getIsRetracted();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional EMsgType msg_type = 1;
 * @return {!proto.css.msg.EMsgType}
 */
proto.css.msg.MessageUnit.prototype.getMsgType = function() {
  return /** @type {!proto.css.msg.EMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.msg.EMsgType} value */
proto.css.msg.MessageUnit.prototype.setMsgType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.css.msg.MessageUnit.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.css.msg.MessageUnit.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.css.msg.MessageUnit.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value */
proto.css.msg.MessageUnit.prototype.setData = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bool is_retracted = 3;
 * @return {boolean}
 */
proto.css.msg.MessageUnit.prototype.getIsRetracted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.css.msg.MessageUnit.prototype.setIsRetracted = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.TextMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.TextMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.TextMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.TextMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    burnAfterRead: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.TextMessage}
 */
proto.css.msg.TextMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.TextMessage;
  return proto.css.msg.TextMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.TextMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.TextMessage}
 */
proto.css.msg.TextMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBurnAfterRead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.TextMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.TextMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.TextMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.TextMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBurnAfterRead();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.css.msg.TextMessage.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.TextMessage.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool burn_after_read = 2;
 * @return {boolean}
 */
proto.css.msg.TextMessage.prototype.getBurnAfterRead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.css.msg.TextMessage.prototype.setBurnAfterRead = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.ImageMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.ImageMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.ImageMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.ImageMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    originLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bigLink: jspb.Message.getFieldWithDefault(msg, 3, ""),
    middleLink: jspb.Message.getFieldWithDefault(msg, 4, ""),
    smallLink: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fileLength: jspb.Message.getFieldWithDefault(msg, 6, 0),
    isorigin: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    smallWidth: jspb.Message.getFieldWithDefault(msg, 8, 0),
    smallHeight: jspb.Message.getFieldWithDefault(msg, 9, 0),
    middleWidth: jspb.Message.getFieldWithDefault(msg, 10, 0),
    middleHeight: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.ImageMessage}
 */
proto.css.msg.ImageMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.ImageMessage;
  return proto.css.msg.ImageMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.ImageMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.ImageMessage}
 */
proto.css.msg.ImageMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginLink(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBigLink(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddleLink(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmallLink(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileLength(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsorigin(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSmallWidth(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSmallHeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMiddleWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMiddleHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.ImageMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.ImageMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.ImageMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.ImageMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOriginLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBigLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMiddleLink();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSmallLink();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFileLength();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getIsorigin();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSmallWidth();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getSmallHeight();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getMiddleWidth();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getMiddleHeight();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.css.msg.ImageMessage.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.ImageMessage.prototype.setFileName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string origin_link = 2;
 * @return {string}
 */
proto.css.msg.ImageMessage.prototype.getOriginLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.msg.ImageMessage.prototype.setOriginLink = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string big_link = 3;
 * @return {string}
 */
proto.css.msg.ImageMessage.prototype.getBigLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.msg.ImageMessage.prototype.setBigLink = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string middle_link = 4;
 * @return {string}
 */
proto.css.msg.ImageMessage.prototype.getMiddleLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.css.msg.ImageMessage.prototype.setMiddleLink = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string small_link = 5;
 * @return {string}
 */
proto.css.msg.ImageMessage.prototype.getSmallLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.css.msg.ImageMessage.prototype.setSmallLink = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 file_length = 6;
 * @return {number}
 */
proto.css.msg.ImageMessage.prototype.getFileLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.css.msg.ImageMessage.prototype.setFileLength = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool isOrigin = 7;
 * @return {boolean}
 */
proto.css.msg.ImageMessage.prototype.getIsorigin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.css.msg.ImageMessage.prototype.setIsorigin = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional uint32 small_width = 8;
 * @return {number}
 */
proto.css.msg.ImageMessage.prototype.getSmallWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.css.msg.ImageMessage.prototype.setSmallWidth = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 small_height = 9;
 * @return {number}
 */
proto.css.msg.ImageMessage.prototype.getSmallHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.css.msg.ImageMessage.prototype.setSmallHeight = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 middle_width = 10;
 * @return {number}
 */
proto.css.msg.ImageMessage.prototype.getMiddleWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.css.msg.ImageMessage.prototype.setMiddleWidth = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 middle_height = 11;
 * @return {number}
 */
proto.css.msg.ImageMessage.prototype.getMiddleHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.css.msg.ImageMessage.prototype.setMiddleHeight = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.VideoMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.VideoMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.VideoMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.VideoMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    videoLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    videoScreenShortLink: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fileLength: jspb.Message.getFieldWithDefault(msg, 4, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 6, 0),
    width: jspb.Message.getFieldWithDefault(msg, 9, 0),
    height: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.VideoMessage}
 */
proto.css.msg.VideoMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.VideoMessage;
  return proto.css.msg.VideoMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.VideoMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.VideoMessage}
 */
proto.css.msg.VideoMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVideoLink(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVideoScreenShortLink(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileLength(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuration(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.VideoMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.VideoMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.VideoMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.VideoMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVideoLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVideoScreenShortLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFileLength();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.css.msg.VideoMessage.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.VideoMessage.prototype.setFileName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string video_link = 2;
 * @return {string}
 */
proto.css.msg.VideoMessage.prototype.getVideoLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.msg.VideoMessage.prototype.setVideoLink = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string video_screen_short_link = 3;
 * @return {string}
 */
proto.css.msg.VideoMessage.prototype.getVideoScreenShortLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.msg.VideoMessage.prototype.setVideoScreenShortLink = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 file_length = 4;
 * @return {number}
 */
proto.css.msg.VideoMessage.prototype.getFileLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.css.msg.VideoMessage.prototype.setFileLength = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 duration = 6;
 * @return {number}
 */
proto.css.msg.VideoMessage.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.css.msg.VideoMessage.prototype.setDuration = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 width = 9;
 * @return {number}
 */
proto.css.msg.VideoMessage.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.css.msg.VideoMessage.prototype.setWidth = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 height = 10;
 * @return {number}
 */
proto.css.msg.VideoMessage.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.css.msg.VideoMessage.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.AudioMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.AudioMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.AudioMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.AudioMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    audioLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileLength: jspb.Message.getFieldWithDefault(msg, 4, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.AudioMessage}
 */
proto.css.msg.AudioMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.AudioMessage;
  return proto.css.msg.AudioMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.AudioMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.AudioMessage}
 */
proto.css.msg.AudioMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAudioLink(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileLength(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.AudioMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.AudioMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.AudioMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.AudioMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAudioLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileLength();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.css.msg.AudioMessage.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.AudioMessage.prototype.setFileName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string audio_link = 2;
 * @return {string}
 */
proto.css.msg.AudioMessage.prototype.getAudioLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.msg.AudioMessage.prototype.setAudioLink = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 file_length = 4;
 * @return {number}
 */
proto.css.msg.AudioMessage.prototype.getFileLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.css.msg.AudioMessage.prototype.setFileLength = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 duration = 5;
 * @return {number}
 */
proto.css.msg.AudioMessage.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.css.msg.AudioMessage.prototype.setDuration = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.LocationMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.LocationMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.LocationMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.LocationMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    originLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileLength: jspb.Message.getFieldWithDefault(msg, 4, 0),
    width: jspb.Message.getFieldWithDefault(msg, 5, 0),
    height: jspb.Message.getFieldWithDefault(msg, 6, 0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    locationDesc: jspb.Message.getFieldWithDefault(msg, 9, ""),
    locationAddress: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.LocationMessage}
 */
proto.css.msg.LocationMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.LocationMessage;
  return proto.css.msg.LocationMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.LocationMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.LocationMessage}
 */
proto.css.msg.LocationMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginLink(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileLength(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationDesc(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.LocationMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.LocationMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.LocationMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.LocationMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOriginLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileLength();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getLocationDesc();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLocationAddress();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.css.msg.LocationMessage.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.LocationMessage.prototype.setFileName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string origin_link = 2;
 * @return {string}
 */
proto.css.msg.LocationMessage.prototype.getOriginLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.msg.LocationMessage.prototype.setOriginLink = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 file_length = 4;
 * @return {number}
 */
proto.css.msg.LocationMessage.prototype.getFileLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.css.msg.LocationMessage.prototype.setFileLength = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 width = 5;
 * @return {number}
 */
proto.css.msg.LocationMessage.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.css.msg.LocationMessage.prototype.setWidth = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 height = 6;
 * @return {number}
 */
proto.css.msg.LocationMessage.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.css.msg.LocationMessage.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double longitude = 7;
 * @return {number}
 */
proto.css.msg.LocationMessage.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.css.msg.LocationMessage.prototype.setLongitude = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double latitude = 8;
 * @return {number}
 */
proto.css.msg.LocationMessage.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.css.msg.LocationMessage.prototype.setLatitude = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string location_desc = 9;
 * @return {string}
 */
proto.css.msg.LocationMessage.prototype.getLocationDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.css.msg.LocationMessage.prototype.setLocationDesc = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string location_address = 10;
 * @return {string}
 */
proto.css.msg.LocationMessage.prototype.getLocationAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.css.msg.LocationMessage.prototype.setLocationAddress = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.msg.AtMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.AtMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.AtMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.AtMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.AtMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    atMemberList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    atAll: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    text: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.AtMessage}
 */
proto.css.msg.AtMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.AtMessage;
  return proto.css.msg.AtMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.AtMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.AtMessage}
 */
proto.css.msg.AtMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAtMember(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAtAll(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.AtMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.AtMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.AtMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.AtMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAtMemberList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getAtAll();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated string at_member = 1;
 * @return {!Array<string>}
 */
proto.css.msg.AtMessage.prototype.getAtMemberList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.css.msg.AtMessage.prototype.setAtMemberList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.css.msg.AtMessage.prototype.addAtMember = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.msg.AtMessage.prototype.clearAtMemberList = function() {
  this.setAtMemberList([]);
};


/**
 * optional bool at_all = 2;
 * @return {boolean}
 */
proto.css.msg.AtMessage.prototype.getAtAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.css.msg.AtMessage.prototype.setAtAll = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string text = 3;
 * @return {string}
 */
proto.css.msg.AtMessage.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.msg.AtMessage.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.ReadReceiptMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.ReadReceiptMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.ReadReceiptMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.ReadReceiptMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiptGuid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.ReadReceiptMessage}
 */
proto.css.msg.ReadReceiptMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.ReadReceiptMessage;
  return proto.css.msg.ReadReceiptMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.ReadReceiptMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.ReadReceiptMessage}
 */
proto.css.msg.ReadReceiptMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReceiptGuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.ReadReceiptMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.ReadReceiptMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.ReadReceiptMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.ReadReceiptMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiptGuid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 receipt_guid = 1;
 * @return {number}
 */
proto.css.msg.ReadReceiptMessage.prototype.getReceiptGuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.css.msg.ReadReceiptMessage.prototype.setReceiptGuid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.FileMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.FileMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.FileMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.FileMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileLength: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.FileMessage}
 */
proto.css.msg.FileMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.FileMessage;
  return proto.css.msg.FileMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.FileMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.FileMessage}
 */
proto.css.msg.FileMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileLink(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.FileMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.FileMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.FileMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.FileMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileLength();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.css.msg.FileMessage.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.FileMessage.prototype.setFileName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string file_link = 2;
 * @return {string}
 */
proto.css.msg.FileMessage.prototype.getFileLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.msg.FileMessage.prototype.setFileLink = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 file_length = 3;
 * @return {number}
 */
proto.css.msg.FileMessage.prototype.getFileLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.css.msg.FileMessage.prototype.setFileLength = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.RetractMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.RetractMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.RetractMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.RetractMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    retractGuid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.RetractMessage}
 */
proto.css.msg.RetractMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.RetractMessage;
  return proto.css.msg.RetractMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.RetractMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.RetractMessage}
 */
proto.css.msg.RetractMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRetractGuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.RetractMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.RetractMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.RetractMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.RetractMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetractGuid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 retract_guid = 1;
 * @return {number}
 */
proto.css.msg.RetractMessage.prototype.getRetractGuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.css.msg.RetractMessage.prototype.setRetractGuid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.msg.CustomSystemMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.msg.CustomSystemMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.css.msg.CustomSystemMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.msg.CustomSystemMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomSystemMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    pushTime: jspb.Message.getFieldWithDefault(msg, 1, ""),
    msgList: jspb.Message.toObjectList(msg.getMsgList(),
    common_base_pb.I18nmsg.toObject, includeInstance),
    bizCode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.msg.CustomSystemMessage}
 */
proto.css.msg.CustomSystemMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.msg.CustomSystemMessage;
  return proto.css.msg.CustomSystemMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.msg.CustomSystemMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.msg.CustomSystemMessage}
 */
proto.css.msg.CustomSystemMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushTime(value);
      break;
    case 2:
      var value = new common_base_pb.I18nmsg;
      reader.readMessage(value,common_base_pb.I18nmsg.deserializeBinaryFromReader);
      msg.addMsg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBizCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.msg.CustomSystemMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.msg.CustomSystemMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.msg.CustomSystemMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.msg.CustomSystemMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPushTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMsgList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_base_pb.I18nmsg.serializeBinaryToWriter
    );
  }
  f = message.getBizCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string push_time = 1;
 * @return {string}
 */
proto.css.msg.CustomSystemMessage.prototype.getPushTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.msg.CustomSystemMessage.prototype.setPushTime = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated common.base.I18nmsg msg = 2;
 * @return {!Array<!proto.common.base.I18nmsg>}
 */
proto.css.msg.CustomSystemMessage.prototype.getMsgList = function() {
  return /** @type{!Array<!proto.common.base.I18nmsg>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_base_pb.I18nmsg, 2));
};


/** @param {!Array<!proto.common.base.I18nmsg>} value */
proto.css.msg.CustomSystemMessage.prototype.setMsgList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.common.base.I18nmsg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.common.base.I18nmsg}
 */
proto.css.msg.CustomSystemMessage.prototype.addMsg = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.common.base.I18nmsg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.msg.CustomSystemMessage.prototype.clearMsgList = function() {
  this.setMsgList([]);
};


/**
 * optional string biz_code = 3;
 * @return {string}
 */
proto.css.msg.CustomSystemMessage.prototype.getBizCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.msg.CustomSystemMessage.prototype.setBizCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.css.msg.EMsgType = {
  CHAT_MSG: 0,
  GROUP_MSG: 1,
  GROUP_SIGNAL: 2,
  MSGGW_MSG: 3,
  SYSTEM_MSG: 4,
  MULTI_MSG: 5,
  CHATROOM_MSG: 6,
  PRIVATE_MSG: 7,
  CUSTOM_MSG: 9
};

/**
 * @enum {number}
 */
proto.css.msg.EMsgContentType = {
  TEXT: 0,
  IMAGE: 1,
  VIDEO: 2,
  AUDIO: 3,
  LOCATION: 4,
  AT: 5,
  READ_RECEIPT: 6,
  FILE: 7,
  RETRACT: 8,
  CUSTOM: 9,
  JIMAO_READED: 10,
  JIMAO_SENDED: 11,
  CUSTOM_NO_APNS: 31,
  CUSTOM_FAMILY: 32,
  SYSTEM_CUSTOM: 33
};

goog.object.extend(exports, proto.css.msg);
