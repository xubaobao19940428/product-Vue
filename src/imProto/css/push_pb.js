// source: css/push.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var css_errcode_pb = require('../css/errcode_pb.js');
goog.object.extend(proto, css_errcode_pb);
var css_ntf_pb = require('../css/ntf_pb.js');
goog.object.extend(proto, css_ntf_pb);
var css_msg_pb = require('../css/msg_pb.js');
goog.object.extend(proto, css_msg_pb);
var common_enum_pb = require('../common/enum_pb.js');
goog.object.extend(proto, common_enum_pb);
var css_enum_pb = require('../css/enum_pb.js');
goog.object.extend(proto, css_enum_pb);
var css_base_pb = require('../css/base_pb.js');
goog.object.extend(proto, css_base_pb);
goog.exportSymbol('proto.css.push.AckMessageReq', null, global);
goog.exportSymbol('proto.css.push.AckMessageResp', null, global);
goog.exportSymbol('proto.css.push.ClearTokenRequest', null, global);
goog.exportSymbol('proto.css.push.CommonResponse', null, global);
goog.exportSymbol('proto.css.push.CreateCertRequest', null, global);
goog.exportSymbol('proto.css.push.DeleteReportDeviceInfoReq', null, global);
goog.exportSymbol('proto.css.push.DeleteReportDeviceInfoResp', null, global);
goog.exportSymbol('proto.css.push.ECHANNELTYPE', null, global);
goog.exportSymbol('proto.css.push.EPushType', null, global);
goog.exportSymbol('proto.css.push.MessageListItem', null, global);
goog.exportSymbol('proto.css.push.MessageQueryReq', null, global);
goog.exportSymbol('proto.css.push.MessageQueryResp', null, global);
goog.exportSymbol('proto.css.push.OperateCertRequest', null, global);
goog.exportSymbol('proto.css.push.PushRequest', null, global);
goog.exportSymbol('proto.css.push.PushResponse', null, global);
goog.exportSymbol('proto.css.push.QueryCertResponse', null, global);
goog.exportSymbol('proto.css.push.QueryMessageStatusReq', null, global);
goog.exportSymbol('proto.css.push.QueryMessageStatusResp', null, global);
goog.exportSymbol('proto.css.push.ReportDeviceInfoReq', null, global);
goog.exportSymbol('proto.css.push.ReportDeviceInfoResp', null, global);
goog.exportSymbol('proto.css.push.RouteKickNotificationRequest', null, global);
goog.exportSymbol('proto.css.push.RouteKickNotificationResponse', null, global);
goog.exportSymbol('proto.css.push.RoutePartnerClientRequest', null, global);
goog.exportSymbol('proto.css.push.RoutePartnerClientResponse', null, global);
goog.exportSymbol('proto.css.push.RouteRequest', null, global);
goog.exportSymbol('proto.css.push.RouteResponse', null, global);
goog.exportSymbol('proto.css.push.RouteRetractNotificationRequest', null, global);
goog.exportSymbol('proto.css.push.RouteRetractNotificationResponse', null, global);
goog.exportSymbol('proto.css.push.SetBadgeRequest', null, global);
goog.exportSymbol('proto.css.push.SetTokenRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.push.RouteRequest.repeatedFields_, null);
};
goog.inherits(proto.css.push.RouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RouteRequest.displayName = 'proto.css.push.RouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.RouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RouteResponse.displayName = 'proto.css.push.RouteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RouteKickNotificationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.RouteKickNotificationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RouteKickNotificationRequest.displayName = 'proto.css.push.RouteKickNotificationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RouteKickNotificationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.RouteKickNotificationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RouteKickNotificationResponse.displayName = 'proto.css.push.RouteKickNotificationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RouteRetractNotificationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.push.RouteRetractNotificationRequest.repeatedFields_, null);
};
goog.inherits(proto.css.push.RouteRetractNotificationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RouteRetractNotificationRequest.displayName = 'proto.css.push.RouteRetractNotificationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RouteRetractNotificationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.RouteRetractNotificationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RouteRetractNotificationResponse.displayName = 'proto.css.push.RouteRetractNotificationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RoutePartnerClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.RoutePartnerClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RoutePartnerClientRequest.displayName = 'proto.css.push.RoutePartnerClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.RoutePartnerClientResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.RoutePartnerClientResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.RoutePartnerClientResponse.displayName = 'proto.css.push.RoutePartnerClientResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.PushRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.push.PushRequest.repeatedFields_, null);
};
goog.inherits(proto.css.push.PushRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.PushRequest.displayName = 'proto.css.push.PushRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.PushResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.PushResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.PushResponse.displayName = 'proto.css.push.PushResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.CommonResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.CommonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.CommonResponse.displayName = 'proto.css.push.CommonResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.SetTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.SetTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.SetTokenRequest.displayName = 'proto.css.push.SetTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.ClearTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.ClearTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.ClearTokenRequest.displayName = 'proto.css.push.ClearTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.CreateCertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.CreateCertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.CreateCertRequest.displayName = 'proto.css.push.CreateCertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.OperateCertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.OperateCertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.OperateCertRequest.displayName = 'proto.css.push.OperateCertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.QueryCertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.QueryCertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.QueryCertResponse.displayName = 'proto.css.push.QueryCertResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.SetBadgeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.SetBadgeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.SetBadgeRequest.displayName = 'proto.css.push.SetBadgeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.ReportDeviceInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.ReportDeviceInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.ReportDeviceInfoReq.displayName = 'proto.css.push.ReportDeviceInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.ReportDeviceInfoResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.ReportDeviceInfoResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.ReportDeviceInfoResp.displayName = 'proto.css.push.ReportDeviceInfoResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.DeleteReportDeviceInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.DeleteReportDeviceInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.DeleteReportDeviceInfoReq.displayName = 'proto.css.push.DeleteReportDeviceInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.DeleteReportDeviceInfoResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.DeleteReportDeviceInfoResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.DeleteReportDeviceInfoResp.displayName = 'proto.css.push.DeleteReportDeviceInfoResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.MessageQueryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.MessageQueryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.MessageQueryReq.displayName = 'proto.css.push.MessageQueryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.MessageQueryResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.css.push.MessageQueryResp.repeatedFields_, null);
};
goog.inherits(proto.css.push.MessageQueryResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.MessageQueryResp.displayName = 'proto.css.push.MessageQueryResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.MessageListItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.MessageListItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.MessageListItem.displayName = 'proto.css.push.MessageListItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.QueryMessageStatusReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.QueryMessageStatusReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.QueryMessageStatusReq.displayName = 'proto.css.push.QueryMessageStatusReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.QueryMessageStatusResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.QueryMessageStatusResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.QueryMessageStatusResp.displayName = 'proto.css.push.QueryMessageStatusResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.AckMessageReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.AckMessageReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.AckMessageReq.displayName = 'proto.css.push.AckMessageReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.css.push.AckMessageResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.css.push.AckMessageResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.css.push.AckMessageResp.displayName = 'proto.css.push.AckMessageResp';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.push.RouteRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    toUsernameList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    appkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    notiContent: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ntfType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    onlyOnlineNtf: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    msgType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fromUsername: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fromClientType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    hideParam: jspb.Message.getFieldWithDefault(msg, 9, ""),
    oldSdkSkipPush: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    channelType: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RouteRequest}
 */
proto.css.push.RouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RouteRequest;
  return proto.css.push.RouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RouteRequest}
 */
proto.css.push.RouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addToUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppkey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotiContent(value);
      break;
    case 4:
      var value = /** @type {!proto.css.ntf.ENtfType} */ (reader.readEnum());
      msg.setNtfType(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyOnlineNtf(value);
      break;
    case 6:
      var value = /** @type {!proto.css.msg.EMsgType} */ (reader.readEnum());
      msg.setMsgType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromUsername(value);
      break;
    case 8:
      var value = /** @type {!proto.css.enum.EClientType} */ (reader.readEnum());
      msg.setFromClientType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHideParam(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOldSdkSkipPush(value);
      break;
    case 11:
      var value = /** @type {!proto.css.push.ECHANNELTYPE} */ (reader.readEnum());
      msg.setChannelType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToUsernameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getAppkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNotiContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNtfType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getOnlyOnlineNtf();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMsgType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFromUsername();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFromClientType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getHideParam();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOldSdkSkipPush();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getChannelType();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
};


/**
 * repeated string to_username = 1;
 * @return {!Array<string>}
 */
proto.css.push.RouteRequest.prototype.getToUsernameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.css.push.RouteRequest.prototype.setToUsernameList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.css.push.RouteRequest.prototype.addToUsername = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.push.RouteRequest.prototype.clearToUsernameList = function() {
  this.setToUsernameList([]);
};


/**
 * optional string appkey = 2;
 * @return {string}
 */
proto.css.push.RouteRequest.prototype.getAppkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.RouteRequest.prototype.setAppkey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string noti_content = 3;
 * @return {string}
 */
proto.css.push.RouteRequest.prototype.getNotiContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.push.RouteRequest.prototype.setNotiContent = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional css.ntf.ENtfType ntf_type = 4;
 * @return {!proto.css.ntf.ENtfType}
 */
proto.css.push.RouteRequest.prototype.getNtfType = function() {
  return /** @type {!proto.css.ntf.ENtfType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.css.ntf.ENtfType} value */
proto.css.push.RouteRequest.prototype.setNtfType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional bool only_online_ntf = 5;
 * @return {boolean}
 */
proto.css.push.RouteRequest.prototype.getOnlyOnlineNtf = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.css.push.RouteRequest.prototype.setOnlyOnlineNtf = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional css.msg.EMsgType msg_type = 6;
 * @return {!proto.css.msg.EMsgType}
 */
proto.css.push.RouteRequest.prototype.getMsgType = function() {
  return /** @type {!proto.css.msg.EMsgType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.css.msg.EMsgType} value */
proto.css.push.RouteRequest.prototype.setMsgType = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string from_username = 7;
 * @return {string}
 */
proto.css.push.RouteRequest.prototype.getFromUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.css.push.RouteRequest.prototype.setFromUsername = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional css.enum.EClientType from_client_type = 8;
 * @return {!proto.css.enum.EClientType}
 */
proto.css.push.RouteRequest.prototype.getFromClientType = function() {
  return /** @type {!proto.css.enum.EClientType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.css.enum.EClientType} value */
proto.css.push.RouteRequest.prototype.setFromClientType = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string hide_param = 9;
 * @return {string}
 */
proto.css.push.RouteRequest.prototype.getHideParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.css.push.RouteRequest.prototype.setHideParam = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool old_sdk_skip_push = 10;
 * @return {boolean}
 */
proto.css.push.RouteRequest.prototype.getOldSdkSkipPush = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.css.push.RouteRequest.prototype.setOldSdkSkipPush = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional ECHANNELTYPE channel_type = 11;
 * @return {!proto.css.push.ECHANNELTYPE}
 */
proto.css.push.RouteRequest.prototype.getChannelType = function() {
  return /** @type {!proto.css.push.ECHANNELTYPE} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.css.push.ECHANNELTYPE} value */
proto.css.push.RouteRequest.prototype.setChannelType = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0),
    srvTime: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RouteResponse}
 */
proto.css.push.RouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RouteResponse;
  return proto.css.push.RouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RouteResponse}
 */
proto.css.push.RouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrvTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSrvTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.RouteResponse.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.RouteResponse.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 srv_time = 2;
 * @return {number}
 */
proto.css.push.RouteResponse.prototype.getSrvTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.css.push.RouteResponse.prototype.setSrvTime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RouteKickNotificationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RouteKickNotificationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RouteKickNotificationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteKickNotificationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kickNotification: (f = msg.getKickNotification()) && css_ntf_pb.KickNotification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RouteKickNotificationRequest}
 */
proto.css.push.RouteKickNotificationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RouteKickNotificationRequest;
  return proto.css.push.RouteKickNotificationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RouteKickNotificationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RouteKickNotificationRequest}
 */
proto.css.push.RouteKickNotificationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSid(value);
      break;
    case 2:
      var value = new css_ntf_pb.KickNotification;
      reader.readMessage(value,css_ntf_pb.KickNotification.deserializeBinaryFromReader);
      msg.setKickNotification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RouteKickNotificationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RouteKickNotificationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RouteKickNotificationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteKickNotificationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKickNotification();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      css_ntf_pb.KickNotification.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sid = 1;
 * @return {string}
 */
proto.css.push.RouteKickNotificationRequest.prototype.getSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.RouteKickNotificationRequest.prototype.setSid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional css.ntf.KickNotification kick_notification = 2;
 * @return {?proto.css.ntf.KickNotification}
 */
proto.css.push.RouteKickNotificationRequest.prototype.getKickNotification = function() {
  return /** @type{?proto.css.ntf.KickNotification} */ (
    jspb.Message.getWrapperField(this, css_ntf_pb.KickNotification, 2));
};


/** @param {?proto.css.ntf.KickNotification|undefined} value */
proto.css.push.RouteKickNotificationRequest.prototype.setKickNotification = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.css.push.RouteKickNotificationRequest.prototype.clearKickNotification = function() {
  this.setKickNotification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.css.push.RouteKickNotificationRequest.prototype.hasKickNotification = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RouteKickNotificationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RouteKickNotificationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RouteKickNotificationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteKickNotificationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RouteKickNotificationResponse}
 */
proto.css.push.RouteKickNotificationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RouteKickNotificationResponse;
  return proto.css.push.RouteKickNotificationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RouteKickNotificationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RouteKickNotificationResponse}
 */
proto.css.push.RouteKickNotificationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RouteKickNotificationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RouteKickNotificationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RouteKickNotificationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteKickNotificationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.RouteKickNotificationResponse.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.RouteKickNotificationResponse.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.push.RouteRetractNotificationRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RouteRetractNotificationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RouteRetractNotificationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteRetractNotificationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    toUsernameList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    appkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    retractNotification: (f = msg.getRetractNotification()) && css_ntf_pb.RetractNotification.toObject(includeInstance, f),
    fromUsername: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fromClientType: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RouteRetractNotificationRequest}
 */
proto.css.push.RouteRetractNotificationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RouteRetractNotificationRequest;
  return proto.css.push.RouteRetractNotificationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RouteRetractNotificationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RouteRetractNotificationRequest}
 */
proto.css.push.RouteRetractNotificationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addToUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppkey(value);
      break;
    case 3:
      var value = new css_ntf_pb.RetractNotification;
      reader.readMessage(value,css_ntf_pb.RetractNotification.deserializeBinaryFromReader);
      msg.setRetractNotification(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromUsername(value);
      break;
    case 8:
      var value = /** @type {!proto.css.enum.EClientType} */ (reader.readEnum());
      msg.setFromClientType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RouteRetractNotificationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RouteRetractNotificationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteRetractNotificationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToUsernameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getAppkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRetractNotification();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      css_ntf_pb.RetractNotification.serializeBinaryToWriter
    );
  }
  f = message.getFromUsername();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFromClientType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * repeated string to_username = 1;
 * @return {!Array<string>}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.getToUsernameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.css.push.RouteRetractNotificationRequest.prototype.setToUsernameList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.css.push.RouteRetractNotificationRequest.prototype.addToUsername = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.push.RouteRetractNotificationRequest.prototype.clearToUsernameList = function() {
  this.setToUsernameList([]);
};


/**
 * optional string appkey = 2;
 * @return {string}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.getAppkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.RouteRetractNotificationRequest.prototype.setAppkey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional css.ntf.RetractNotification retract_notification = 3;
 * @return {?proto.css.ntf.RetractNotification}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.getRetractNotification = function() {
  return /** @type{?proto.css.ntf.RetractNotification} */ (
    jspb.Message.getWrapperField(this, css_ntf_pb.RetractNotification, 3));
};


/** @param {?proto.css.ntf.RetractNotification|undefined} value */
proto.css.push.RouteRetractNotificationRequest.prototype.setRetractNotification = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.css.push.RouteRetractNotificationRequest.prototype.clearRetractNotification = function() {
  this.setRetractNotification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.hasRetractNotification = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string from_username = 7;
 * @return {string}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.getFromUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.css.push.RouteRetractNotificationRequest.prototype.setFromUsername = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional css.enum.EClientType from_client_type = 8;
 * @return {!proto.css.enum.EClientType}
 */
proto.css.push.RouteRetractNotificationRequest.prototype.getFromClientType = function() {
  return /** @type {!proto.css.enum.EClientType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.css.enum.EClientType} value */
proto.css.push.RouteRetractNotificationRequest.prototype.setFromClientType = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RouteRetractNotificationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RouteRetractNotificationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RouteRetractNotificationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteRetractNotificationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RouteRetractNotificationResponse}
 */
proto.css.push.RouteRetractNotificationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RouteRetractNotificationResponse;
  return proto.css.push.RouteRetractNotificationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RouteRetractNotificationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RouteRetractNotificationResponse}
 */
proto.css.push.RouteRetractNotificationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RouteRetractNotificationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RouteRetractNotificationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RouteRetractNotificationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RouteRetractNotificationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.RouteRetractNotificationResponse.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.RouteRetractNotificationResponse.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RoutePartnerClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RoutePartnerClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RoutePartnerClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RoutePartnerClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    toUsername: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    notiContent: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ntfType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    msgType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    fromUsername: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fromClientType: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RoutePartnerClientRequest}
 */
proto.css.push.RoutePartnerClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RoutePartnerClientRequest;
  return proto.css.push.RoutePartnerClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RoutePartnerClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RoutePartnerClientRequest}
 */
proto.css.push.RoutePartnerClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppkey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotiContent(value);
      break;
    case 4:
      var value = /** @type {!proto.css.ntf.ENtfType} */ (reader.readEnum());
      msg.setNtfType(value);
      break;
    case 5:
      var value = /** @type {!proto.css.msg.EMsgType} */ (reader.readEnum());
      msg.setMsgType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromUsername(value);
      break;
    case 7:
      var value = /** @type {!proto.css.enum.EClientType} */ (reader.readEnum());
      msg.setFromClientType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RoutePartnerClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RoutePartnerClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RoutePartnerClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RoutePartnerClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNotiContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNtfType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMsgType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getFromUsername();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFromClientType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional string to_username = 1;
 * @return {string}
 */
proto.css.push.RoutePartnerClientRequest.prototype.getToUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.RoutePartnerClientRequest.prototype.setToUsername = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string appkey = 2;
 * @return {string}
 */
proto.css.push.RoutePartnerClientRequest.prototype.getAppkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.RoutePartnerClientRequest.prototype.setAppkey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string noti_content = 3;
 * @return {string}
 */
proto.css.push.RoutePartnerClientRequest.prototype.getNotiContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.push.RoutePartnerClientRequest.prototype.setNotiContent = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional css.ntf.ENtfType ntf_type = 4;
 * @return {!proto.css.ntf.ENtfType}
 */
proto.css.push.RoutePartnerClientRequest.prototype.getNtfType = function() {
  return /** @type {!proto.css.ntf.ENtfType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.css.ntf.ENtfType} value */
proto.css.push.RoutePartnerClientRequest.prototype.setNtfType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional css.msg.EMsgType msg_type = 5;
 * @return {!proto.css.msg.EMsgType}
 */
proto.css.push.RoutePartnerClientRequest.prototype.getMsgType = function() {
  return /** @type {!proto.css.msg.EMsgType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.css.msg.EMsgType} value */
proto.css.push.RoutePartnerClientRequest.prototype.setMsgType = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string from_username = 6;
 * @return {string}
 */
proto.css.push.RoutePartnerClientRequest.prototype.getFromUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.css.push.RoutePartnerClientRequest.prototype.setFromUsername = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional css.enum.EClientType from_client_type = 7;
 * @return {!proto.css.enum.EClientType}
 */
proto.css.push.RoutePartnerClientRequest.prototype.getFromClientType = function() {
  return /** @type {!proto.css.enum.EClientType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.css.enum.EClientType} value */
proto.css.push.RoutePartnerClientRequest.prototype.setFromClientType = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.RoutePartnerClientResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.RoutePartnerClientResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.RoutePartnerClientResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RoutePartnerClientResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.RoutePartnerClientResponse}
 */
proto.css.push.RoutePartnerClientResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.RoutePartnerClientResponse;
  return proto.css.push.RoutePartnerClientResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.RoutePartnerClientResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.RoutePartnerClientResponse}
 */
proto.css.push.RoutePartnerClientResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.RoutePartnerClientResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.RoutePartnerClientResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.RoutePartnerClientResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.RoutePartnerClientResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.RoutePartnerClientResponse.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.RoutePartnerClientResponse.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.push.PushRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.PushRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.PushRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.PushRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.PushRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hideparam: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.PushRequest}
 */
proto.css.push.PushRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.PushRequest;
  return proto.css.push.PushRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.PushRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.PushRequest}
 */
proto.css.push.PushRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHideparam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.PushRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.PushRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.PushRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.PushRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHideparam();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated string uid = 1;
 * @return {!Array<string>}
 */
proto.css.push.PushRequest.prototype.getUidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.css.push.PushRequest.prototype.setUidList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.css.push.PushRequest.prototype.addUid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.push.PushRequest.prototype.clearUidList = function() {
  this.setUidList([]);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.css.push.PushRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.PushRequest.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hideparam = 3;
 * @return {string}
 */
proto.css.push.PushRequest.prototype.getHideparam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.push.PushRequest.prototype.setHideparam = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.PushResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.PushResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.PushResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.PushResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0),
    srvTime: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.PushResponse}
 */
proto.css.push.PushResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.PushResponse;
  return proto.css.push.PushResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.PushResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.PushResponse}
 */
proto.css.push.PushResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrvTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.PushResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.PushResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.PushResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.PushResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSrvTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.PushResponse.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.PushResponse.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 srv_time = 2;
 * @return {number}
 */
proto.css.push.PushResponse.prototype.getSrvTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.css.push.PushResponse.prototype.setSrvTime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.CommonResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.CommonResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.CommonResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.CommonResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.CommonResponse}
 */
proto.css.push.CommonResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.CommonResponse;
  return proto.css.push.CommonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.CommonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.CommonResponse}
 */
proto.css.push.CommonResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.CommonResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.CommonResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.CommonResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.CommonResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.CommonResponse.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.CommonResponse.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.SetTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.SetTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.SetTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.SetTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crtType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    iosToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    androidToken: jspb.Message.getFieldWithDefault(msg, 4, ""),
    androidAppsecret: jspb.Message.getFieldWithDefault(msg, 5, ""),
    androidPackageName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    baseInfo: (f = msg.getBaseInfo()) && css_base_pb.MobileBase.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.SetTokenRequest}
 */
proto.css.push.SetTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.SetTokenRequest;
  return proto.css.push.SetTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.SetTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.SetTokenRequest}
 */
proto.css.push.SetTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.push.EPushType} */ (reader.readEnum());
      msg.setCrtType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAndroidToken(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAndroidAppsecret(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAndroidPackageName(value);
      break;
    case 7:
      var value = new css_base_pb.MobileBase;
      reader.readMessage(value,css_base_pb.MobileBase.deserializeBinaryFromReader);
      msg.setBaseInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.SetTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.SetTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.SetTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.SetTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrtType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIosToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAndroidToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAndroidAppsecret();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAndroidPackageName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBaseInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      css_base_pb.MobileBase.serializeBinaryToWriter
    );
  }
};


/**
 * optional EPushType crt_type = 1;
 * @return {!proto.css.push.EPushType}
 */
proto.css.push.SetTokenRequest.prototype.getCrtType = function() {
  return /** @type {!proto.css.push.EPushType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.push.EPushType} value */
proto.css.push.SetTokenRequest.prototype.setCrtType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string ios_token = 2;
 * @return {string}
 */
proto.css.push.SetTokenRequest.prototype.getIosToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.SetTokenRequest.prototype.setIosToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string uid = 3;
 * @return {string}
 */
proto.css.push.SetTokenRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.push.SetTokenRequest.prototype.setUid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string android_token = 4;
 * @return {string}
 */
proto.css.push.SetTokenRequest.prototype.getAndroidToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.css.push.SetTokenRequest.prototype.setAndroidToken = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string android_appsecret = 5;
 * @return {string}
 */
proto.css.push.SetTokenRequest.prototype.getAndroidAppsecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.css.push.SetTokenRequest.prototype.setAndroidAppsecret = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string android_package_name = 6;
 * @return {string}
 */
proto.css.push.SetTokenRequest.prototype.getAndroidPackageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.css.push.SetTokenRequest.prototype.setAndroidPackageName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional css.base.MobileBase base_info = 7;
 * @return {?proto.css.base.MobileBase}
 */
proto.css.push.SetTokenRequest.prototype.getBaseInfo = function() {
  return /** @type{?proto.css.base.MobileBase} */ (
    jspb.Message.getWrapperField(this, css_base_pb.MobileBase, 7));
};


/** @param {?proto.css.base.MobileBase|undefined} value */
proto.css.push.SetTokenRequest.prototype.setBaseInfo = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.css.push.SetTokenRequest.prototype.clearBaseInfo = function() {
  this.setBaseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.css.push.SetTokenRequest.prototype.hasBaseInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.ClearTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.ClearTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.ClearTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.ClearTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.ClearTokenRequest}
 */
proto.css.push.ClearTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.ClearTokenRequest;
  return proto.css.push.ClearTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.ClearTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.ClearTokenRequest}
 */
proto.css.push.ClearTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.ClearTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.ClearTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.ClearTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.ClearTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.css.push.ClearTokenRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.ClearTokenRequest.prototype.setUid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.CreateCertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.CreateCertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.CreateCertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.CreateCertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    iosDevelopCrtName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    iosDevelopCrt: msg.getIosDevelopCrt_asB64(),
    iosDevelopCrtPwd: jspb.Message.getFieldWithDefault(msg, 4, ""),
    iosProductCrtName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    iosProductCrt: msg.getIosProductCrt_asB64(),
    iosProductCrtPwd: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.CreateCertRequest}
 */
proto.css.push.CreateCertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.CreateCertRequest;
  return proto.css.push.CreateCertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.CreateCertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.CreateCertRequest}
 */
proto.css.push.CreateCertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosDevelopCrtName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppkey(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIosDevelopCrt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosDevelopCrtPwd(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosProductCrtName(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIosProductCrt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosProductCrtPwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.CreateCertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.CreateCertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.CreateCertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.CreateCertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIosDevelopCrtName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIosDevelopCrt_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getIosDevelopCrtPwd();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIosProductCrtName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIosProductCrt_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getIosProductCrtPwd();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string ios_develop_crt_name = 1;
 * @return {string}
 */
proto.css.push.CreateCertRequest.prototype.getIosDevelopCrtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.CreateCertRequest.prototype.setIosDevelopCrtName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string appkey = 2;
 * @return {string}
 */
proto.css.push.CreateCertRequest.prototype.getAppkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.CreateCertRequest.prototype.setAppkey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes ios_develop_crt = 3;
 * @return {!(string|Uint8Array)}
 */
proto.css.push.CreateCertRequest.prototype.getIosDevelopCrt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes ios_develop_crt = 3;
 * This is a type-conversion wrapper around `getIosDevelopCrt()`
 * @return {string}
 */
proto.css.push.CreateCertRequest.prototype.getIosDevelopCrt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIosDevelopCrt()));
};


/**
 * optional bytes ios_develop_crt = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIosDevelopCrt()`
 * @return {!Uint8Array}
 */
proto.css.push.CreateCertRequest.prototype.getIosDevelopCrt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIosDevelopCrt()));
};


/** @param {!(string|Uint8Array)} value */
proto.css.push.CreateCertRequest.prototype.setIosDevelopCrt = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string ios_develop_crt_pwd = 4;
 * @return {string}
 */
proto.css.push.CreateCertRequest.prototype.getIosDevelopCrtPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.css.push.CreateCertRequest.prototype.setIosDevelopCrtPwd = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ios_product_crt_name = 5;
 * @return {string}
 */
proto.css.push.CreateCertRequest.prototype.getIosProductCrtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.css.push.CreateCertRequest.prototype.setIosProductCrtName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes ios_product_crt = 6;
 * @return {!(string|Uint8Array)}
 */
proto.css.push.CreateCertRequest.prototype.getIosProductCrt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes ios_product_crt = 6;
 * This is a type-conversion wrapper around `getIosProductCrt()`
 * @return {string}
 */
proto.css.push.CreateCertRequest.prototype.getIosProductCrt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIosProductCrt()));
};


/**
 * optional bytes ios_product_crt = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIosProductCrt()`
 * @return {!Uint8Array}
 */
proto.css.push.CreateCertRequest.prototype.getIosProductCrt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIosProductCrt()));
};


/** @param {!(string|Uint8Array)} value */
proto.css.push.CreateCertRequest.prototype.setIosProductCrt = function(value) {
  jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string ios_product_crt_pwd = 7;
 * @return {string}
 */
proto.css.push.CreateCertRequest.prototype.getIosProductCrtPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.css.push.CreateCertRequest.prototype.setIosProductCrtPwd = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.OperateCertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.OperateCertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.OperateCertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.OperateCertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appkey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.OperateCertRequest}
 */
proto.css.push.OperateCertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.OperateCertRequest;
  return proto.css.push.OperateCertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.OperateCertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.OperateCertRequest}
 */
proto.css.push.OperateCertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.OperateCertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.OperateCertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.OperateCertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.OperateCertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppkey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string appkey = 1;
 * @return {string}
 */
proto.css.push.OperateCertRequest.prototype.getAppkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.OperateCertRequest.prototype.setAppkey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.QueryCertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.QueryCertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.QueryCertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.QueryCertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    iosDevelopCrtName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    iosDevelopCrt: msg.getIosDevelopCrt_asB64(),
    iosDevelopCrtPwd: jspb.Message.getFieldWithDefault(msg, 4, ""),
    iosProductCrtName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    iosProductCrt: msg.getIosProductCrt_asB64(),
    iosProductCrtPwd: jspb.Message.getFieldWithDefault(msg, 7, ""),
    certid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    proBundleId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    devBundleId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    created: jspb.Message.getFieldWithDefault(msg, 11, 0),
    modified: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.QueryCertResponse}
 */
proto.css.push.QueryCertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.QueryCertResponse;
  return proto.css.push.QueryCertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.QueryCertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.QueryCertResponse}
 */
proto.css.push.QueryCertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosDevelopCrtName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppkey(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIosDevelopCrt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosDevelopCrtPwd(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosProductCrtName(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIosProductCrt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIosProductCrtPwd(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProBundleId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevBundleId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreated(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setModified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.QueryCertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.QueryCertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.QueryCertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.QueryCertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIosDevelopCrtName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIosDevelopCrt_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getIosDevelopCrtPwd();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIosProductCrtName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIosProductCrt_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getIosProductCrtPwd();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCertid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getProBundleId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDevBundleId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreated();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getModified();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
};


/**
 * optional string ios_develop_crt_name = 1;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getIosDevelopCrtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setIosDevelopCrtName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string appkey = 2;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getAppkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setAppkey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes ios_develop_crt = 3;
 * @return {!(string|Uint8Array)}
 */
proto.css.push.QueryCertResponse.prototype.getIosDevelopCrt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes ios_develop_crt = 3;
 * This is a type-conversion wrapper around `getIosDevelopCrt()`
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getIosDevelopCrt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIosDevelopCrt()));
};


/**
 * optional bytes ios_develop_crt = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIosDevelopCrt()`
 * @return {!Uint8Array}
 */
proto.css.push.QueryCertResponse.prototype.getIosDevelopCrt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIosDevelopCrt()));
};


/** @param {!(string|Uint8Array)} value */
proto.css.push.QueryCertResponse.prototype.setIosDevelopCrt = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string ios_develop_crt_pwd = 4;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getIosDevelopCrtPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setIosDevelopCrtPwd = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ios_product_crt_name = 5;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getIosProductCrtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setIosProductCrtName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes ios_product_crt = 6;
 * @return {!(string|Uint8Array)}
 */
proto.css.push.QueryCertResponse.prototype.getIosProductCrt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes ios_product_crt = 6;
 * This is a type-conversion wrapper around `getIosProductCrt()`
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getIosProductCrt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIosProductCrt()));
};


/**
 * optional bytes ios_product_crt = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIosProductCrt()`
 * @return {!Uint8Array}
 */
proto.css.push.QueryCertResponse.prototype.getIosProductCrt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIosProductCrt()));
};


/** @param {!(string|Uint8Array)} value */
proto.css.push.QueryCertResponse.prototype.setIosProductCrt = function(value) {
  jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string ios_product_crt_pwd = 7;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getIosProductCrtPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setIosProductCrtPwd = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string certid = 8;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getCertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setCertid = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string pro_bundle_id = 9;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getProBundleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setProBundleId = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string dev_bundle_id = 10;
 * @return {string}
 */
proto.css.push.QueryCertResponse.prototype.getDevBundleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.css.push.QueryCertResponse.prototype.setDevBundleId = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 created = 11;
 * @return {number}
 */
proto.css.push.QueryCertResponse.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.css.push.QueryCertResponse.prototype.setCreated = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 modified = 12;
 * @return {number}
 */
proto.css.push.QueryCertResponse.prototype.getModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.css.push.QueryCertResponse.prototype.setModified = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.SetBadgeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.SetBadgeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.SetBadgeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.SetBadgeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    badge: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.SetBadgeRequest}
 */
proto.css.push.SetBadgeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.SetBadgeRequest;
  return proto.css.push.SetBadgeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.SetBadgeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.SetBadgeRequest}
 */
proto.css.push.SetBadgeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBadge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.SetBadgeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.SetBadgeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.SetBadgeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.SetBadgeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBadge();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.css.push.SetBadgeRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.SetBadgeRequest.prototype.setUid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 badge = 2;
 * @return {number}
 */
proto.css.push.SetBadgeRequest.prototype.getBadge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.css.push.SetBadgeRequest.prototype.setBadge = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.ReportDeviceInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.ReportDeviceInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.ReportDeviceInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.ReportDeviceInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceLanguage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deviceType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.ReportDeviceInfoReq}
 */
proto.css.push.ReportDeviceInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.ReportDeviceInfoReq;
  return proto.css.push.ReportDeviceInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.ReportDeviceInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.ReportDeviceInfoReq}
 */
proto.css.push.ReportDeviceInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceLanguage(value);
      break;
    case 4:
      var value = /** @type {!proto.common.enum.MsggwEnum.DeviceType} */ (reader.readEnum());
      msg.setDeviceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.ReportDeviceInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.ReportDeviceInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.ReportDeviceInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.ReportDeviceInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceLanguage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeviceType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.css.push.ReportDeviceInfoReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.ReportDeviceInfoReq.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.css.push.ReportDeviceInfoReq.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.ReportDeviceInfoReq.prototype.setClientId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_language = 3;
 * @return {string}
 */
proto.css.push.ReportDeviceInfoReq.prototype.getDeviceLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.push.ReportDeviceInfoReq.prototype.setDeviceLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional common.enum.MsggwEnum.DeviceType device_type = 4;
 * @return {!proto.common.enum.MsggwEnum.DeviceType}
 */
proto.css.push.ReportDeviceInfoReq.prototype.getDeviceType = function() {
  return /** @type {!proto.common.enum.MsggwEnum.DeviceType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.common.enum.MsggwEnum.DeviceType} value */
proto.css.push.ReportDeviceInfoReq.prototype.setDeviceType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.ReportDeviceInfoResp.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.ReportDeviceInfoResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.ReportDeviceInfoResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.ReportDeviceInfoResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.ReportDeviceInfoResp}
 */
proto.css.push.ReportDeviceInfoResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.ReportDeviceInfoResp;
  return proto.css.push.ReportDeviceInfoResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.ReportDeviceInfoResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.ReportDeviceInfoResp}
 */
proto.css.push.ReportDeviceInfoResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.ReportDeviceInfoResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.ReportDeviceInfoResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.ReportDeviceInfoResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.ReportDeviceInfoResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.ReportDeviceInfoResp.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.ReportDeviceInfoResp.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.DeleteReportDeviceInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.DeleteReportDeviceInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.DeleteReportDeviceInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.DeleteReportDeviceInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.DeleteReportDeviceInfoReq}
 */
proto.css.push.DeleteReportDeviceInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.DeleteReportDeviceInfoReq;
  return proto.css.push.DeleteReportDeviceInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.DeleteReportDeviceInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.DeleteReportDeviceInfoReq}
 */
proto.css.push.DeleteReportDeviceInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.DeleteReportDeviceInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.DeleteReportDeviceInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.DeleteReportDeviceInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.DeleteReportDeviceInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.css.push.DeleteReportDeviceInfoReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.DeleteReportDeviceInfoReq.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.css.push.DeleteReportDeviceInfoReq.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.DeleteReportDeviceInfoReq.prototype.setClientId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.DeleteReportDeviceInfoResp.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.DeleteReportDeviceInfoResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.DeleteReportDeviceInfoResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.DeleteReportDeviceInfoResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.DeleteReportDeviceInfoResp}
 */
proto.css.push.DeleteReportDeviceInfoResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.DeleteReportDeviceInfoResp;
  return proto.css.push.DeleteReportDeviceInfoResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.DeleteReportDeviceInfoResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.DeleteReportDeviceInfoResp}
 */
proto.css.push.DeleteReportDeviceInfoResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.DeleteReportDeviceInfoResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.DeleteReportDeviceInfoResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.DeleteReportDeviceInfoResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.DeleteReportDeviceInfoResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.DeleteReportDeviceInfoResp.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.DeleteReportDeviceInfoResp.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.MessageQueryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.MessageQueryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.MessageQueryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.MessageQueryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    bizCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    readStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    page: (f = msg.getPage()) && css_base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.MessageQueryReq}
 */
proto.css.push.MessageQueryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.MessageQueryReq;
  return proto.css.push.MessageQueryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.MessageQueryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.MessageQueryReq}
 */
proto.css.push.MessageQueryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBizCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {!proto.common.enum.MsggwEnum.ReadStatus} */ (reader.readEnum());
      msg.setReadStatus(value);
      break;
    case 4:
      var value = new css_base_pb.Pagination;
      reader.readMessage(value,css_base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.MessageQueryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.MessageQueryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.MessageQueryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.MessageQueryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBizCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReadStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      css_base_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string biz_code = 1;
 * @return {string}
 */
proto.css.push.MessageQueryReq.prototype.getBizCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.MessageQueryReq.prototype.setBizCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.css.push.MessageQueryReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.MessageQueryReq.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional common.enum.MsggwEnum.ReadStatus read_status = 3;
 * @return {!proto.common.enum.MsggwEnum.ReadStatus}
 */
proto.css.push.MessageQueryReq.prototype.getReadStatus = function() {
  return /** @type {!proto.common.enum.MsggwEnum.ReadStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.common.enum.MsggwEnum.ReadStatus} value */
proto.css.push.MessageQueryReq.prototype.setReadStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional css.base.Pagination page = 4;
 * @return {?proto.css.base.Pagination}
 */
proto.css.push.MessageQueryReq.prototype.getPage = function() {
  return /** @type{?proto.css.base.Pagination} */ (
    jspb.Message.getWrapperField(this, css_base_pb.Pagination, 4));
};


/** @param {?proto.css.base.Pagination|undefined} value */
proto.css.push.MessageQueryReq.prototype.setPage = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.css.push.MessageQueryReq.prototype.clearPage = function() {
  this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.css.push.MessageQueryReq.prototype.hasPage = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.css.push.MessageQueryResp.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.MessageQueryResp.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.MessageQueryResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.MessageQueryResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.MessageQueryResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pages: jspb.Message.getFieldWithDefault(msg, 3, 0),
    messageListList: jspb.Message.toObjectList(msg.getMessageListList(),
    proto.css.push.MessageListItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.MessageQueryResp}
 */
proto.css.push.MessageQueryResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.MessageQueryResp;
  return proto.css.push.MessageQueryResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.MessageQueryResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.MessageQueryResp}
 */
proto.css.push.MessageQueryResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPages(value);
      break;
    case 4:
      var value = new proto.css.push.MessageListItem;
      reader.readMessage(value,proto.css.push.MessageListItem.deserializeBinaryFromReader);
      msg.addMessageList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.MessageQueryResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.MessageQueryResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.MessageQueryResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.MessageQueryResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPages();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMessageListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.css.push.MessageListItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.MessageQueryResp.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.MessageQueryResp.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 total = 2;
 * @return {number}
 */
proto.css.push.MessageQueryResp.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.css.push.MessageQueryResp.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 pages = 3;
 * @return {number}
 */
proto.css.push.MessageQueryResp.prototype.getPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.css.push.MessageQueryResp.prototype.setPages = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated MessageListItem message_list = 4;
 * @return {!Array<!proto.css.push.MessageListItem>}
 */
proto.css.push.MessageQueryResp.prototype.getMessageListList = function() {
  return /** @type{!Array<!proto.css.push.MessageListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.css.push.MessageListItem, 4));
};


/** @param {!Array<!proto.css.push.MessageListItem>} value */
proto.css.push.MessageQueryResp.prototype.setMessageListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.css.push.MessageListItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.css.push.MessageListItem}
 */
proto.css.push.MessageQueryResp.prototype.addMessageList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.css.push.MessageListItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.css.push.MessageQueryResp.prototype.clearMessageListList = function() {
  this.setMessageListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.MessageListItem.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.MessageListItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.MessageListItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.MessageListItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    messageId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pushTime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    messageTitleCn: jspb.Message.getFieldWithDefault(msg, 5, ""),
    messageTitleEn: jspb.Message.getFieldWithDefault(msg, 6, ""),
    messageBodyCn: jspb.Message.getFieldWithDefault(msg, 7, ""),
    messageBodyEn: jspb.Message.getFieldWithDefault(msg, 8, ""),
    messageDataCn: jspb.Message.getFieldWithDefault(msg, 9, ""),
    messageDataEn: jspb.Message.getFieldWithDefault(msg, 10, ""),
    messageType: jspb.Message.getFieldWithDefault(msg, 11, ""),
    readStatus: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.MessageListItem}
 */
proto.css.push.MessageListItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.MessageListItem;
  return proto.css.push.MessageListItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.MessageListItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.MessageListItem}
 */
proto.css.push.MessageListItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMessageId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageTitleCn(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageTitleEn(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageBodyCn(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageBodyEn(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageDataCn(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageDataEn(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageType(value);
      break;
    case 12:
      var value = /** @type {!proto.common.enum.MsggwEnum.ReadStatus} */ (reader.readEnum());
      msg.setReadStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.MessageListItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.MessageListItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.MessageListItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.MessageListItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessageId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPushTime();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessageTitleCn();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessageTitleEn();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMessageBodyCn();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMessageBodyEn();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMessageDataCn();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMessageDataEn();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMessageType();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getReadStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.css.push.MessageListItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.css.push.MessageListItem.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 message_id = 2;
 * @return {number}
 */
proto.css.push.MessageListItem.prototype.getMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.css.push.MessageListItem.prototype.setMessageId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string push_time = 4;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getPushTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setPushTime = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string message_title_cn = 5;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getMessageTitleCn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setMessageTitleCn = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string message_title_en = 6;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getMessageTitleEn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setMessageTitleEn = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string message_body_cn = 7;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getMessageBodyCn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setMessageBodyCn = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string message_body_en = 8;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getMessageBodyEn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setMessageBodyEn = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string message_data_cn = 9;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getMessageDataCn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setMessageDataCn = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string message_data_en = 10;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getMessageDataEn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setMessageDataEn = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string message_type = 11;
 * @return {string}
 */
proto.css.push.MessageListItem.prototype.getMessageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.css.push.MessageListItem.prototype.setMessageType = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional common.enum.MsggwEnum.ReadStatus read_status = 12;
 * @return {!proto.common.enum.MsggwEnum.ReadStatus}
 */
proto.css.push.MessageListItem.prototype.getReadStatus = function() {
  return /** @type {!proto.common.enum.MsggwEnum.ReadStatus} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.common.enum.MsggwEnum.ReadStatus} value */
proto.css.push.MessageListItem.prototype.setReadStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.QueryMessageStatusReq.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.QueryMessageStatusReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.QueryMessageStatusReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.QueryMessageStatusReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    bizCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    readStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    page: (f = msg.getPage()) && css_base_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.QueryMessageStatusReq}
 */
proto.css.push.QueryMessageStatusReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.QueryMessageStatusReq;
  return proto.css.push.QueryMessageStatusReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.QueryMessageStatusReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.QueryMessageStatusReq}
 */
proto.css.push.QueryMessageStatusReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBizCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {!proto.common.enum.MsggwEnum.ReadStatus} */ (reader.readEnum());
      msg.setReadStatus(value);
      break;
    case 4:
      var value = new css_base_pb.Pagination;
      reader.readMessage(value,css_base_pb.Pagination.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.QueryMessageStatusReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.QueryMessageStatusReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.QueryMessageStatusReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.QueryMessageStatusReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBizCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReadStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      css_base_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string biz_code = 1;
 * @return {string}
 */
proto.css.push.QueryMessageStatusReq.prototype.getBizCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.css.push.QueryMessageStatusReq.prototype.setBizCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.css.push.QueryMessageStatusReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.QueryMessageStatusReq.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional common.enum.MsggwEnum.ReadStatus read_status = 3;
 * @return {!proto.common.enum.MsggwEnum.ReadStatus}
 */
proto.css.push.QueryMessageStatusReq.prototype.getReadStatus = function() {
  return /** @type {!proto.common.enum.MsggwEnum.ReadStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.common.enum.MsggwEnum.ReadStatus} value */
proto.css.push.QueryMessageStatusReq.prototype.setReadStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional css.base.Pagination page = 4;
 * @return {?proto.css.base.Pagination}
 */
proto.css.push.QueryMessageStatusReq.prototype.getPage = function() {
  return /** @type{?proto.css.base.Pagination} */ (
    jspb.Message.getWrapperField(this, css_base_pb.Pagination, 4));
};


/** @param {?proto.css.base.Pagination|undefined} value */
proto.css.push.QueryMessageStatusReq.prototype.setPage = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.css.push.QueryMessageStatusReq.prototype.clearPage = function() {
  this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.css.push.QueryMessageStatusReq.prototype.hasPage = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.QueryMessageStatusResp.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.QueryMessageStatusResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.QueryMessageStatusResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.QueryMessageStatusResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.QueryMessageStatusResp}
 */
proto.css.push.QueryMessageStatusResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.QueryMessageStatusResp;
  return proto.css.push.QueryMessageStatusResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.QueryMessageStatusResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.QueryMessageStatusResp}
 */
proto.css.push.QueryMessageStatusResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.QueryMessageStatusResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.QueryMessageStatusResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.QueryMessageStatusResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.QueryMessageStatusResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.QueryMessageStatusResp.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.QueryMessageStatusResp.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 count = 2;
 * @return {number}
 */
proto.css.push.QueryMessageStatusResp.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.css.push.QueryMessageStatusResp.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.AckMessageReq.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.AckMessageReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.AckMessageReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.AckMessageReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.AckMessageReq}
 */
proto.css.push.AckMessageReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.AckMessageReq;
  return proto.css.push.AckMessageReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.AckMessageReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.AckMessageReq}
 */
proto.css.push.AckMessageReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.AckMessageReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.AckMessageReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.AckMessageReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.AckMessageReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 message_id = 1;
 * @return {number}
 */
proto.css.push.AckMessageReq.prototype.getMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.css.push.AckMessageReq.prototype.setMessageId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.css.push.AckMessageReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.css.push.AckMessageReq.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.css.push.AckMessageResp.prototype.toObject = function(opt_includeInstance) {
  return proto.css.push.AckMessageResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.css.push.AckMessageResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.AckMessageResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.css.push.AckMessageResp}
 */
proto.css.push.AckMessageResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.css.push.AckMessageResp;
  return proto.css.push.AckMessageResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.css.push.AckMessageResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.css.push.AckMessageResp}
 */
proto.css.push.AckMessageResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.css.errcode.ErrorCode} */ (reader.readEnum());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.css.push.AckMessageResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.css.push.AckMessageResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.css.push.AckMessageResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.css.push.AckMessageResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional css.errcode.ErrorCode ret = 1;
 * @return {!proto.css.errcode.ErrorCode}
 */
proto.css.push.AckMessageResp.prototype.getRet = function() {
  return /** @type {!proto.css.errcode.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.css.errcode.ErrorCode} value */
proto.css.push.AckMessageResp.prototype.setRet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.css.push.ECHANNELTYPE = {
  DEAULT: 0,
  IM: 1
};

/**
 * @enum {number}
 */
proto.css.push.EPushType = {
  IOS_DEVELOP: 0,
  IOS_PRODUCT: 1,
  XIAO_MI: 2,
  HUA_WEI: 3
};

goog.object.extend(exports, proto.css.push);
