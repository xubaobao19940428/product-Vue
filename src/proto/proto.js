/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/light");

var $root = ($protobuf.roots["default"] || ($protobuf.roots["default"] = new $protobuf.Root()))
.addJSON({
  common: {
    nested: {
      agent: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.common.agent",
          java_outer_classname: "Agent"
        },
        nested: {
          AppProxyRequest: {
            fields: {
              serviceName: {
                type: "string",
                id: 1
              },
              interfaceName: {
                type: "string",
                id: 2
              },
              data: {
                type: "bytes",
                id: 3
              },
              version: {
                type: "string",
                id: 4
              }
            }
          },
          AppProxyResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              res: {
                type: "bytes",
                id: 2
              }
            }
          },
          BackProxyRequest: {
            fields: {
              serviceName: {
                type: "string",
                id: 1
              },
              interfaceName: {
                type: "string",
                id: 2
              },
              data: {
                type: "bytes",
                id: 3
              },
              version: {
                type: "string",
                id: 4
              }
            }
          },
          BackProxyResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              res: {
                type: "bytes",
                id: 2
              }
            }
          },
          AdminProxyRequest: {
            fields: {
              serviceName: {
                type: "string",
                id: 1
              },
              interfaceName: {
                type: "string",
                id: 2
              },
              data: {
                type: "bytes",
                id: 3
              },
              version: {
                type: "string",
                id: 4
              }
            }
          },
          AdminProxyResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              res: {
                type: "bytes",
                id: 2
              }
            }
          }
        }
      },
      base: {
        options: {
          java_multiple_files: false,
          java_package: "com.fingo.littlec.proto.common",
          java_outer_classname: "Base"
        },
        nested: {
          Pagination: {
            fields: {
              pageSize: {
                type: "int32",
                id: 1
              },
              pageNum: {
                type: "int32",
                id: 2
              },
              orderStr: {
                type: "string",
                id: 3
              },
              pagingSwitch: {
                type: "bool",
                id: 4
              }
            }
          },
          FingoMasterInfoPb: {
            fields: {
              code: {
                type: "string",
                id: 1
              },
              nickName: {
                type: "string",
                id: 2
              },
              headImg: {
                type: "string",
                id: 3
              },
              wechatId: {
                type: "string",
                id: 4
              },
              whatsApp: {
                type: "string",
                id: 5
              },
              lineId: {
                type: "string",
                id: 6
              },
              countryCode: {
                type: "string",
                id: 7
              },
              whatsAppLink: {
                type: "string",
                id: 8
              },
              lineLink: {
                type: "string",
                id: 9
              },
              id: {
                type: "string",
                id: 10
              },
              codeDesc: {
                type: "string",
                id: 11
              }
            }
          },
          WorkOrderSourceEnumPb: {
            values: {
              WorkOrderSourceEnumPb_NULL: 0,
              Messenger: 1,
              Whatsapp: 2,
              WeChat: 3,
              Email: 4,
              Appstore: 5,
              FingoApp: 6,
              innerPayment: 7,
              Others: 8
            }
          },
          WorkOrderGroupTypeEnumPb: {
            values: {
              WorkOrderGroupTypeEnumPb_NULL: 0,
              CreateTeam: 1,
              ProcessTeam: 2
            }
          },
          WorkOrderStatusEnumPb: {
            values: {
              WorkOrderStatusEnumPb_NULL: 0,
              Unresolved: 1,
              Pending: 2,
              closed: 3
            }
          },
          WorkOrderDealTypeEnumPb: {
            values: {
              WorkOrderDealTypeEnumPb_NULL: 0,
              CREARTED: 1,
              FollowUp: 2,
              Close: 3,
              TurnToSend: 4,
              SingleBack: 5,
              Resolved: 6,
              CopyTo: 7
            }
          },
          WorkOrderEvaluationEnumPb: {
            values: {
              WorkOrderEvaluationEnumPb_NULL: 0,
              ErrorTag: 1,
              NoNeadDeal: 2,
              NonPersonalTreatment: 3,
              Other: 4
            }
          },
          WorkOrderDealStatus: {
            values: {
              WorkOrderDealStatus_NULL: 0,
              WaitProcess: 1,
              Processed: 2,
              NoDeal: 3
            }
          },
          WorkOrderSelectDateEnumPb: {
            values: {
              createDate: 0,
              dealDate: 1,
              closeDate: 3
            }
          },
          WorkOrderSelectDateOrderEnumPb: {
            values: {
              create: 0,
              received: 1,
              deal: 2
            }
          },
          NameAndCode: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              }
            }
          },
          I18nmsg: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              messageTitle: {
                type: "string",
                id: 2
              },
              messageBody: {
                type: "string",
                id: 3
              },
              messageData: {
                type: "string",
                id: 4
              }
            }
          },
          IdAndName: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              }
            }
          },
          CoreProductInfo: {
            fields: {}
          },
          ErrorMessage: {
            fields: {
              errcode: {
                type: "int32",
                id: 1
              },
              errname: {
                type: "string",
                id: 2
              },
              msg: {
                type: "string",
                id: 3
              }
            }
          }
        }
      },
      "enum": {
        options: {
          java_multiple_files: false,
          java_package: "com.fingo.littlec.proto.common",
          java_outer_classname: "LittlecEnum"
        },
        nested: {
          CommonEnum: {
            fields: {},
            nested: {
              StatusEnum: {
                values: {
                  ABNORMAL: 0,
                  NOURMAL: 1,
                  LOSE_EFFICACY: 2,
                  DELETE: 3
                }
              }
            }
          },
          MarketingEnum: {
            fields: {},
            nested: {
              OpenRedbagType: {
                values: {
                  CREATE_OPEN_REDBAG: 0,
                  JOIN_OPEN_REDBAG: 1,
                  SHARE_OPEN_REDBAG: 2
                }
              },
              ActiveCrowdType: {
                values: {
                  ALL: 0,
                  NEW_USER: 1,
                  OLD_USER: 2,
                  SPECIFIED_USER: 3
                }
              },
              ActiveStatus: {
                values: {
                  DEFAULT: 0,
                  PREHEATING: 1,
                  IN_PROGRESS: 2,
                  FINISHED: 3,
                  NOT_STARTED: 4
                }
              },
              ActiveType: {
                values: {
                  OTHER: 0,
                  HOT_SALE: 1,
                  MARKETING_ACTIVE: 2,
                  TIME_PRICE: 3,
                  LIVE: 4,
                  GROUP_ACTIVITY: 5,
                  HIGH_PROFIT_PRODUCT: 6,
                  HOT_PRODUCT: 7,
                  ZERO_SALE: 8
                }
              },
              PreheatType: {
                values: {
                  NOT_PREHEAT: 0,
                  PREHEAT: 1
                }
              },
              PageStatus: {
                values: {
                  PAGE_STATUS_NULL: 0,
                  PAGE_VALID: 1,
                  PAGE_INEFFECTIVE: 2,
                  PAGE_INVALID: 3
                }
              },
              PageHistoryStatus: {
                values: {
                  PAGE_HISTORY_STATUS_NULL: 0,
                  PAGE_HISTORY_VALID: 1,
                  PAGE_HISTORY_INEFFECTIVE: 2,
                  PAGE_HISTORY_DELETED: 3
                }
              },
              GroupActivityType: {
                values: {
                  GENERAL: 0,
                  ONE_BUYER: 1,
                  FIVE_DISCOUNT: 2
                }
              },
              GroupActivityByItemType: {
                values: {
                  GROUP_ACTIVITY_ITEM_TYPE_NO_USE: 0,
                  GROUP_ACTIVITY_ITEM_TYPE_GENERAL: 1,
                  GROUP_ACTIVITY_ITEM_TYPE_DRAW: 2
                }
              },
              RefundType: {
                values: {
                  REFUND_TYPE_NO_NULL: 0,
                  REFUND_TYPE_POINT: 1
                }
              },
              ItemShowStatus: {
                values: {
                  SHOW_UN_USE: 0,
                  SHOW: 1,
                  HIDE: 2
                }
              },
              RobotType: {
                values: {
                  NO: 0,
                  YES: 1
                }
              },
              ShopProductType: {
                values: {
                  HIGH_PROFIT_PRODUCT_TYPE: 0,
                  HOT_PRODUCT_TYPE: 1
                }
              },
              SuperLuckyProductActivityStatus: {
                values: {
                  WAIT_START: 0,
                  UNDERWAY: 1,
                  WAIT_LOTTERY: 2,
                  LOTTERY_END: 3
                }
              },
              SuperLuckyOrderStatus: {
                values: {
                  NO_PAY: 0,
                  PAID: 1,
                  REFUND: 2,
                  PENDING: 3
                }
              },
              SuperLuckyRefundStatus: {
                values: {
                  NO_REFUND: 0,
                  REFUNDED: 1
                }
              },
              SuperLuckyRefundTypeName: {
                values: {
                  LOSING_LOTTERY: 0,
                  NO_LUCKY_NUMBER: 1
                }
              },
              SuperLuckyNumberType: {
                values: {
                  SUPER_LUCKY_NUMBER_NO_USE: 0,
                  SUBMIT_ORDER: 1,
                  INVITE_OLD_USER: 2,
                  INVITE_NEW_USER: 3
                }
              },
              SuperLuckyUserType: {
                values: {
                  USER: 0,
                  ROBOT: 1
                }
              },
              SuperLuckRefundType: {
                values: {
                  SUPER_LUCK_REFUND_NO_USE: 0,
                  SUPER_LUCK_REFUND_POINTS: 1
                }
              },
              BigPrizeUserStatusType: {
                values: {
                  BIG_PRIZE_USER_STATUS_NO_USE: 0,
                  BIG_PRIZE_USER_STATUS_NOT_INVOLVED: 1,
                  BIG_PRIZE_USER_STATUS_NOT_WINNING: 2,
                  BIG_PRIZE_USER_STATUS_ALREADY_WINNING: 3
                }
              },
              ActiveProductApprovalStatus: {
                values: {
                  WAITING_SIGN_UP: 0,
                  WAITING_HIRE: 1,
                  HIRED: 2
                }
              },
              ListProductEnterFilterNullType: {
                values: {
                  NONE_SPU_PREHEAT_TIME: 0,
                  NONE_START_TIME: 1,
                  NONE_END_TIME: 2,
                  NONE_GROUP: 3,
                  NONE_ACTIVE_PRICE: 4,
                  NONE_ACTIVE_RATE: 5,
                  NONE_ACTIVE_STOCK: 6
                }
              },
              ListProductEnterLookType: {
                values: {
                  NONE_SELECT: 0,
                  PRICE_VIOLATE: 1,
                  TIME_CONFLICT: 2
                }
              },
              ActiveProductEnterUserType: {
                values: {
                  NONE: 0,
                  SIGN_UP_OPERATOR: 1,
                  GATHER_OPERATOR: 2
                }
              },
              ActivePriceAutoSettingType: {
                values: {
                  EQUAL_ADVISE_ACTIVE_PRICE: 0,
                  DISCOUNT_BY_ADVISE_ACTIVE_PRICE: 1,
                  DISCOUNT_BY_VIP_PRICE: 2,
                  CUSTOMIZE_PRICE: 3,
                  UN_SELECT_PRICE: -1
                }
              },
              CommissionRateAutoSettingType: {
                values: {
                  EQUAL_NORMAL_COMMISSION: 0,
                  RATION_BY_NORMAL_COMMISSION: 1,
                  CUSTOMIZE_COMMISSION: 2,
                  UN_SELECT_RATE: -1
                }
              },
              PriceConflictStatus: {
                values: {
                  SAFE: 0,
                  REMIND: 1,
                  FORBID: 2
                }
              },
              ProductFellowActivityStatus: {
                values: {
                  UN_SELECT_FELLOW: 0,
                  FELLOW: 1,
                  CUSTOMIZE_TIME: 2
                }
              }
            }
          },
          PromotionEnum: {
            fields: {},
            nested: {
              PromotionStatusType: {
                values: {
                  ALL: 0,
                  ABOUT_TO_START: 1,
                  PROCESSING: 2,
                  END: 3
                }
              },
              PromotionType: {
                values: {
                  FULL_REDUCTION: 0,
                  EVERY_FULL_REDUCTION: 1,
                  M_YUAN_N_PIECE: 2,
                  M_PIECE_N_DISCOUNT: 3,
                  ONLY_M_PIECE_N_YUAN: 4,
                  ONLY_M_PIECE_N_DISCOUNT: 5,
                  FREE_SHIPPING: 6,
                  FULL_PIECE_REDUCTION: 7,
                  EVERY_FULL_PIECE_REDUCTION: 8,
                  FULL_FORWARD_COUPON: 9
                }
              },
              PromotionProductType: {
                values: {
                  MANUAL_ENTRY: 0,
                  BIND_ACTIVE: 1,
                  PRODUCT_GROUP_LABEL: 2,
                  APP_CATEGORY: 3,
                  BACKGROUND_CATEGORY: 4,
                  BRAND_ID: 5
                }
              },
              DiscountMutexType: {
                values: {
                  NOT_MUTEX: 0,
                  PROMOTION_MUTEX: 1,
                  COUPON_MUTEX: 2,
                  FREE_SHIPPING_NOT_MUTEX: 3
                }
              },
              FreeShippingType: {
                values: {
                  PIECE_UNIT: 0,
                  MONEY_UNIT: 1
                }
              },
              CouponReceivingChannelEnum: {
                values: {
                  BUY_GIFT: 0,
                  BUY_GIFT_REISSUE: 1,
                  REGISTER: 2,
                  INVITED_REGISTRAR_TO_FIRST_ORDER: 3,
                  PASSWORD: 4,
                  ACTIVE_LINKS: 5,
                  PRODUCT_BINDING: 6,
                  MANUAL_REISSUE: 7,
                  OVERTIME_COMPENSATE: 8
                }
              },
              CouponUniqueCodeEnum: {
                values: {
                  INVITER_U: 0,
                  REGISTER_U: 1
                }
              },
              BannerTypeEnum: {
                values: {
                  BANNER_TYPE_NULL: 0,
                  BANNER: 1,
                  FLASH_SCREEN: 2,
                  PS_STORE: 3,
                  PERSONAL_CENTER: 4
                }
              },
              BuyTypeEnum: {
                values: {
                  NEW_BUY: 0,
                  GIFT_BUY: 1
                }
              },
              TimeTypeEnum: {
                values: {
                  NOT_TIME_LIMIT: 0,
                  TIME_LIMIT: 1
                }
              },
              BoxCardType: {
                values: {
                  BOX_CARD_TYPE_NULL: 0,
                  OPERATION_CATEGORY: 1
                }
              },
              PromotionFunctionType: {
                values: {
                  DEFAULT_NULL: 0,
                  BANNERS: 1,
                  SERVICE_DESC: 2,
                  FUNCTIONAL_AREA: 3,
                  GIRDLE: 4,
                  PROMOTION_BOX_CARD: 5,
                  GIRDLE_ADVERTISE: 6,
                  ADVERTISE_BOX_CARD: 7,
                  MARKETING_GRID: 8,
                  CATEGORY_BANNER: 9,
                  PS_STORE_BANNER: 10,
                  PERSONAL_CENTER_BANNER: 11
                }
              },
              PromotionFunctionCanDeleteType: {
                values: {
                  PROMOTION_FUNCTION_CAN_DELETE_NULL: 0,
                  CAN_DELETE: 1,
                  CAN_NOT_DELETE: 2
                }
              },
              PromotionAppUrlType: {
                values: {
                  DEFAULT_NOT_JUMP: 0,
                  H5_URL: 1,
                  APPLICATION: 2
                }
              },
              PromotionMarketingGridType: {
                values: {
                  PROMOTION_MARKETING_GRID_TYPE_NULL: 0,
                  LIMITED_TIME_SPECIAL: 1,
                  OTHER_GRID: 2,
                  NEW_COMER_EXCLUSIVE: 3,
                  FADDISH_GOOD_MATERIAL: 4
                }
              },
              PurchaseLimitRuleType: {
                values: {
                  PURCHASE_LIMIT_RULE_TYPE_NULL: 0,
                  PURCHASE_LIMIT_RULE_MAX_BUY: 1,
                  PURCHASE_LIMIT_RULE_MIN_BUY: 2
                }
              },
              PromotionLuckDrawType: {
                values: {
                  LUCK_DEFAULT: 0,
                  LUCK_COUPON: 1,
                  LUCK_PRIZE: 2,
                  LUCK_NONE_PRIZE: 3,
                  LUCK_SAFE_BOLT: 4,
                  POINTS: 5,
                  GOLD: 6
                }
              },
              PromotionTipsType: {
                values: {
                  DEFAULT_Tips: 0,
                  POPUP: 1,
                  COPY_WRITING: 2
                }
              },
              PromotionIncreaseFrequencyType: {
                values: {
                  DEFAULT_INCREASE: 0,
                  TIMING_INCREASE: 1,
                  LOOP_INCREASE: 2
                }
              },
              PromotionIncreaseType: {
                values: {
                  DEFAULT_INCREASE_NULL: 0,
                  ADD_INCREASE: 1,
                  CLEAN_INCREASE: 2
                }
              },
              PromotionFreeType: {
                values: {
                  DEFAULT_N_BULL: 0,
                  FREE_N_DATE: 1,
                  FREE_N_ALL: 2
                }
              },
              LuckDrawActiveStatus: {
                values: {
                  LUCK_STATUS_DEFAULT: 0,
                  LUCK_IN_PROGRESS: 1,
                  LUCK_FINISHED: 2,
                  LUCK_NOT_STARTED: 3
                }
              },
              AppIconType: {
                values: {
                  APP_ICON_DEFAULT: 0,
                  TAB_INDEX: 1,
                  TAB_ACADEMY: 2,
                  TAB_AFFILIATE_PREFERRED: 3,
                  TAB_CART: 4,
                  TAB_MY: 5
                }
              },
              GiftGivingReceiveWay: {
                values: {
                  LIMITED_TIME: 0,
                  PERMANENT: 1
                }
              },
              GiftGivingWay: {
                values: {
                  ACCOUNT: 0,
                  QR_CODE: 1,
                  SOCIAL_PLATFORM: 2
                }
              },
              GivingStatus: {
                values: {
                  WAITTING: 0,
                  TAKABACK: 1,
                  RECEIVED: 2,
                  NONE: 3
                }
              },
              CouponUseStatus: {
                values: {
                  NOTUSED: 0,
                  USED: 1,
                  EXPIRED: 2,
                  USELESS: 3,
                  GIVING: 4
                }
              }
            }
          },
          OrderEnum: {
            fields: {},
            nested: {
              OrderCategory: {
                values: {
                  COMMON: 0,
                  CHARGE: 1,
                  BILL: 2
                }
              },
              OrderType: {
                values: {
                  ORDINARY: 0,
                  SMALL_GIFT: 1,
                  BIG_GIFT: 2,
                  GROUP: 4,
                  LIVE: 5,
                  VIRTUAL: 8,
                  COSTGO: 9,
                  MICRO_BOSS: 10,
                  LITE_GIFT: 11,
                  SUPER_LUCKY_GIFT: 12,
                  WEBUSINESS_GIFT: 13,
                  TOPUP_CHARGE: 14,
                  BILL_CHARGE: 15,
                  COMBINE_ORDER: 16
                }
              },
              GiftType: {
                values: {
                  GITF_TYPE0: 0,
                  NOT_GIFT: 1,
                  PRIME: 2,
                  SMALL: 3,
                  BIG: 4
                }
              },
              DeliveryType: {
                values: {
                  DELIVERY_TYPE0: 0,
                  SELF_PICK_UP: 1,
                  EXPRESS: 2
                }
              },
              OrderStatus: {
                values: {
                  WAIT_FOR_PAY: 0,
                  WAIT_FOR_SHIPPING: 1,
                  WAIT_FOR_RECEIVING: 2,
                  TRADE_SUCCESS: 3,
                  TRADE_CLOSED: 4,
                  PARTLY_SHIPPED: 5,
                  USER_CANCEL: 6
                }
              },
              DiscountType: {
                values: {
                  COUPON: 0,
                  PROMOTION: 1,
                  ACTIVITY: 2
                }
              },
              AfterStatus: {
                values: {
                  UNDER_REVIEW: 0,
                  APPROVED: 1,
                  AFTER_SUCCESS: 2,
                  AFTER_CLOSE: 3,
                  AFTER_REFUSED: 4,
                  AFTER_FAILED: 5,
                  NO_AFTER: -1
                }
              },
              AfterSaleType: {
                values: {
                  CANCEL_ORDER: 0,
                  RETURN: 1,
                  EXCHANGE: 2,
                  IMMEDIATE_AFTER: 3,
                  APPLY_FOR_AFTER: 4,
                  CUSTOMER_REFUND: 5,
                  CUSTOMER_RETURN: 6,
                  USER_REFUND: 7
                }
              },
              RefundType: {
                values: {
                  TO_BANK_CARD: 0,
                  TO_POINTS: 1,
                  CREDIT: 2
                }
              },
              ProductStatus: {
                values: {
                  SHOPPING: 0,
                  REFUND: 1,
                  REFUND_SUCCESS: 2,
                  NOT_SHOPPING: -1
                }
              },
              OrderSource: {
                values: {
                  APP: 0,
                  FACEBOOK: 1
                }
              },
              GroupStatus: {
                values: {
                  GROUP_UNUSED: 0,
                  GROUPPING: 1,
                  SUCCESS: 2,
                  FAILED: 3
                }
              },
              GroupMemberStatus: {
                values: {
                  WATI_FOR_PAY: 0,
                  PAIED: 1,
                  CANCLED: 2,
                  GROUP_REFUND: 3,
                  UNDRAW_GROUP_REFUND: 4
                }
              },
              GroupMemberRefundStatus: {
                values: {
                  GROUP_NOURMAL: 0,
                  GROUP_REFUND_SUCCESS: 1,
                  GROUP_REFUND_ERROR: 2
                }
              },
              GroupMemberRole: {
                values: {
                  LEADER: 0,
                  FOLLOWER: 1
                }
              },
              SubStatus: {
                values: {
                  SUB_STATUS_NULL: 0,
                  PAYING: 1
                }
              },
              PointPayEnum: {
                values: {
                  NOT_POINT_PAY: 0,
                  POINT_PAY: 1,
                  PARTLY_POINT_PAY: 2
                }
              },
              OutStockSource: {
                values: {
                  OUT_STOCK_SOURCE_NULL: 0,
                  PUR: 1
                }
              },
              JudgeSubOrderSkuAfterEnum: {
                values: {
                  JUDGE_VALID: 0,
                  JUDGE_AFTER_SUCCESS: 1
                }
              }
            }
          },
          PolyPayEnum: {
            fields: {},
            nested: {
              PayWay: {
                values: {
                  PAY_WAY_UNKNOWN: 0,
                  CREDIT: 3,
                  INTEGRAL: 2,
                  MOLPAY: 1,
                  OMISE: 4,
                  OnlineBanking: 5,
                  COD: 6,
                  COMPOSITE: 7
                }
              },
              PayStatus: {
                values: {
                  SUCCESS: 0,
                  FAIL: 1,
                  PENDING: 2,
                  WAIT_PAY: 3,
                  REVERSAL_SUCCESS: 4,
                  REVERSAL_FAIL: 5,
                  SETTLEMENT_DAY_REVERSAL_FAIL: 6,
                  REVERSAL_PENDING: 7,
                  REVERSAL_DEAL: 8
                }
              },
              AccountDetailType: {
                values: {
                  ACCOUNT_DETAIL_TYPE_NULL: 0,
                  INCOME: 1,
                  EXPENSE: 2
                }
              },
              BnsTypeEnum: {
                values: {
                  BnsTypeEnum_NULL: 0,
                  ORDER: 1,
                  GROUP_ORDER: 2,
                  SUPER_LUCKY: 3
                }
              }
            }
          },
          ProductAdvanceSearchEnum: {
            fields: {},
            nested: {
              MarkEnum: {
                values: {
                  EQUAL: 0,
                  NOT: 1,
                  GT: 2,
                  GTE: 3,
                  LT: 4,
                  LTE: 5,
                  CONTAIN: 6,
                  RANGE: 7
                }
              },
              OperatorEnum: {
                values: {
                  AND: 0,
                  OR: 1
                }
              }
            }
          },
          ProductEnum: {
            fields: {},
            nested: {
              ItemShowStatus: {
                values: {
                  SHOW_UN_USE: 0,
                  SHOW: 1,
                  HIDE: 2
                }
              },
              ShelveStatus: {
                values: {
                  SHELF_STATUS_NULL: 0,
                  ON_SHELVE: 1,
                  OFF_SHELVE: 2
                }
              },
              SaleStatus: {
                values: {
                  SALE_NULL: 0,
                  ON_SALE: 1,
                  OFF_SALE: 2
                }
              },
              ProductType: {
                values: {
                  COMMON_GOODS: 0,
                  SMALL_GIFT_PACKAGE: 1,
                  BIG_GIFT_PACKAGE: 2,
                  COURSE_PRODUCT: 3,
                  GROUP_PRODUCT: 4,
                  LIVE_PRODUCT: 5,
                  ACTIVE_PRODUCT: 6,
                  PRIME_PRODUCT: 7,
                  COMPOSITE_PRODUCT: 8,
                  VIRTUAL_PRODUCT: 9,
                  WHOLESALE_PRODUCT: 10,
                  WEBUSINESS_PRODUCT: 11,
                  LITE_GIFT: 12,
                  SUPER_LUCKY_PRODUCT: 13,
                  WEBUSINESS_GIFT: 14,
                  TOPUP_CHARGE: 15,
                  BILL_CHARGE: 16,
                  TYPE_NULL: -1
                }
              },
              ProductPattern: {
                values: {
                  PATTERN_NULL: 0,
                  COMMON: 1,
                  VIRTUAL: 2,
                  SERVICE: 3
                }
              },
              Nature: {
                values: {
                  NATURE_NULL: 0,
                  GENERAL: 1,
                  SENSITIVE: 2,
                  CONTRABAND: 3
                }
              },
              FreightType: {
                values: {
                  FREE_SHIPPING: 0,
                  SHIPPING_TEMPLATE: 2
                }
              },
              SaleWay: {
                values: {
                  SALE_WAU_NULL: 0,
                  SALE_OUT_STOP: 1,
                  SALE_PURCHASE: 2
                }
              },
              DeliveryWay: {
                values: {
                  DELIVERY_NULL: 0,
                  PLATFORM_DELIVERY: 1,
                  DIRECT_SHIPMENT: 2
                }
              },
              Currency: {
                values: {
                  CURRENCY_NULL: 0,
                  USD: 1,
                  CNY: 2,
                  MYR: 3,
                  THB: 4,
                  IDR: 5
                }
              },
              QueryTimeType: {
                values: {
                  TIME_TYPE_NULL: 0,
                  CREATE_TIME: 1,
                  UPDATE_TIME: 2
                }
              },
              LabelType: {
                values: {
                  LABEL_TYPE_NULL: 0,
                  FREE_SHIP: 1,
                  HOT: 2,
                  HIGH_COMMISSION: 3,
                  NEW: 4,
                  FAST_DELIVERY: 5
                }
              },
              DraftStatusType: {
                values: {
                  DRAFT_STATUS_TYPE_NULL: 0,
                  CHECK_FAILED: 1,
                  CHECK_TO_CONFIRM: 2,
                  CHECK_PENDING: 3,
                  CHECK_FINISHED: 4
                }
              },
              AutoFetchStatus: {
                values: {
                  FETCH_NULL: 0,
                  FETCH_FAILED: 1,
                  FETCH_TO_CONFIRM: 2,
                  FETCH_SUCCESS: 3
                }
              },
              ProductSource: {
                values: {
                  SOURCE_NULL: 0,
                  SOURCE_MANUAL: 1,
                  SOURCE_SHUAIBAO: 2,
                  SOURCE_1688: 3,
                  SOURCE_PDD: 4,
                  SOURCE_ROBOT: 5,
                  SOURCE_SUPPLIER: 6,
                  SOURCE_DIANBA: 7
                }
              },
              OneKeyPublishType: {
                values: {
                  PUBLISH_NULL: 0,
                  PUBLISH_MANUAL: 1,
                  PUBLISH_ONE_KEY: 2,
                  PUBLISH_SUPPLIER: 3
                }
              },
              StockSuggest: {
                values: {
                  SUGGEST_NULL: 0,
                  SUGGEST_ON_SHELVE: 1,
                  SUGGEST_OFF_SHELVE: 2,
                  SUGGEST_ON_SALE: 3,
                  SUGGEST_OFF_SALE: 4,
                  SUGGEST_SALE_PURCHASE: 5,
                  SUGGEST_ADVANCE_PRODUCT: 6
                }
              },
              OffShelveReason: {
                values: {
                  REASON_NULL: 0,
                  TEMPORARILY_SHORT_OF_STOCK: 1,
                  PERMANENTLY_OUT_OF_STOCK: 2,
                  PROHIBITED: 3,
                  UNSALABLE: 4,
                  QUALITY_ISSUE: 5,
                  SUPPLIER_NOT_COOPERATE: 6,
                  OTHER: 7,
                  SUPPLIER_SELF: 8
                }
              },
              DraftType: {
                values: {
                  DRAFT_UNKNOWN: 0,
                  DRAFT_NEW: 1,
                  DRAFT_EDIT: 2,
                  DRAFT_STATUS: 3
                }
              },
              SortColumn: {
                values: {
                  DEFAULT: 0,
                  SALES: 1,
                  MANUAL: 2,
                  CART: 3,
                  ACTIVE: 4
                }
              },
              SortType: {
                values: {
                  ASC: 0,
                  DESC: 1
                }
              }
            }
          },
          CategoryEnum: {
            fields: {},
            nested: {
              ShowStatus: {
                values: {
                  SHOW_UN_USE: 0,
                  SHOW: 1,
                  HIDE: 2
                }
              },
              SortDirection: {
                values: {
                  UN_USE: 0,
                  SORT_UP: 1,
                  SORT_DOWN: 2
                }
              },
              CateType: {
                values: {
                  CATE_TYPE_NULL: 0,
                  FRONT: 1,
                  BACKEND: 2
                }
              },
              CateLevel: {
                values: {
                  CATE_LEVEL_NULL: 0,
                  CATE_LEVEL_ONE: 1,
                  CATE_LEVEL_TWO: 2,
                  CATE_LEVEL_THREE: 3
                }
              },
              CateProdTop: {
                values: {
                  NORMAL: 0,
                  TOP: 1
                }
              },
              PreferredCateType: {
                values: {
                  PRE_CATE_TYPE_NULL: 0,
                  PREFERRED_TYPE: 1,
                  GENERAL_TYPE: 2
                }
              }
            }
          },
          AttributeEnum: {
            fields: {},
            nested: {
              Customize: {
                values: {
                  NOT_ALLOW_CUSTOMIZE: 0,
                  ALLOW_CUSTOMIZE: 1
                }
              },
              ShowStatus: {
                values: {
                  SHOW_UN_USE: 0,
                  SHOW: 1,
                  HIDE: 2
                }
              },
              ValueType: {
                values: {
                  VALUE_TYPE_UN_USER: 0,
                  NORMAL: 1,
                  CUSTOMIZE: 2
                }
              },
              AttrType: {
                values: {
                  TYPE_NULL: 0,
                  PARAM_ATTR: 1,
                  STANDARD_ATTR: 2
                }
              },
              ContentType: {
                values: {
                  CONTENT_NULL: 0,
                  ATTR_NAME: 1,
                  VALUE_NAME: 2
                }
              }
            }
          },
          MsggwEnum: {
            fields: {},
            nested: {
              PushType: {
                values: {
                  NULL_PUSH_TYPE: 0,
                  MANUAL_PUSH: 1,
                  TIMING_PUSH: 2,
                  IMMEDIATELY_PUSH: 3,
                  BATCH_TIMING_PUSH: 4
                }
              },
              ReadStatus: {
                values: {
                  NULL_READ_STATUS: 0,
                  UNREAD: 1,
                  READ: 2
                }
              },
              DeviceType: {
                values: {
                  UNKNOWN: 0,
                  ANDROID: 1,
                  IOS: 2
                }
              }
            }
          },
          AppVersion: {
            fields: {},
            nested: {
              AppVersionUpdateTypeEnum: {
                values: {
                  AppVersionUpdateType_NULL: 0,
                  Optional: 1,
                  Mandatory: 2
                }
              },
              AppVersionStatusEnum: {
                values: {
                  AppVersionStatus_NULL: 0,
                  wait_released: 1,
                  released: 2
                }
              },
              AppVersionUpdateDownloadTypeEnum: {
                values: {
                  AppVersionUpdateDownloadTypeEnum_NULL: 0,
                  Web: 1,
                  AppStore: 2
                }
              }
            }
          },
          PurchaseOrderEnum: {
            fields: {},
            nested: {
              UseFingoSystem: {
                values: {
                  NULL_USE_FINGO: 0,
                  USE: 1,
                  NOT_USE: 2
                }
              },
              DeliveWay: {
                values: {
                  NULL_DELIVE: 0,
                  OCEAN: 1,
                  AIR: 2
                }
              }
            }
          },
          PledgeEnum: {
            fields: {},
            nested: {
              PaymentType: {
                values: {
                  PAYMENT_NULL: 0,
                  SYSTEM_PAY: 1,
                  NOT_PAY: 2
                }
              },
              ShowType: {
                values: {
                  SHOE_NULL: 0,
                  SHOW_PRODUCT_DETAIL: 1,
                  SHOW_ALL: 2,
                  SHOW_NOTHING: 3
                }
              },
              RangeType: {
                values: {
                  RANGE_NULL: 0,
                  RANGE_CATEGORY: 1,
                  RANGE_PRODUCT_TYPE: 2
                }
              }
            }
          },
          ErpEnum: {
            fields: {},
            nested: {
              YesNo: {
                values: {
                  NULL_YES_NO: 0,
                  YES: 1,
                  NO: 2
                }
              },
              InventoryOperType: {
                values: {
                  NULL_INVENTORY_OPER_TYPE: 0,
                  ADD: 1,
                  REDUCE: 2,
                  REPLACE: 3
                }
              },
              InventoryRecordType: {
                values: {
                  NULL_INVENTORY_RECORD_TYPE: 0,
                  CONFIRM_PURCHASE: 1,
                  STOCKOUT: 2,
                  LOGI_INCOME: 3,
                  ORDER_DELIVER: 4,
                  CREATE_ORDER: 5,
                  CANNEL_ORDER: 6,
                  ADMIN_UPDATE: 7,
                  MATCH_COMPLETE: 8
                }
              },
              QtyType: {
                values: {
                  NULL_QTY_TYPE: 0,
                  IN_STOCK_QTY: 1,
                  RESERVE_QTY: 2,
                  BOOKED_QTY: 3,
                  VIRTUAL_QTY: 4,
                  SUPPLIER_QTY: 5,
                  MATCH_QTY: 6,
                  MATCH_BOOKED_QTY: 7
                }
              },
              QtySourceType: {
                values: {
                  NULL_Qty_Source_Type: 0,
                  INCOME_ORDER: 1,
                  OUT_ORDER: 2,
                  ORDER: 3,
                  PURCHASE_ORDER: 4,
                  SUPPLIER_OPT: 5,
                  SUPPLIER_JIT_SHIP: 6,
                  STOCK_OUT: 7,
                  CANCEL: 8
                }
              },
              OutOrderStatus: {
                values: {
                  NULL_OUT_ORDER_STATUS: 0,
                  OUT: 1,
                  UNOUT: 2,
                  CANNELT: 3,
                  MATCH: 4
                }
              },
              SyncStatus: {
                values: {
                  NULL_SYNC_STATUS: 0,
                  SYNC: 1,
                  UNSYNC: 2,
                  SYNC_FAIL: 3
                }
              },
              SignStatus: {
                values: {
                  NULL_SIGN_STATUS: 0,
                  SIGN: 1,
                  UNSIGN: 2
                }
              },
              IncomeStatus: {
                values: {
                  NULL_INCOME_STATUS: 0,
                  INCOME: 1,
                  UNINCOME: 2
                }
              },
              ExternalStatus: {
                values: {
                  NULL_EXTERNAL_STATUS: 0,
                  PURCHASE_WAIT: 1,
                  PURCHASE_WAIT_PAY: 2,
                  PURCHASE_SUCCESS: 3,
                  PURCHASE_FAIL: 4,
                  PURCHASE_CANCEL: 5
                }
              },
              LogiType: {
                values: {
                  NULL_LOGI_TYPE: 0,
                  COMMON_EXPRESS: 1,
                  ECONOMY_EXPRESS: 2
                }
              },
              CooperateStatus: {
                values: {
                  NULL_COOPERATE_STATUS: 0,
                  NORMAL: 1,
                  STOP: 2,
                  BLACKLIST: 9
                }
              },
              LogiCompanyType: {
                values: {
                  NULL_LOGI_COMPANY_TYPE: 0,
                  SYSTEM: 1,
                  GENERAL_DELIVER: 2
                }
              },
              BizType: {
                values: {
                  ALL: 0,
                  JIT: 1,
                  ADVANCE: 2,
                  NOW: 3,
                  COSTGO: 4
                }
              },
              JitOrderStatus: {
                values: {
                  NULL_JIT_ORDER_STATUS: 0,
                  UN_SHIP: 1,
                  PART_SHIP: 2,
                  SHIPPED: 3,
                  CANCELED: 4
                }
              },
              QueryTimeType: {
                values: {
                  TIME_TYPE_NULL: 0,
                  CREATE_TIME: 1,
                  UPDATE_TIME: 2,
                  PAY_TIME: 3,
                  SHIP_TIME: 4,
                  MATCH_TIME: 5,
                  SYNC_TIME: 6,
                  CANCEL_TIME: 7
                }
              },
              ReqSourceType: {
                values: {
                  REQ_SOURCE_TYPE_NULL: 0,
                  BOSS: 1,
                  SUPPLIER: 2
                }
              }
            }
          },
          PriceTemplateEnum: {
            fields: {},
            nested: {
              EffectStatus: {
                values: {
                  EFFECT_NULL: 0,
                  EFFECT: 1,
                  DISABLE: 2
                }
              }
            }
          },
          CmsEnum: {
            fields: {},
            nested: {
              ArticleComponentTypeEnum: {
                values: {
                  COMPONENT_TYPE_NULL: 0,
                  TEXT: 1,
                  PIC: 2,
                  AUDIO: 3,
                  VIDEO: 4,
                  URL: 5
                }
              },
              ArticleContentTypeEnum: {
                values: {
                  ARTICLE_CONTENT_TYPE_NULL: 0,
                  IMAGE_TEXT: 1,
                  FEED: 2,
                  WATERFALL: 3
                }
              },
              ArticleStatusEnum: {
                values: {
                  ARTICLE_STATUS_NULL: 0,
                  WAIT_SEND: 1,
                  SENDED: 2,
                  RECALL: 3
                }
              },
              ArticleDataCountTypeEnum: {
                values: {
                  ARTICLE_DATA_COUNT_TYPE_NULL: 0,
                  SHARE: 1,
                  BROWSE: 2
                }
              }
            }
          },
          CartEnum: {
            fields: {},
            nested: {
              ItemLabelType: {
                values: {
                  ITEM_LABEL_TYPE_NULL: 0,
                  ACTIVITY: 1,
                  SERVICE_TEMPLATE: 2
                }
              },
              SelectedType: {
                values: {
                  SELECTED_NULL: 0,
                  NOT_SELECTED: 1,
                  SELECTED: 2
                }
              }
            }
          },
          Push: {
            fields: {},
            nested: {
              MessageBizCodeEnum: {
                values: {
                  MESSAGE_BIZ_CODE_NULL: 0,
                  ORDER_CODE: 1,
                  MEMBER_CODE: 2,
                  PROMOTION_CODE: 3,
                  REVENUE_CODE: 4,
                  CUSTOMER_CODE: 5
                }
              }
            }
          },
          Member: {
            fields: {},
            nested: {
              OrderCommissionTypeEnum: {
                values: {
                  ORDER_COMMISSION_TYPE_NULL: 0,
                  SELF_BUY_COMMISSION: 1,
                  FANS_BUY_ORDER: 4,
                  TEAM_SELL_ORDER: 5,
                  LEADERSHIP2: 10,
                  GIFT_COMMISSION1: 2,
                  LEADERSHIP1: 6,
                  TEAM_GIFT: 7,
                  GIFT_COMMISSION2: 8,
                  SYSTEM_COMMISSION: 9,
                  SUPER_GIFT_COMMISSION1: 11,
                  SUPER_GIFT_COMMISSION2: 12,
                  SUPER_TEAM_GIFT: 13,
                  SUPER_LEADERSHIP1: 14,
                  LUCKY_DRAW_POINTS: 19,
                  ACTIVITY_POINTS: 20,
                  MICRO_BOSS_SELF_BUY_COMMISSION: 21,
                  MICRO_BOSS_FANS_BUY_ORDER: 22,
                  MICRO_BOSS_TEAM_SELL_ORDER: 23,
                  MICRO_BOSS_LEADERSHIP: 24,
                  WEEK_SETTLEMENT: 25,
                  TASK_COMMISSION_PS_ORDINARY: 26,
                  TASK_COMMISSION_PS_GIFT: 27,
                  TASK_COMMISSION_PS_MICRO: 28,
                  MICRO_MONTH_SALES: 29,
                  CASH: 100,
                  CASH_OUT_FAILURE: 99,
                  ORDER_PAY: 101,
                  ORDER_REFUND: 102,
                  GROUP_ORDER_PAY: 103,
                  ORDER_COMMISSION_DEDUCTION: 104,
                  ORDER_AFTER_REFUND: 110,
                  SYSTEM_DEDUCTION: 111,
                  SUPER_LUCKY_REFUND: 120
                }
              },
              MemberLevelEnum: {
                values: {
                  MEMBER_LEVEL_NULL: 0,
                  V2: 2,
                  V3: 3,
                  V4: 4,
                  V5: 5
                }
              },
              RegisterChannelEnum: {
                values: {
                  REGISTER_WAY_NULL: 0,
                  OPEN_RED_ENVELOPE: 1,
                  GROUP_BOOKING: 2
                }
              }
            }
          },
          AdvanceSaleEnum: {
            fields: {},
            nested: {
              AdvanceType: {
                values: {
                  ADVANCE_TYPE_NULL: 0,
                  ADVANCE_ON: 1,
                  ADVANCE_OFF: 2
                }
              },
              EndConfig: {
                values: {
                  END_CONFIG_NULL: 0,
                  END_CONFIG_AUTO_OFF_SHELVE: 1,
                  END_CONFIG_KEEP: 2
                }
              },
              PurchaseConfig: {
                values: {
                  PURCHASE_CONFIG_NULL: 0,
                  PURCHASE_CONFIG_AUTO: 1,
                  PURCHASE_CONFIG_MANUAL: 2
                }
              },
              AdvanceStatus: {
                values: {
                  ADVANCE_STATUS_NULL: 0,
                  ADVANCE_STATUS_NOT_STARTED: 1,
                  ADVANCE_STATUS_IN_PROCESS: 2,
                  ADVANCE_STATUS_FINISHED: 3
                }
              }
            }
          },
          FreightEnum: {
            fields: {},
            nested: {
              ShippingType: {
                values: {
                  SHIPPING_NULL: 0,
                  SHIPPING_NORMAL: 1,
                  SHIPPING_ECONOMY: 3
                }
              }
            }
          },
          DataCenterEnum: {
            fields: {},
            nested: {
              DimensionType: {
                values: {
                  DIMENSION_TYPE_NULL: 0,
                  PRODUCT_TYPE: 1,
                  COUNTRY_CODE: 2,
                  MEMBER_LEVEL: 3,
                  SOURCE: 4,
                  PAGE: 5,
                  SITE: 6
                }
              }
            }
          },
          ImEnum: {
            fields: {},
            nested: {
              EvaluationSatisfiedEnum: {
                values: {
                  EvaluationSatisfiedEnum_NULL: 0,
                  SATISFIED: 1,
                  DISSATISFIED: 2
                }
              }
            }
          }
        }
      },
      errcode: {
        options: {
          java_multiple_files: false,
          java_package: "com.fingo.littlec.proto.common",
          java_outer_classname: "LittlecErr"
        },
        nested: {
          ErrorCode: {
            values: {
              ERRORCODE_NULL: 0,
              SUCCESS: 1,
              INNER_ERROR: -1,
              AUTH_NEED: 2,
              INVALID_REQUEST: 3,
              BIZ_ERROR: 20,
              SYS_ERROR: 21,
              NAME_CODE_LIST_EMPTY: 680,
              NAME_CODE_CH_EMPTY: 681,
              NAME_CODE_EN_EMPTY: 682,
              NAME_CODE_MS_EMPTY: 683,
              NAME_CODE_TH_EMPTY: 684,
              NAME_CODE_ID_EMPTY: 685,
              BACK_PARAMS_ERROR: 701,
              BACK_OPERATE_FAILED: 702,
              FILE_NOT_EXIST: 703,
              BACK_LOGIN_EXPIRED: 704,
              INNER_PARAMS_ERROR: 801,
              APP_LOGIN_EXPIRED: 901,
              APP_PARAMS_ERROR: 902,
              APP_INVALID_MOBILE: 903,
              APP_REPEATED_SUBMIT: 904,
              APP_OPERATE_FAILED: 905,
              APP_VERSION_TOO_LOW: 906,
              POLYPAY_BANK_ACCOUNT_NOT_EXISTS: 1001,
              POLYPAY_BELOW_MINIMUM_CASH_OUT: 1003,
              POLYPAY_BANK_ACCOUNT_STATUS_ERROR: 1004,
              POLYPAY_BANK_BALANCE_NOT_ENOUGH: 1005,
              POLYPAY_ADDRESS_NOT_EXISTS: 1006,
              POLYPAY_PLEASE_CHOOSE_POSTCODE: 1007,
              POLYPAY_CONNECT_MODE_ERROR: 1010,
              POLYPAY_INVALID_BANK_ACCOUNT: 1011,
              POLYPAY_INVALID_EMAIL: 1012,
              POLYPAY_BANK_ACCOUNT_NUM_OUT_LIMIT: 1013,
              POLYPAY_ACCOUNT_EXISTS: 1024,
              POLYPAY_BANK_NOT_EXISTS: 1026,
              POLYPAY_BANK_ID_CAN_NOT_BE_NULL: 1027,
              POLYPAY_YOU_DONT_HAVE_THIS_ACCOUNT: 1028,
              POLYPAY_THIS_ACCOUNT_HAS_EXISTS: 1029,
              POLYPAY_DETAIL_TYPE_ILLEGAL: 1033,
              POLYPAY_USER_ID_NULL: 1034,
              POLYPAY_BANK_ACCOUNT_NO_ERROR: 1035,
              POLYPAY_EMAIL_ERROR: 1036,
              POLYPAY_PLEASE_NOT_REQUEST_AGAIN: 1037,
              POLYPAY_CASH_LIMITED: 1038,
              POLYPAY_SET_DEFAULT_BANK_ACCOUNT_FAIL: 1039,
              POLYPAY_CASH_OVER: 1040,
              POLYPAY_USER_NOT_EXISTS: 1041,
              POLYPAY_CASH_OUT_FAILURE: 1042,
              POLYPAY_THE_RECORD_CAN_NOT_DO_THIS: 1043,
              POLYPAY_ACCOUNT_ID_NULL: 1045,
              POLYPAY_ACCOUNT_NAME_NULL: 1046,
              POLYPAY_ACCOUNT_NO_NULL: 1047,
              POLYPAY_EMAIL_NULL: 1048,
              POLYPAY_BANK_CODE_NULL: 1050,
              POLYPAY_BANK_NAME_NULL: 1051,
              POLYPAY_BANK_ACCOUNT_MISMATCH_BANK_NAME: 1052,
              POLYPAY_NOT_YOUR_BANK_ACCOUNT: 1053,
              POLYPAY_BANK_ACCOUNT_ALREADY_EXISTS: 1054,
              POLYPAY_YOU_HAVE_NOT_BOUND_ANY_BANK_ACCOUNT: 1055,
              POLYPAY_CREDIT_CARD_PAYMENT_CHANNEL_CLOSED: 1056,
              POLYPAY_BANK_ID_IS_NULL: 1057,
              USER_AMOUNT_BALANCE_OPERATION_FAILURE: 1058,
              USER_AMOUNT_ADD_FAILURE: 1059,
              USER_AMOUNT_BALANCE_INSUFFICIENT: 1060,
              CARD_NUMBER_CHECK_FAILURE: 1061,
              POLYPAY_PAY_INFO_NOT_EXITS: 1062,
              POLYPAY_CAN_NOT_PAY: 1063,
              POLYPAY_BANK_CARD_CAN_NOT_WITHDRAW: 1064,
              POLYPAY_OMISE_PAY_MINIMUM_20_THB: 1065,
              POLYPAY_OMISE_PAY_MINIMUM_1_SGB: 1066,
              POLYPAY_TXNID_HAS_USED: 1067,
              POLYPAY_PAYMENT_PASSWORD_ERROR: 1068,
              POLYPAY_PAYMENT_PASSWORD_FAILURE_FIVE_TIMES: 1069,
              POLYPAY_PAYMENT_PASSWORD_FAILURE_TEN_TIMES: 1070,
              POLYPAY_ACCOUNT_FROZEN: 1071,
              POLYPAY_COD_NOT_USE: 1072,
              POLYPAY_COD_USED: 1073,
              POLYPAY_COD_HANDLER_FAIL: 1074,
              POLYPAY_WITHDRAW_WITHOUT_MOBILE: 1075,
              POLYPAY_COMPOSITE_PAY_NOT_PERMIT: 1076,
              POLYPAY_NEED_FILL_TAX_BILL: 1077,
              POLYPAY_CHARGE_NOT_PERMIT: 1078,
              MEMBER_INVITE_CODE_INVALID: 1101,
              MEMBER_MOBILE_HAS_BEEN_REGISTERED: 1102,
              MEMBER_INCORRECT_MOBILE_OR_PASSWORD: 1103,
              MEMBER_REGISTER_FAILURE: 1104,
              MEMBER_INVALID_MOBILE: 1105,
              MEMBER_THREEKEY_BINDING_FAILURE: 1106,
              MEMBER_USER_EXISTED: 1108,
              MEMBER_VALIDATE_CODE_ERROR: 1109,
              MEMBER_MOBILE_NOT_REGISTERED: 1110,
              MEMBER_MOBILE_NOT_SAME_AS_YOURSELF: 1111,
              MEMBER_YOU_HAVE_NOT_SET_THE_PHONE_NUMBER: 1112,
              MEMBER_ORIGINAL_PASSWORD_ERROR: 1113,
              MEMBER_ALREADY_SET_MOBILE: 1114,
              MEMBER_YOU_HAVE_ALREADY_BOUND_OTHER_PEOPLE: 1115,
              MEMBER_YOUR_LEVEL_IS_TOO_HIGH_TO_BOUND_OTHER_PEOPLE: 1116,
              MEMBER_LEVEL_IS_LOWER_THAN_YOURS: 1117,
              MEMBER_CANNT_BIND_YOURSELF: 1118,
              MEMBER_INVITER_IS_YOUR_FOLLOWER: 1119,
              MEMBER_BINDING_FAILED: 1120,
              MEMBER_SMS_FAILED_TO_SEND: 1121,
              MEMBER_SMS_IS_SENT_FREQUENTLY: 1122,
              MEMBER_EMAIL_BIND_FAILURE: 1123,
              MEMBER_LOGIN_PASSWORD_VERIFICATION_FAILED: 1124,
              MEMBER_QUESTION_TYPE_ERROR: 1125,
              MEMBER_QUESTION_DESC_ERROR: 1126,
              MEMBER_ADDRESS_ID_NULL: 1127,
              MEMBER_NO_DEFAULT_ADDRESS: 1128,
              MEMBER_DETAIL_ADDRESS_WRONG_FORMAT: 1129,
              MEMBER_CITY_CODE_NULL: 1130,
              MEMBER_CITY_NAME_NULL: 1131,
              MEMBER_STATE_CODE_NULL: 1132,
              MEMBER_STATE_NAME_NULL: 1133,
              MEMBER_RECEIVER_NAME_WRONG_FORMAT: 1134,
              MEMBER_COUNTRY_CODE_NULL: 1135,
              MEMBER_OPERATING_CONTENT_NULL: 1136,
              MEMBER_CONTENT_BEYOND_MAX_LENGTH: 1137,
              THIS_MOBILE_OWNER_IS_NOT_REGULAR_USER: 1138,
              MEMBER_COUNTRY_AREA_CODE_NULL: 1139,
              MEMBER_DEVICE_ID_NULL: 1140,
              MEMBER_THREE_KEY_NULL: 1141,
              MEMBER_USER_NOT_EXISTS: 1142,
              MEMBER_INVALID_EMAIL: 1143,
              MEMBER_ADDRESS_NOT_EXIST: 1145,
              DEVICE_INFO_IS_EMPTY: 1146,
              DEVICE_INFO_IS_INVALID: 1147,
              DEVICE_LID_IS_INVALID: 1148,
              DEVICE_TOKEN_IS_INVALID: 1149,
              STAFF_ROLE_NAME_EXISTS: 1501,
              STAFF_HAVE_USERS_IN_ROLE: 1502,
              STAFF_SYS_USER_NOT_EXISTS: 1503,
              STAFF_CAN_NOT_DELETE_ADMIN: 1504,
              STAFF_SYS_USER_PASSWORD_ERROR: 1505,
              STAFF_ROLE_NAME_NULL: 1506,
              STAFF_ROLE_ID_NULL: 1507,
              STAFF_SYS_USER_ACCOUNT_NULL: 1508,
              STAFF_SYS_USER_PASSWORD_NULL: 1509,
              STAFF_SYS_USER_ROLE_ID_NULL: 1510,
              STAFF_SYS_USER_NICKNAME_NULL: 1511,
              STAFF_SYS_USER_ID_NULL: 1512,
              STAFF_SYS_USER_IS_EXISTS: 1513,
              STAFF_OLD_PASSWORD_ERROR: 1514,
              THIRDPARTY_HTTP_RESPONSE_NOT_200: 3001,
              THIRDPARTY_DDING_PUSH_NOTIFICATION_TITLE_EMPTY: 3002,
              THIRDPARTY_DDING_PUSH_NOTIFICATION_CONTENT_EMPTY: 3003,
              AGENT_APP_AUTH_FAILED: 3101,
              AGENT_BACK_AUTH_FAILED: 3102,
              AGENT_APP_INVALID_REQUEST: 3103,
              ORDER_ID_IS_EMPTY: 3201,
              ORDER_ERROR_QUERY_PRODUCT_INFO: 3202,
              ORDER_PAY_TIMEOUT: 3203,
              ORDER_PRODUCT_PRICE_CHANGED: 3204,
              ORDER_ACTIVITY_COMMISSION_CHANGED: 3205,
              ORDER_PROMOTION_DISCOUNT_MOT_MATCH: 3206,
              ORDER_ACTIVITY_TIMIEOUT: 3207,
              ORDER_ACTIVITY_PRICE_CHANGED: 3208,
              ORDER_PROMOTION_TIMEOUT: 3209,
              ORDER_PROMOTION_RULE_CHANGED: 3210,
              ORDER_VIRTUAL_MIXED_WITH_OTHER: 3211,
              ORDER_GIFT_MIXED_WITH_OTHER: 3212,
              ORDER_GIFT_MORE_THEN_ONE: 3213,
              ORDER_REACH_BUY_LIMIT: 3214,
              ORDER_INVENTORY_SHORTAGE: 3215,
              ORDER_FREIGHT_CALC_ERROR: 3216,
              ORDER_QUERY_PRODUCT_INFO_ERROR: 3217,
              ORDER_QUERY_USER_INFO_ERROR: 3218,
              ORDER_RECEIVING_TIMEOUT: 3219,
              ORDER_COUPON_ALREADY_USED: 3220,
              ORDER_QUERY_ARRIVAL_PLEDGE_ERROR: 3221,
              ORDER_QUERY_AFTER_PLEDGE_ERROR: 3222,
              ORDER_CART_COMMON_GOODS_ONLY: 3223,
              ORDER_POINTS_NOT_ENOUGH: 3224,
              ORDER_USE_POINTS_WRONG_COUNTRY: 3225,
              ORDER_ORDER_ID_INVALID: 3226,
              ORDER_NOT_TRADE_SUCCESS: 3227,
              ORDER_APPLY_AFTER_TIMEOUT: 3228,
              ORDER_STATUS_NOT_WAIT_FOR_PAY: 3229,
              ORDER_AFTER_ID_REQUIRED: 3230,
              ORDER_AFTER_CANNOT_REAPPLY: 3231,
              ORDER_NO_SUCH_ORDER: 3232,
              ORDER_COUPON_INVALIED: 3233,
              ORDER_ADDRESS_IS_EMPTY: 3234,
              ORDER_UNRECOGNIZED_ORDER_TYPE: 3235,
              ORDER_SMALL_GIFT_NOT_ALLOWED: 3236,
              ORDER_PRODUCT_INFO_IS_EMPTY: 3237,
              ORDER_GROUPID_IS_EMPTY: 3238,
              ORDER_STATUS_NOT_WAIT_FOR_RECEIVING: 3239,
              ORDER_SUBORDER_ID_ERROR: 3240,
              ORDER_GET_TIME_ERROR: 3241,
              ORDER_CONFIRM_PARAM_ERROR: 3242,
              ORDER_SKU_IS_NOT_ON_SELL: 3243,
              ORDER_PRODUCT_NOT_EXISTS: 3244,
              ORDER_VIRTUAL_CANNOT_FREESHIP: 3245,
              ORDER_GROUP_MEMBER_FULL: 3246,
              ORDER_GIFT_CANNOT_CROSS_COUNTRY: 3247,
              ORDER_CANNOT_CANCEL_AFTER8: 3248,
              ORDER_GIFT_ORDER_CANNOT_CANCEL: 3249,
              ORDER_CANNOT_REFUND_TO_BANK: 3250,
              ORDER_BANKINFO_IS_NULL: 3251,
              ORDER_CANNOT_REFUND: 3252,
              ORDER_NO_PAY_RECODE: 3253,
              ORDER_ADDRESS_COUNTRY_NOT_MATCH: 3254,
              ORDER_PRODUCT_NUM_ERROR: 3255,
              ORDER_COUNTRYCODE_INVALID: 3256,
              ORDER_RPODUCT_IS_UNDER_AFTER: 3257,
              ORDER_REFUND_AMOUNT_EMPTY: 3258,
              ORDER_APPLY_REFUND_AMOUNT_TOO_LARGE: 3259,
              ORDER_PARAM_IS_INVALID: 3260,
              ORDER_NO_SUCH_EXPRESS: 3261,
              ORDER_STATUS_CHANGED: 3262,
              ORDER_IS_UNDER_RERUND: 3263,
              ORDER_GROUP_PAY_FALSE: 3264,
              ORDER_ACTIVITY_NOT_START: 3265,
              ORDER_GROUP_ID_INVALID: 3266,
              ORDER_NOT_EXIST: 3267,
              ORDER_SUB_NOT_EXIST: 3268,
              ORDER_GROUP_MEMBER_ALREADY_EXISTS: 3269,
              ORDER_GROUP_MEMBER_CANNER_JOIN: 3270,
              ORDER_GROUP_MEMBER_CANNER_LAUNCH: 3271,
              ORDER_SPLIT_ORDER_TIMEOUT: 3272,
              ORDER_LOGI_INFO_NOT_EXIST: 3277,
              ORDER_ITEM_INFO_CHANGED: 3278,
              ORDER_ADDRESS_NOT_MODIFY: 3290,
              ORDER_COD_RECEIPTUNABLE: 3291,
              ORDER_ADDRESS_UNVALID: 3292,
              ORDER_PRODUCT_TOO_MORE: 3293,
              ORDER_PRODUCT_NOT_EXIST: 3294,
              REFUND_STATUS_ERROR: 3295,
              ORDER_CANNOT_REFUND_TO_POINT: 3296,
              ORDER_REFUNDED_APPLYUPDATE: 3297,
              ORDER_REFUND_STATUS_NOT_SAME: 3298,
              ORDER_FEFUND_CANCEL_NOT_ALLOW: 3299,
              DRAW_GROUP_ONE_MAX_FIVE: 3300,
              DRAW_GROUP_OLD_USER_ENOUGH: 3301,
              DRAW_GROUP_NEW_USER_ENOUGH: 3302,
              DRAW_GROUP_ENOUGH: 3303,
              DRAW_GROUP_END: 3304,
              ORDER_CONFIRM_MIN_PURCHASE: 3321,
              ORDER_CONFIRM_PAGE_MIXUNABLE: 3322,
              ORDER_CONFIRM_PAGE_VOLUMENULL: 3323,
              ORDER_CONFIRM_PAGE_VOLUMEMIN: 3324,
              ORDER_NOT_ALLOW_AFTER: 3325,
              NEWVOUCHER_CART_NOTICE: 3326,
              NEWVOUCHER_CART_OLDUSER: 3327,
              NEWVOUCHER_CART_MOREPRO: 3328,
              ORDER_CONFIRM_MAX_PURCHASE: 3329,
              ORDER_COSTGO_AMOUNT_NOT_QUALIFIED: 3330,
              ADMIN_USER_OR_PASSWORD_WRONG: 4001,
              AGENT_ADMIN_NEED_LOGIN: 4002,
              AGENT_ADMIN_AUTH_FAILED: 4003,
              I18N_MODULE_ALREADUY_EXISTS: 4101,
              I18N_MODULE_NOT_EXISTS: 4102,
              I18N_MODULE_PAGE_ALREADY_EXISTS: 4103,
              I18N_MODULE_PAGE_NOT_EXISTS: 4104,
              I18N_PAGE_VARIABLE_VARIABLE_EXISTS: 4105,
              I18N_PAGE_VARIABLE_VARIABLE_NOT_EXISTS: 4106,
              I18N_LANGUAGE_VARIABLE_REF_NOT_EXISTS: 4107,
              I18N_ALREADY_UP_TO_DATE: 4108,
              I18N_PARAM_CHECK_ERROR: 4109,
              I18N_DOWNLOAD_URL_EMPTY: 4110,
              I18N_LANGUAGE_CODE_EMPTY_OR_NOT_EXIST: 4111,
              I18N_CONVERT_FILE_TO_EXCEL_DTO_IS_EMPTY: 4112,
              I18N_INSERT_VARIABLE_NOT_SAME_LAN: 4113,
              I18N_UPDATE_VARIABLE_NOT_SAME_LAN: 4114,
              I18N_EXIST_PAGE_IN_MANY_MODULE: 4115,
              I18N_EXCELDTO_FIELD_EMPTY: 4116,
              I18N_INCLUDE_NOT_EXIST_MODULE: 4117,
              I18N_INCLUDE_NOT_EXIST_PAGE: 4118,
              I18N_INCLUDE_NOT_EXIST_VARIABLE: 4119,
              I18N_LAN_NOT_SAME: 4120,
              I18N_FROM_CURRENCY_CODE_EMPTY: 4121,
              I18N_TO_CURRENCY_CODE_EMPTY: 4122,
              I18N_TEMPLATE_CODE_EMPTY: 4123,
              I18N_FROM_CURRENCY_CODE_NOT_EXIST: 4124,
              I18N_TO_CURRENCY_CODE_NOT_EXIST: 4125,
              I18N_MODULE_NAME_EMPTY: 4126,
              I18N_VARIABLE_NAME_EMPTY: 4127,
              I18N_TRANSLATE_EMPTY: 4128,
              I18N_MODULE_NAME_NOT_EXIST: 4129,
              I18N_PAGE_NAME_NOT_EXIST: 4130,
              I18N_VARIABLE_NOT_EXIST: 4131,
              PRODUCT_CATE_NAME_NOT_SET: 4201,
              PRODUCT_CATE_NOT_EXISTS: 4202,
              PRODUCT_CATE_PID_LEVEL_NOT_MATCH: 4203,
              PRODUCT_CATE_ALREADY_THE_FIRST: 4204,
              PRODUCT_CATE_ALREADY_THE_LAST: 4205,
              PRODUCT_CATE_SAME_NAME_EXIST: 4206,
              PRODUCT_CATE_PID_NOT_EXISTS: 4207,
              PRODUCT_CATE_LEVEL_EXCEED: 4208,
              PRODUCT_CATE_SORT_INVALID: 4209,
              PRODUCT_CATE_DELETE_FAILED_CATE_HAS_CHILDREN: 4210,
              PRODUCT_CATE_DELETE_FAILED_CATE_HAS_PRODUCT_REF: 4211,
              PRODUCT_CATE_SORT_TOO_LARGE: 4212,
              PRODUCT_CATE_FRONT_HAS_NO_BACK_CATE: 4213,
              PRODUCT_ATTR_NAME_NOT_SET: 4221,
              PRODUCT_ATTR_VALUE_NAME_EXISTS: 4222,
              PRODUCT_ATTR_NOT_EXISTS: 4223,
              PRODUCT_ATTR_CUSTOMIZE_NOT_ALLOW: 4224,
              PRODUCT_FREIGHT_TEMPLATE_EXISTS: 4251,
              PRODUCT_FREIGHT_TEMPLATE_NOT_EXIST: 4252,
              PRODUCT_FREIGHT_TEMPLATE_ADDRESS_PRODUCT_CAN_NOT_BUY: 4253,
              PRODUCT_CRAW_FAILED: 4271,
              PRODUCT_NOT_EXISTS: 4291,
              PRODUCT_COUNTRY_NOT_EXISTS: 4292,
              PRODUCT_PRICE_NOT_MATCH_RULE: 4293,
              PRODUCT_COMMISSION_RATE_TOO_HIGH: 4294,
              PRODUCT_CATE_ID_PARAM_INVALID: 4295,
              PRODUCT_SALE_COUNTRY_INVALID: 4296,
              PRODUCT_TYPE_INVALID: 4297,
              PRODUCT_NATURE_INVALID: 4298,
              PRODUCT_BRAND_INVALID: 4299,
              PRODUCT_SUPPLIER_INVALID: 4300,
              PRODUCT_TITLE_INVALID: 4301,
              PRODUCT_SUB_TITLE_INVALID: 4302,
              PRODUCT_SPU_COUNTRY_INFO_EMPTY: 4303,
              PRODUCT_SKU_COUNTRY_INFO_EMPTY: 4304,
              PRODUCT_COUNTRY_CODE_INVALID: 4305,
              PRODUCT_COUNTRY_FREIGHT_TYPE_INVALID: 4306,
              PRODUCT_COUNTRY_FREIGHT_ID_INVALID: 4307,
              PRODUCT_SHELVE_STATUS_INVALID: 4308,
              PRODUCT_PLEDGE_INFO_INVALID: 4309,
              PRODUCT_SKU_SPECIFICATION_INVALID: 4310,
              PRODUCT_SKU_BOX_SPECIFICATION_INVALID: 4311,
              PRODUCT_SKU_WEIGHT_INVALID: 4312,
              PRODUCT_SUPPLY_PRICE_INVALID: 4313,
              PRODUCT_CURRENCY_CODE_INVALID: 4314,
              PRODUCT_SKU_SALE_WAY_INVALID: 4315,
              PRODUCT_SKU_DELIVERY_WAY_INVALID: 4316,
              PRODUCT_SKU_PRICE_INVALID: 4317,
              PRODUCT_SKU_PRICE_VIP_INVALID: 4318,
              PRODUCT_SKU_ACTIVE_PRICE_INVALID: 4319,
              PRODUCT_SKU_COMMISSION_INVALID: 4320,
              PRODUCT_SKU_COUNTRY_SALE_STATUS_INVALID: 4321,
              PRODUCT_COMPOSITE_PARAM_ERROR: 4322,
              PRODUCT_COMPOSITE_COUNTRY_CODE_INVALID: 4323,
              PRODUCT_COMPOSITE_SLAVE_EMPTY: 4324,
              PRODUCT_COMPOSITE_SLAVE_DELIVER_NUMBER_INVALID: 4325,
              PRODUCT_COMPOSITE_SLAVE_SKU_ID_INVALID: 4326,
              PRODUCT_COMPOSITE_SLAVE_SKU_CODE_INVALID: 4327,
              PRODUCT_PIC_AND_VIDEO_LANGUAGE_CODE_INVALID: 4328,
              PRODUCT_PIC_AND_VIDEO_COVER_INVALID: 4329,
              PRODUCT_PIC_AND_VIDEO_ROTATION_INVALID: 4330,
              PRODUCT_PIC_AND_VIDEO_VIDEO_INVALID: 4331,
              PRODUCT_PIC_AND_VIDEO_DETAIL: 4332,
              PRODUCT_PIC_AND_VIDEO_FORM: 4333,
              PRODUCT_PIC_AND_VIDEO_DESC: 4334,
              PRODUCT_SPU_PARAM_ATTR_INVALID: 4335,
              PRODUCT_SKU_STANDARD_ATTR_INVALID: 4336,
              PRODUCT_SKU_COVER_INVALID: 4337,
              PRODUCT_SKU_COUNTRY_CODE_INVALID: 4338,
              PRODUCT_PIC_AND_VIDEO_EMPTY: 4339,
              PRODUCT_ID_INVALID: 4340,
              PRODUCT_SKU_ID_INVALID: 4341,
              PRODUCT_COMPOSITE_NESTED: 4342,
              PRODUCT_COMPOSITE_SLAVE_SKU_REPEATED: 4343,
              PRODUCT_DRAFT_ID_EMPTY: 4344,
              PRODUCT_DRAFT_NOT_EXIST: 4345,
              PRODUCT_EXISTS_DRAFT_PRODUCT: 4346,
              PRODUCT_FREIGHT_STATE_CODE_CONFLICT: 4347,
              PRODUCT_FREIGHT_ADDRESS_ERROR: 4348,
              PRODUCT_QUERY_RESULT_EMPTY: 4349,
              PRODUCT_ADVANCE_SALE_NOT_EXIST: 4350,
              PRODUCT_ATTR_CAN_NOT_MODIFY: 4351,
              PRODUCT_ORG_ID_EXISTS: 4352,
              PRODUCT_NEED_CHECK: 4353,
              PRODUCT_OPERATE_FORBIDDEN: 4354,
              PRODUCT_PRICE_TEMPLATE_LACK: 4355,
              WORDER_ORDER_GROUP_NAME_NOT_SET: 4500,
              WORDER_ORDER_GROUP_NAME_REPEAT: 4501,
              WORDER_ORDER_GROUP_MEMBERIDS_NOT_SET: 4502,
              WORDER_ORDER_GROUP_MEMBERIDS_HAS_INVALID_USER: 4503,
              WORDER_ORDER_GROUP_CAN_NOT_INVALID: 4504,
              WORDER_ORDER_TAG_NAME_NOT_SET: 4505,
              WORDER_ORDER_TAG_NAME_REPEAT: 4506,
              WORDER_ORDER_TWO_LEVEL_TAG_GROUP_NOT_SET: 4507,
              WORDER_ORDER_TWO_LEVEL_TAG_SET_GROUP_INVALID: 4508,
              WORDER_ORDER_GROUP_TYPE_NOT_SET: 4509,
              WORDER_ORDER_GROUP_ID_NOT_SET: 4510,
              WORDER_ORDER_GROUP_NOT_EXIST: 4511,
              WORDER_ORDER_TWO_LEVEL_TAG_GROUP_SUPERIOR_TAG_ID_NOT_SET: 4512,
              WORDER_ORDER_TAG_NOT_EXIST: 4513,
              WORDER_ORDER_GROUP_INVALID: 4514,
              STATUS_VALUE_INVALID: 4515,
              WORDER_ORDER_SUPERIOR_TAG_NOT_EXIST: 4516,
              WORDER_ORDER_TAG_ID_NOT_SET: 4517,
              WORDER_ORDER_SOURCE_NOT_SET: 4518,
              WORDER_ORDER_USER_ID_NOT_SET: 4519,
              WORDER_ORDER_DESCRIBE_NOT_SET: 4520,
              WORDER_ORDER_DISPATCH_USER_NOT_EXIST: 4521,
              WORDER_ORDER_USER_NICK_NAME_NOT_SET: 4522,
              WORDER_ORDER_TAG_HAS_NO_GROUP: 4523,
              WORDER_ORDER_DESCRIBE_TOO_LONG: 4524,
              WORDER_ORDER_CC_USER_NOT_EXIST: 4525,
              WORKER_ORDER_NO_NOT_SET: 4526,
              DEAL_MANAGER_ID_NOT_SET: 4527,
              DEAL_MANAGER_INVALID: 4528,
              DEAL_DESCRIBE_TOO_LONG: 4529,
              DEAL_TYPE_INVALID: 4530,
              WORKER_ORDER_NOT_EXIST: 4531,
              WORK_ORDER_NOT_UNRESOLVED: 4532,
              CAN_NOT_DEAL: 4533,
              DEAL_MANAGER_ASK_FOR_LEAVE: 4534,
              ILLEGAL_DATE: 4535,
              WORK_ORDER_SOP_ID_NOT_SET: 4536,
              WORK_ORDER_SOP_NAME_NOT_SET: 4537,
              WORK_ORDER_SOP_TAG_NOT_SET: 4538,
              WORK_ORDER_SOP_DESC_NOT_SET: 4539,
              WORK_ORDER_SOP_DESC_TOO_LONG: 4540,
              WORK_ORDER_SOP_REPLY_NOT_SET: 4541,
              WORK_ORDER_SOP_REPLY_TOO_LONG: 4542,
              WORK_ORDER_SOP_PIC_NOT_SET: 4543,
              WORK_ORDER_SOP_STATUS_NOT_SET: 4544,
              WORK_ORDER_SOP_EDIT_ALL_PARAM_NOT_SET: 4545,
              ACCOUNT_CODE_NULL: 4600,
              AUTH_CODE_NULL: 4601,
              ACCOUNT_NOT_EXIST: 4602,
              ACCOUNT_TOKEN_NULL: 4603,
              TEMPLATE_ADD_FAILURE: 5600,
              REVIEW_FAILURE: 5601,
              PARAM_ERROR: 5602,
              THE_REVIEW_TEMPLATE_NOT_VALID: 5603,
              CURRENCY_TEMPLATE_NOT_SET: 5604,
              CART_PRODUCT_NUM_INVALID: 5801,
              CART_ITEM_NOT_EXISTS: 5802,
              CART_ITEM_REACH_PURCHASE_LIMIT: 5803,
              CART_ITEM_REACH_INVENTORY_LIMIT: 5804,
              CART_ITEM_PRODUCT_INFO_FETCH_ERROR: 5805,
              CART_ITEM_TYPE_NOT_ALLOW_ADD_TO_CART: 5806,
              CART_ITEM_NUMBER_REACH_TOP_LIMIT: 5807,
              CART_ITEM_OFF_SALE: 5808,
              COLLECT_PRODUCT_EXISTS: 5901,
              COLLECT_PRODUCT_NOT_EXIST: 5902,
              SERVICE_TEMPLATE_COUNTRY_CODE_EMPTY: 6001,
              SERVICE_TEMPLATE_LIST_COUNTRY_CODE_EMPTY: 6002,
              SERVICE_TEMPLATE_AREA_ID_EMPTY: 6003,
              SERVICE_TEMPLATE_AREA_ID_NOT_EXIST: 6004,
              SERVICE_TEMPLATE_AS_ID_NOT_EXIST: 6005,
              SERVICE_TEMPLATE_AS_ID_EMPTY: 6006,
              SERVICE_TEMPLATE_AP_ID_EMPTY: 6007,
              SERVICE_TEMPLATE_AP_ID_NOT_EXIST: 6008,
              SERVICE_TEMPLATE_AP_ID_NOT_EXIST_MAPPING: 6009,
              SERVICE_TEMPLATE_AS_ID_LIST_EMPTY: 6010,
              SERVICE_TEMPLATE_AP_ID_LIST_EMPTY: 6011,
              SERVICE_TEMPLATE_PAGE_EMPTY: 6012,
              SERVICE_TEMPLATE_PAGE_NOT_EXIST: 6013,
              SERVICE_TEMPLATE_LANGUAGE_EMPTY: 6014,
              SERVICE_TEMPLATE_TIME_LIMIT_MIN_EMPTY: 6015,
              SERVICE_TEMPLATE_TIME_LIMIT_MAX_EMPTY: 6016,
              SERVICE_TEMPLATE_NAME_EMPTY: 6017,
              SERVICE_ARRIVAL_PROMISE_ENTITY_EMPTY: 6018,
              SERVICE_ARRIVAL_AREA_CODE_DUPLICATE: 6019,
              SERVICE_TEMPLATE_COUNTRY_CODE_NOT_EXIST: 6020,
              SERVICE_TEMPLATE_ARRIVAL_LIST_TYPE_NOT_EXIST: 6021,
              PROMOTION_PARA_EMPTY: 6101,
              PROMOTION_PROMOTION_NAME_EXIST: 6102,
              PROMOTION_PROMOTION_NAME_NOT_EXIST: 6103,
              PROMOTION_PROMOTION_SKUDTO_LIST_EMPTY: 6104,
              PROMOTION_PROMOTION_CITY_NAME_EMPTY: 6105,
              PROMOTION_PROMOTION_SPUIDS_NOT_EXIST: 6106,
              PROMOTION_PROMOTION_ID_LIST_NOT_EXIST: 6107,
              PROMOTION_TIME_CONFLICT: 6108,
              PROMOTION_CONFIG_NOT_EXISTS: 6109,
              PROMOTION_CONFIG_PRODUCT_NOT_MATCH: 6110,
              PROMOTION_SPUIDS_EMPTY: 6111,
              PROMOTION_RULE_LIST_EMPTY: 6112,
              PROMOTION_PRD_INFO_LIST_EMPTY: 6113,
              PROMOTION_RPOMOTION_DETAIL_LIST_EMPTY: 6114,
              PROMOTION_NO_MATCH_RULE: 6115,
              PROMOTION_AVER_FAV_EMPTY: 6116,
              PROMOTION_SUM_FAV_LESS_ZERO: 6117,
              PROMOTION_SPLIT_RESULT_EMPTY: 6118,
              PROMOTION_FREE_SHIPPING_RESULT_EMPTY: 6119,
              PROMOTION_SKU_LIST_EMPTY: 6120,
              PROMOTION_STATE_NAME_EMPTY: 6121,
              PROMOTION_PROMOTION_ID_LIST_EMPTY: 6122,
              PROMOTION_DATA_NOT_EXIST: 6123,
              PROMOTION_CHECK_FAIL: 6124,
              PROMOTION_JUDGE_SPU_LIST_NOT_EXIT: 6125,
              PROMOTION_FAV_BIGGER_THAN_SUM: 6126,
              PROMOTION_FAV_OR_SUM_IS_ZERO: 6127,
              PROMOTION_FAV_BIGGER_THAN_SUM_MUL_30_PERCENT: 6128,
              PROMOTION_FAV_OR_SUM_NOT_INCRE: 6129,
              PROMOTION_MONEY_OR_PIECES_NOT_INCRE: 6130,
              PROMOTION_PIECES_OR_RATE_NOT_INCRE: 6131,
              PROMOTION_COUPON_URL_INVALID: 6132,
              PROMOTION_INSERT_M_MONEY_N_PIECE_MUST_NUMBER: 6133,
              PROMOTION_INSERT_M_MONEY_N_PIECE_RANGE_FAIL: 6134,
              PROMOTION_CALCULATE_POINTS_FAIL: 6135,
              PROMOTION_END: 6136,
              PROMOTION_COUPON_PASSWORD_ERROR: 6137,
              PROMOTION_COUPON_RECEIVE_ERROR: 6138,
              PROMOTION_COUPON_NOT_EXIST: 6139,
              PROMOTION_COUPON_PASSWORD_NULL: 6140,
              PROMOTION_COUPON_TIME_NOT_EXIST: 6141,
              PROMOTION_COUPON_COUNTRY_CODE_IS_NULL: 6142,
              PROMOTION_COUPON_DAILY_LIMIT_NOT_ZERO: 6143,
              PROMOTION_COUPON_PERSON_LIMIT_NOT_ZERO: 6144,
              PROMOTION_COUPON_MEMBER_LEVEL_NOT_EXIST: 6145,
              PROMOTION_COUPON_DISCOUNT_ADD_ERROR: 6146,
              PROMOTION_COUPON_PASSWORD_EXIST: 6147,
              PROMOTION_COUPON_FAIL_PULL: 6148,
              PROMOTION_COUPON_HAS_PASSWORD: 6149,
              PROMOTION_COUPON_PACKAGE_HAS_PASSWORD: 6150,
              PROMOTION_COUPON_NOT_LONGER_AVAILABLE: 6151,
              PROMOTION_COUPON_EXPIRED: 6152,
              PROMOTION_COUPON_UPPER_LIMIT: 6153,
              PROMOTION_COUPON_ALREADY_RECEIVED: 6154,
              PROMOTION_COUPON_MEMBER_LEVEL_INCONFORMITY: 6155,
              PROMOTION_LANGUAGE_CODE_EMPTY: 6156,
              PROMOTION_COUPON_USED: 6157,
              PROMOTION_COUPON_MEMBER_LEVEL_INCONFORMITY_USE: 6158,
              PROMOTION_COUPON_NOT_USE_GIFT_PRODUCT: 6159,
              PROMOTION_COUPON_ERROR: 6160,
              PROMOTION_COUPON_FULL_AMT_NOT_FULL: 6161,
              PROMOTION_FULL_PIECE_REDUCTION_PIECE_MUST_NUMBER: 6162,
              PROMOTION_FULL_PIECE_REDUCTION_PIECE_FAV_BIGGER_ZERO: 6163,
              PROMOTION_EVERY_FULL_PIECE_REDUCTION_PIECE_MUST_NUMBER: 6164,
              PROMOTION_EVERY_FULL_PIECE_REDUCTION_PIECE_FAV_BIGGER_ZERO: 6165,
              PROMOTION_PIECES_OR_FAV_NOT_INCRE: 6166,
              PROMOTION_BACK_GROUND_INFO_COUNTRY_CODE_NULL: 6167,
              PROMOTION_BACK_GROUND_INFO_FUNCTION_TYPE_NULL: 6168,
              PROMOTION_BACK_GROUND_INFO_IMG_LIST_EMPTY: 6169,
              PROMOTION_BACK_GROUND_INFO_IMG_NOT_EXIST: 6170,
              PROMOTION_FUNCTION_AREA_ID_LIST_NOT_EXIST: 6171,
              PROMOTION_FUNCTION_VALID_CAN_NOT_DELETE: 6172,
              PROMOTION_FUNCTION_COUNTRY_CODE_EMPTY: 6173,
              PROMOTION_FUNCTION_URL_TYPE_EMPTY: 6174,
              PROMOTION_FUNCTION_SORT_INVALID: 6175,
              PROMOTION_MARKETING_GRID_ID_LIST_NOT_EXIST: 6176,
              PROMOTION_MARKETING_GRID_VALID_CAN_NOT_DELETE: 6177,
              PROMOTION_MARKETING_GRID_COUNTRY_CODE_EMPTY: 6178,
              PROMOTION_MARKETING_GRID_URL_TYPE_EMPTY: 6179,
              PROMOTION_MARKETING_GRID_TYPE_EMPTY: 6180,
              PROMOTION_MARKETING_GRID_SORT_INVALID: 6181,
              PROMOTION_MARKETING_GRID_NOT_EXIST: 6182,
              PROMOTION_FUNCTION_URL_EMPTY: 6183,
              PROMOTION_MARKETING_GRID_URL_EMPTY: 6184,
              PROMOTION_CATEGORY_BANNER_COUNTRY_CODE_EMPTY: 6185,
              PROMOTION_CATEGORY_BANNER_URL_TYPE_EMPTY: 6186,
              PROMOTION_CATEGORY_BANNER_URL_EMPTY: 6187,
              PROMOTION_CATEGORY_BANNER_ID_LIST_EMPTY: 6188,
              PROMOTION_CATEGORY_BANNER_ID_NOT_EXIST: 6189,
              PROMOTION_BACK_GROUND_START_TIME_AFTER_END_TIME: 6190,
              PROMOTION_START_TIME_AFTER_END_TIME: 6191,
              PROMOTION_CATEGORY_BANNER_TIME_DUPLICATE: 6192,
              PROMOTION_LUCK_DRAW_START_AND_END_TIME_NOT_NULL: 6193,
              PROMOTION_LUCK_DRAW_START_BEFORE_END_TIME: 6194,
              PROMOTION_LUCK_DRAW_NOT_100: 6195,
              PROMOTION_LUCK_DRAW_SOFT_BOLT_COUNT_ONE: 6196,
              PROMOTION_LUCK_DRAW_DECODE_ERROR: 6197,
              PROMOTION_LUCK_DRAW_ID_NOT_EXIST: 6198,
              PROMOTION_LUCK_DRAW_OUT_OF_TIME: 6199,
              PROMOTION_LUCK_PRIZE_ID_NOT_EXIST: 6200,
              PROMOTION_LUCK_DRAW_ID_EMPTY: 6201,
              PROMOTION_LUCK_PRIZE_ID_EMPTY: 6202,
              PROMOTION_LUCK_PRIZE_DUPLICATE: 6203,
              PROMOTION_LUCK_INCREASE_VALUE_EMPTY: 6204,
              PROMOTION_LUCK_INCREASE_VALUE_FORMAT_ERROR: 6205,
              PROMOTION_SHORT_URL_URL_EMPTY: 6206,
              PROMOTION_SHORT_URL_KEY_EMPTY: 6207,
              PROMOTION_SHORT_URL_KEY_NOT_EXIST: 6208,
              PROMOTION_PRODUCT_ID_EMPTY: 6209,
              PROMOTION_COUPON_PACKAGE_ID_EMPTY: 6210,
              PROMOTION_COUNTRY_CODE_EMPTY: 6211,
              PROMOTION_COUPON_ID_EMPTY: 6212,
              PROMOTION_COUPON_WHITE_LIST_TYPE_EMPTY: 6213,
              PROMOTION_COUPON_WHITE_LIST_TYPE_CONFLICT: 6214,
              PROMOTION_FORMAT_ERROR: 6215,
              PROMOTION_TIMESTAMP_FORMAT_ERROR: 6216,
              PROMOTION_COUPON_AMOUNT_EMPTY: 6217,
              PROMOTION_COUPON_TYPE_NOT_EXIST: 6218,
              PROMOTION_SHORT_KEY_FORMAT_ERROR: 6219,
              PROMOTION_PRODUCT_COUPON_CONFLICT: 6220,
              PROMOTION_PRODUCT_COUPON_NOT_EXIST: 6221,
              PROMOTION_COUPON_WHITE_LIST_NOT_EXIST: 6222,
              PROMOTION_COUPON_CANT_TRANSTO_OWN: 6223,
              PROMOTION_COUPON_CHANGED_OWNER: 6224,
              PROMOTION_COUPON_GIVING_NOT_EXIST: 6225,
              PROMOTION_COUPON_GIVING_DUPLICATE: 6226,
              PROMOTION_COUPON_GIVING_ALREADY_RECEIVED: 6227,
              PROMOTION_COUPON_GIVING_CANT_RECEIVE_OWN: 6228,
              PROMOTION_COUPON_GIVING_LINK_EXPIRED: 6229,
              PROMOTION_COUPON_USER_NOT_LOGIN: 6230,
              PROMOTION_LUCKDRAW_POINTS_VALUE_ERROR: 6231,
              PROMOTION_LUCKDRAW_ONCENUMBER_VALUE_ERROR: 6232,
              PROMOTION_ACTIVITY_TOOHOT: 6233,
              PROMOTION_NEW_USER_COUPON_COUNTRY_ERROR: 6234,
              MARKETING_PARA_EMPTY: 6501,
              MARKETING_HOT_SALE_TIME_NULL: 6502,
              MARKETING_HOT_SALE_TIME_COINCIDE: 6503,
              MARKETING_PRODUCT_EXIST: 6504,
              MARKETING_ADD_ERROR: 6505,
              MARKETING_START_AFTER_END: 6506,
              MARKETING_NAME_EXIST: 6507,
              MARKETING_END_BEFORE_CUR_TIME: 6508,
              MARKETING_PRE_TIME_ERROR: 6509,
              MARKETING_CUR_TIME_BET_TIME: 6510,
              MARKETING_END_NOT_UPDATE_DATA: 6511,
              MARKETING_START_END_TIME_NOT_MOVE_UP: 6512,
              MARKETING_START_TIME_NOT_BEFORE_CUR: 6513,
              MARKETING_PRODUCT_GROUP_LABEL_NOT_NULL: 6514,
              MARKETING_ACTIVE_COVER_NOT_NULL: 6515,
              MARKETING_PARA_NAME_EMPTY: 6516,
              MARKETING_PARA_URL_EMPTY: 6517,
              MARKETING_PARA_COVER_EMPTY: 6518,
              MARKETING_PARA_SWITCH_EMPTY: 6519,
              MARKETING_PARA_START_TIME_EMPTY: 6520,
              MARKETING_PARA_END_TIME_EMPTY: 6521,
              MARKETING_PARA_COUNTRY_EMPTY: 6522,
              MARKETING_FLOATING_SWITCH_ON_EXIST: 6523,
              MARKETING_FLOATING_NOT_EXIST: 6524,
              MARKETING_FLOATING_END_BEFORE_CUR: 6525,
              MARKETING_OPEN_REDBAG_IS_FULL: 6526,
              MARKETING_OPEN_REDBAG_IS_OVER: 6527,
              MARKETING_OPEN_REDBAG_ONLY_ONE: 6528,
              MARKETING_OPEN_REDBAG_NO_LADDER: 6529,
              MARKETING_OPEN_REDBAG_MAX_AMOUNT_IS_FULL: 6530,
              MARKETING_OPEN_REDBAG_IS_ACTIVITY_IN: 6531,
              MARKETING_OPEN_REDBAG_IS_REPEATED: 6532,
              MARKETING_OPEN_REDBAG_OLD_USER_IS_FULL: 65320,
              MARKETING_OPEN_REDBAG_USER_IS_NOT_LOGIN: 65321,
              MARKETING_OPEN_REDBAG_BY_OPEN_ERROR: 65322,
              MARKETING_OPEN_REDBAG_ACCOUNT_ERROR: 65323,
              MARKETING_USER_COUNTRY_CODE_IS_ID_NOT_OPEN: 65324,
              MARKETING_PAGE_SERIAL_ID_EMPTY: 6533,
              MARKETING_PAGE_SERIAL_ID_NOT_EXIST: 6534,
              MARKETING_HISTORY_SERIAL_ID_EMPTY: 6535,
              MARKETING_HISTORY_SERIAL_ID_NOT_EXIST: 6536,
              MARKETING_GROUP_ACTIVE_EXIST: 6537,
              MARKETING_QUALITY_RECOMMEND_ID_LIST_NOT_EXIST: 6538,
              MARKETING_QUALITY_RECOMMEND_VALID_CAN_NOT_DELETE: 6539,
              MARKETING_QUALITY_COUNTRY_CODE_EMPTY: 6540,
              MARKETING_QUALITY_URL_TYPE_EMPTY: 6541,
              MARKETING_QUALITY_TYPE_EMPTY: 6542,
              MARKETING_QUALITY_URL_EMPTY: 6543,
              MARKETING_QUALITY_SORT_INVALID: 6544,
              MARKETING_START_TIME_AFTER_END_TIME: 6545,
              MARKETING_ADD_PAGE_COUNTRY_NOT_EQUALS: 6546,
              MARKETING_COUNTRY_NOT_UPDATE: 6547,
              MARKETING_ACTIVE_PRODUCT_FOLLOW_ERROR: 6548,
              MARKETING_SL_PRODUCT_NOT_EXIST: 6549,
              MARKETING_SL_PRODUCT_RULE_NOT_EXIST: 6550,
              MARKETING_GIVE_SKU_EMPTY: 6580,
              MARKETING_GIVE_RULE_NOT_MATCH: 6581,
              MARKETING_GIVE_STATUS_EDIT: 6582,
              SUPER_LUCKY_ACTIVITY_NOT_EXIST: 6700,
              SUPER_LUCKY_ACTIVITY_IS_WAIT_SUCCESS: 6701,
              SUPER_LUCKY_ACTIVITY_IS_OVER: 6702,
              SUPER_LUCKY_ACTIVITY_IS_NOT_START: 6705,
              SUPER_LUCKY_ORDER_IS_EXIST: 6703,
              SUPER_LUCKY_ORDER_COUNTRY_CODE_IS_NOT_EQUES: 6704,
              SUPER_LUCKY_ORDER_MAX_THREE_ONE_DAY: 6706,
              MARKETING_ACTIVITY_PRICE_LOWER_THAN_VIP: 6800,
              SYSTEM_TIPS: 20000,
              REPEAT_COMMIT: 20001,
              DATA_NOT_EXIST: 20002,
              UNVILAD_PARAM: 20003,
              INVENTORY_SHORTAGE: 20004,
              REALEASE_ACTIVITY_INVENTORY: 20005,
              LOCK_QTY_ERROR: 20006,
              SKU_NOT_EXISTS: 20007,
              COUNTRY_NOT_SET_STOCK: 20008,
              PRODUCT_NOT_FOUND: 20009,
              DATA_IS_EXIST: 20010,
              ERP_OUT_CANCEL_FAIL: 20100,
              ERP_OUT_CREATE_FAIL: 20101,
              ERP_IN_CREATE_FAIL: 20201,
              ERP_IN_QUERY_FAIL: 20202,
              ERP_LOGI_CREATE_FAIL: 20301,
              ERP_JIT_ORDER_SUPPLIER_UNVILAD_DATA: 20401,
              EDIT_SPECIAL_COLUMN_ID_NOT_SET: 25001,
              EDIT_SPECIAL_COLUMN_NOT_EXIST: 25002,
              EDIT_SPECIAL_COLUMN_CONTENT_NOT_SET: 25003,
              ARTICLE_DUE_TIME_NOT_SET: 25053,
              ARTICLE_COUNTRY_NOT_SET: 25054,
              ARTICLE_CONTENT_TYPE_NOT_SET: 25055,
              ARTICLE_SPECIAL_COLUMN_ID_NOT_SET: 25056,
              SPECIAL_SUBJECT_NOT_EXIST: 25057,
              ARTICLE_TITLE_NOT_SET: 25058,
              ARTICLE_DESCRIBE_NOT_SET: 25059,
              ARTICLE_COVER_PIC_MINIMUM_OF_ONE: 25060,
              ARTICLE_SHARE_TITLE_NOT_SET: 25061,
              ARTICLE_SHARE_PIC_NOT_SET: 25062,
              ARTICLE_SHARE_DESCRIBE_NOT_SET: 25063,
              ARTICLE_BROWER_BASE_NUMBER_NOT_SET: 25064,
              ARTICLE_SHARE_BASE_NUMBER_NOT_SET: 25065,
              ARTICLE_CONTENT_COMPONENT_NOT_SET: 25066,
              ARTICLE_CONTENT_COMPONENT_TYPE_NOT_SET: 25067,
              ARTICLE_CONTENT_COMPONENT_VALUE_NOT_SET: 25068,
              ARTICLE_CONTENT_COMPONENT_LOCATION_NOT_SET: 25069,
              ARTICLE_LANG_INFO_NOT_SET: 25070,
              ARTICLE_PRODUCT_NOT_EXIT: 25071,
              ARTICLE_TAG_MOST_SIX: 25072,
              ARTICLE_CONTENT_LANGUAGE_NOT_SET: 25073,
              ARTICLE_CONTENT_TYPE_NOT_MATCH: 25074,
              ARTICLE_CREATE_USER_ID_NOT_SET: 25075,
              ARTICLE_CREATE_USER_NAME_NOT_SET: 25076,
              ARTICLE_DATA_COUNT_TYPE_NOT_SET: 25077,
              ARTICLE_NOT_HAVE_CONTENT: 25078,
              PLEASE_AFTER_LOGIN: 25079,
              ADD_SPECIAL_SUBJECT_CONTENT_NOT_SET: 25101,
              ADD_SPECIAL_SUBJECT_NAME_NOT_SET: 25102,
              ADD_SPECIAL_SUBJECT_COLUMN_ID_NOT_SET: 25103,
              EDIT_SPECIAL_SUBJECT_CONTENT_NOT_SET: 25104,
              EDIT_SPECIAL_SUBJECT_NAME_NOT_SET: 25105,
              EDIT_SPECIAL_SUBJECT_ID_NOT_SET: 25106,
              EDIT_SPECIAL_SUBJECT_NOT_EXISTS: 25107,
              VIEW_ARTICLE_CODE_NOT_SET: 25108,
              VIEW_ARTICLE_NOT_EXISTS: 25109,
              SORT_ARTICLE_CODE_NOT_SET: 25110,
              EDIT_SPECIAL_COLUMN_NAME_REPEATED: 25111,
              ADD_SPECIAL_SUBJECT_NAME_REPEATED: 25112,
              EDIT_SPECIAL_SUBJECT_NAME_REPEATED: 25113,
              ADD_SPECIAL_COLUMN_NAME_NOT_SET: 25114,
              ADD_SPECIAL_COLUMN_COUNTRY_NOT_SET: 25115,
              ADD_SPECIAL_COLUMN_NAME_REPEATED: 25116,
              ADD_SPECIAL_COLUMN_CONTENT_NOT_SET: 25117,
              SORT_SPECIAL_SUBJECT_ID_NOT_SET: 25118,
              ADD_SPECIAL_COLUMN_CONTENT_TYPE_NOT_SET: 25119,
              EDIT_ARTICLE_CODE_NOT_SET: 25120,
              EDIT_ARTICLE_NOT_EXISTS: 25121,
              EDIT_ARTICLE_STATUS_IS_SENT: 25122,
              EDIT_ARTICLE_SPECIAL_COLUMN_NOT_EXISTS: 25123,
              EDIT_ARTICLE_SPECIAL_SUBJECT_NOT_EXISTS: 25124,
              SEND_ARTICLE_CODE_NOT_SET: 25125,
              SEND_ARTICLE_ARTICLE_NOT_EXISTS: 25126,
              SEND_ARTICLE_SEND_STATUS_ILLEGAL: 25127,
              DELETE_ARTICLE_ARTICLE_CODE_NOT_SET: 25128,
              WITHDRAW_ARTICLE_ARTICLE_CODE_NOT_SET: 25129,
              APP_SEARCH_ARTICLE_LIST_SPECIAL_COLUMN_ID_NOT_SET: 25130,
              APP_SEARCH_ARTICLE_LIST_SPECIAL_COLUMN_NOT_EXISTS: 25131,
              APP_SEARCH_ARTICLE_SPECIAL_SUBJECT_NOT_EXISTS: 25132,
              EDIT_ARTICLE_NOTHING_CHANGED: 25133,
              ADD_SPECIAL_COLUMN_ARTICLE_OF_BANNER_NOT_EXISTS: 25134,
              EDIT_SPECIAL_COLUMN_ARTICLE_OF_BANNER_NOT_EXISTS: 25135,
              ADD_SPECIAL_SUBJECT_SPECIAL_COLUMN_NOT_EXISTS: 25136,
              SORT_SPECIAL_SUBJECT_SUBJECT_NOT_EXISTS: 25137,
              SORT_SPECIAL_SUBJECT_ORDER_INDEX_LESS_THAN_OR_EQUAL_TO_ZERO: 25138,
              SORT_ARTICLE_ORDER_INDEX_LESS_THAN_OR_EQUAL_ZERO: 25139,
              SORT_ARTICLE_ARTICLE_NOT_EXISTS: 25140,
              DELETE_ARTICLE_ARTICLE_WAS_SENT: 25141,
              ARTICLE_SORT_TYPE_NOT_SET: 25142,
              ARTICLE_USER_LEVEL_NOT_MATCH: 25143,
              ARTICLE_CAN_NOT_DELETE_STILL_HAVE_BANNER: 25144,
              ARTICLE_CAN_NOT_WITHDRAW_STILL_HAVE_BANNER: 25145,
              BANNER_COUNTRY_NOT_EXISTS: 25500,
              BANNER_SPECIAL_COLUMN_NOT_EXISTS: 25501,
              BANNER_NAME_NOT_EXISTS: 25502,
              BANNER_BASE_NUMBER_NOT_EXISTS: 25503,
              BANNER_PIC_NOT_SET: 25504,
              BANNER_CODE_NOT_SET: 25505,
              BANNER_ARTICLE_CODE_NOT_SET: 25506,
              BANNER_COUNTRY_NOT_SAME: 25507,
              BANNER_PICTURE_NOT_SET: 25508,
              BANNER_PAGE_INFO_NOT_SET: 25509,
              EVENT_CODE_NOT_SET: 26001,
              TRIGGER_TEMPLATE_NOT_FIND: 26002,
              APP_GET_UNREAD_MESSAGES_USER_ID_NOT_SET: 27000,
              TRIGGER_TEMPLATE_TEMPLATE_CODE_NOT_SET: 27001,
              NOT_TRIGGER_TEMPLATE_EXISTS: 27002,
              EDIT_TRIGGER_TEMPLATE_CODE_NOT_SET: 27003,
              EDIT_TRIGGER_TEMPLATE_NO_THINGS_EDIT: 27004,
              EDIT_TRIGGER_TEMPLATE_NOT_EXISTS: 27005,
              APP_SEARCH_MESSAGE_LIST_USER_ID_NOT_SET: 27006,
              TRIGGER_TEMPLATE_BE_OVERDUE: 27007,
              COUNTRY_NOT_SET: 27051,
              PUSH_CHANNEL_NOT_SET: 27052,
              PUSH_TYPE_NOT_SET: 27053,
              PUSH_PIC_NOT_SET: 27054,
              REDIRECT_NOT_SET: 27055,
              PUSH_LANG_NOT_SET: 27056,
              PUSH_LANG_LANGUAGE_NOT_SET: 27057,
              PUSH_LANG_TITLE_NOT_SET: 27058,
              PUSH_LANG_CONTENT_NOT_SET: 27059,
              REDIRECT_PARAM_NOT_SET: 270560,
              PUSH_TASK_CREATE_FAILD: 270561,
              PUSH_TASK_CODE_NOT_SET: 270562,
              PUSH_TASK_NOT_EXISTS: 270563,
              PUSH_RECORD_NOT_EXISTS: 270564,
              PUSH_GROUP_TYPE_NOT_SET: 270565,
              PUSH_GROUP_USER_LEVEL_NOT_SET: 270566,
              PUSH_GROUP_USER_ID_NOT_SET: 270567,
              PUSH_GROUP_USER_ID_MOST_TEN_THOUSAND: 270568,
              PUSH_TASK_SEND_TYPE_NOT_SET: 270569,
              PUSH_TASK_SEND_TIME_NOT_SET: 270570,
              PUSH_TASK_TIMING_SEND_MUSET_ADVANCE_HALF_HOUR: 270571,
              PUSH_TASK_LANG_INFO_LESS_HAS_EN: 270572,
              PUSH_TASK_OPERATION_USER_INFO_NOT_FIND: 270573,
              PUSH_FILE_NOT_SET: 270574,
              PUSH_TIME_NOT_SET: 270575,
              SEND_METHOD_NOT_SET: 270576,
              STRATEGY_TASK_CODE_NOT_SET: 270577,
              EMAIL_TEMPLATE_NOT_SET: 270578,
              SEARCH_PUSH_TASK_CREATE_TIME_INVALID: 27151,
              SEARCH_PUSH_TASK_SEND_TIME_INVALID: 27152,
              SEARCH_PUSH_TASK_COUNTRY_NOT_SET: 27153,
              CANCEL_TIMING_TASK_TASK_CODE_NOT_SET: 27154,
              CANCEL_TIMING_TASK_TASK_NOT_EXISTS: 27155,
              CANCEL_TIMING_TASK_TASK_NOT_RECORD: 27156,
              CANCEL_TIMING_TASK_TASK_NOT_SCHEDULE: 27157,
              CANCEL_TIMING_TASK_LESS_THAN_HALF_HOURS_AWAY: 27158,
              CANCEL_TIMING_TASK_FAIL: 27159,
              SEND_TIMING_TASK_NOW_TASK_CODE_NOT_SET: 27160,
              SEND_TIMING_TASK_NOW_TASK_NOT_EXISTS: 27161,
              SEND_TIMING_TASK_NOW_TASK_NOT_RECORD: 27162,
              SEND_TIMING_TASK_NOW_TASK_NOT_SCHEDULE: 27163,
              SEND_TIMING_TASK_NOW_LESS_THAN_HALF_HOURS_AWAY: 27164,
              SEND_TIMING_TASK_NOW_TASK_FAIL: 27165,
              ADD_LINK_OPEN_NUM_FAIL: 27166,
              SEARCH_PUSH_TASK_TASK_TYPE_NULL: 27167,
              PUSH_USER_GROUP_NAME_NOT_SET: 28000,
              PUSH_USER_GROUP_ID_NOT_SET: 28001,
              PUSH_USER_GROUP_CONDITION_NOT_SET: 28002,
              PUSH_USER_GROUP_TYPE_NOT_SET: 28003,
              PUSH_USER_GROUP_USER_ID_EXCEL_URL_IS_EMPTY: 28004,
              PUSH_USER_GROUP_EXCEL_EXPORT_EXCEED_MAXIMUM_NUMBER: 28005,
              APP_VERSION_APP_NAME_NOT_SET: 27101,
              APP_VERSION_APP_VERSION_ID_NOT_SET: 27102,
              APP_VERSION_DEVICE_TYPE_NOT_SET: 27103,
              APP_VERSION_VERSION_CODE_NOT_SET: 27104,
              APP_VERSION_COUNTRY_NOT_SET: 27105,
              APP_VERSION_CONTENT_EN_NOT_SET: 27106,
              APP_VERSION_UPDATE_TYPE_NOT_SET: 27107,
              APP_VERSION_VERSION_ID_NEED_ABOVE_EXISTING: 27108,
              APP_VERSION_CREATE_APP_VERSION_FAILED: 27109,
              APP_VERSION_EDIT_APP_VERSION_FAILED: 27110,
              APP_VERSION_ID_NOT_SET: 27111,
              APP_VERSION_NOT_EXISTS: 27112,
              APP_VERSION_UPDATE_APP_VERSION_TO_CURRENT_APP_VERSION_FAILED: 27113,
              APP_VERSION_UPDATE_PUBLISH_STATUS_FAILED: 27114,
              APP_VERSION_UPDATE_PUBLISH_STATUS_NOT_SET: 27115,
              APP_VERSION_UPDATE_PUBLISH_STATUS_IS_LOWER_THEN_CURRENT: 27116,
              DATACENTER_BURYING_POINT_KEY_NOT_SET: 26201,
              DATACENTER_BURYING_POINT_TYPE_NOT_SET: 26202,
              DATACENTER_BURYING_POINT_COMMON_PARAM_NOT_SET: 26203,
              DATA_HOUSE_TARGET_CATEGORY_NAME_NOT_SET: 26210,
              DATA_HOUSE_TARGET_KEY_NOT_SET: 26211,
              DATA_HOUSE_TARGET_NAME_NOT_SET: 26212,
              DATA_HOUSE_TARGET_DESCRIPTION_NOT_SET: 26213,
              DATA_HOUSE_TARGET_STATUS_NOT_SET: 26214,
              DATA_HOUSE_TARGET_CATEGORY_ID_NOT_SET: 26215,
              DATA_HOUSE_TARGET_ID_NOT_SET: 26216,
              DATA_HOUSE_TARGET_DATA_LIST_NOT_SET: 26217,
              DATA_HOUSE_TARGET_CATEGORY_ID_NOT_EXISTS: 26218,
              DATA_HOUSE_TARGET_CATEGORY_NAME_REPEATED: 26219,
              DATA_HOUSE_TARGET_NAME_REPEATED: 26220,
              DATA_HOUSE_TARGET_KEY_REPEATED: 26221,
              DATA_HOUSE_TARGET_EXCEL_DATA_REPEATED: 26222,
              BIG_SCREEN_ACQUISITION_STATS_LIST_EMPTY: 26400,
              BIG_SCREEN_MODULE_STATS_LIST_EMPTY: 26401,
              BIG_SCREEN_MODULE_STATS_YESTERDAY_LIST_EMPTY: 26402,
              BIG_SCREEN_PRODUCT_STATS_LIST_EMPTY: 26403,
              BIG_SCREEN_FUNNER_STATS_IS_ZERO: 26404,
              CUSTOMER_ALREADY_EXIST: 26600
            }
          }
        }
      },
      trade: {
        options: {
          java_multiple_files: false,
          java_package: "com.fingo.littlec.proto.common",
          java_outer_classname: "Trade"
        },
        nested: {
          TradeDTOPb: {
            fields: {
              orderId: {
                type: "int64",
                id: 1
              },
              userId: {
                type: "int64",
                id: 2
              },
              inviterId: {
                type: "int64",
                id: 3
              },
              orderType: {
                type: "common.enum.OrderEnum.OrderType",
                id: 4
              },
              countryCode: {
                type: "string",
                id: 5
              },
              vPath: {
                type: "string",
                id: 6
              },
              orderAfterSalesDto: {
                type: "OrderAfterSalesDTOPb",
                id: 7
              },
              orderProduct: {
                rule: "repeated",
                type: "OrderProductDTOPb",
                id: 8
              },
              orderIds: {
                rule: "repeated",
                type: "int64",
                id: 9
              },
              orderConfirmReceive: {
                rule: "repeated",
                type: "OrderConfirmReceivePb",
                id: 10
              },
              payTime: {
                type: "string",
                id: 11
              },
              memberLevel: {
                type: "string",
                id: 12
              }
            },
            nested: {
              OrderAfterSalesDTOPb: {
                fields: {
                  orderId: {
                    type: "int64",
                    id: 1
                  },
                  skuId: {
                    rule: "repeated",
                    type: "int64",
                    id: 2
                  },
                  saleProductMap: {
                    type: "string",
                    id: 3
                  }
                }
              },
              OrderProductDTOPb: {
                fields: {
                  productId: {
                    type: "int64",
                    id: 1
                  },
                  count: {
                    type: "int32",
                    id: 2
                  },
                  productName: {
                    type: "string",
                    id: 3
                  },
                  categoryName: {
                    type: "string",
                    id: 4
                  },
                  actualPrice: {
                    type: "string",
                    id: 5
                  },
                  skuId: {
                    type: "int64",
                    id: 6
                  },
                  commissionRate: {
                    type: "string",
                    id: 7
                  },
                  liveOrderRate1: {
                    type: "string",
                    id: 8
                  },
                  liveOrderRate2: {
                    type: "string",
                    id: 9
                  },
                  afterSalesDays: {
                    type: "int32",
                    id: 10
                  },
                  giftId: {
                    type: "int32",
                    id: 11
                  },
                  productType: {
                    type: "int32",
                    id: 12
                  }
                }
              },
              OrderConfirmReceivePb: {
                fields: {
                  orderId: {
                    type: "int64",
                    id: 1
                  },
                  afterSalesDays: {
                    type: "int32",
                    id: 2
                  },
                  orderType: {
                    type: "int32",
                    id: 3
                  }
                }
              }
            }
          },
          TeamOrderDtoPb: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              createTime: {
                type: "string",
                id: 2
              },
              orderStatus: {
                type: "common.enum.OrderEnum.OrderStatus",
                id: 3
              },
              payAmount: {
                type: "string",
                id: 4
              },
              totalFreight: {
                type: "string",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              item: {
                rule: "repeated",
                type: "ItemDtoPb",
                id: 7
              },
              receiveTime: {
                type: "string",
                id: 8
              },
              preUnfreezenTime: {
                type: "string",
                id: 9
              }
            },
            nested: {
              ItemDtoPb: {
                fields: {
                  orderId: {
                    type: "uint64",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  productName: {
                    type: "string",
                    id: 3
                  },
                  count: {
                    type: "int32",
                    id: 4
                  },
                  price: {
                    type: "string",
                    id: 5
                  },
                  skuCover: {
                    type: "string",
                    id: 6
                  },
                  attr: {
                    rule: "repeated",
                    type: "OrderProductAttr",
                    id: 7
                  }
                }
              },
              OrderProductAttr: {
                fields: {
                  attrId: {
                    type: "uint64",
                    id: 1
                  },
                  attrName: {
                    type: "string",
                    id: 2
                  },
                  valueId: {
                    type: "uint64",
                    id: 3
                  },
                  valueName: {
                    type: "string",
                    id: 4
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  boss: {
    nested: {
      active: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.active",
          java_outer_classname: "Active"
        },
        nested: {
          ActiveInfo: {
            fields: {
              activeId: {
                type: "string",
                id: 1
              },
              activeName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              activeType: {
                type: "common.enum.MarketingEnum.ActiveType",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              activeStatus: {
                type: "common.enum.MarketingEnum.ActiveStatus",
                id: 7
              },
              activeIcon: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 8
              },
              activeCover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 9
              },
              activeBaseCover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 13
              },
              preheat: {
                type: "common.enum.MarketingEnum.PreheatType",
                id: 10
              },
              preheatTime: {
                type: "int64",
                id: 11
              },
              status: {
                type: "uint32",
                id: 12
              },
              activeCrowdType: {
                type: "common.enum.MarketingEnum.ActiveCrowdType",
                id: 14
              },
              activeBcUrl: {
                type: "string",
                id: 15
              },
              groupInfo: {
                rule: "repeated",
                type: "ActiveGroupInfo",
                id: 16
              },
              activeBaseCoverType: {
                type: "int32",
                id: 17
              }
            }
          },
          ActiveAddReq: {
            fields: {
              activeInfo: {
                type: "ActiveInfo",
                id: 1
              }
            }
          },
          ActiveAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ActiveUpdateReq: {
            fields: {
              activeInfo: {
                type: "ActiveInfo",
                id: 1
              }
            }
          },
          ActiveUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ActiveListInfo: {
            fields: {
              activeId: {
                type: "string",
                id: 1
              },
              activeName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              activeType: {
                type: "common.enum.MarketingEnum.ActiveType",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              activeStatus: {
                type: "common.enum.MarketingEnum.ActiveStatus",
                id: 7
              },
              preheat: {
                type: "common.enum.MarketingEnum.PreheatType",
                id: 10
              },
              preheatTime: {
                type: "int64",
                id: 11
              },
              status: {
                type: "uint32",
                id: 12
              },
              operationName: {
                type: "string",
                id: 13
              },
              updateTime: {
                type: "int64",
                id: 14
              },
              activeIcon: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 17
              },
              activeCover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 15
              },
              activeBaseCover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 16
              },
              activeCrowdType: {
                type: "common.enum.MarketingEnum.ActiveCrowdType",
                id: 18
              },
              activeBcUrl: {
                type: "string",
                id: 19
              },
              activeBaseCoverType: {
                type: "int32",
                id: 20
              }
            }
          },
          ActiveListReq: {
            fields: {
              activeId: {
                type: "string",
                id: 1
              },
              activeName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              activeStatus: {
                type: "common.enum.MarketingEnum.ActiveStatus",
                id: 7
              },
              page: {
                type: "common.base.Pagination",
                id: 8
              }
            }
          },
          ActiveListResp: {
            fields: {
              activeInfo: {
                rule: "repeated",
                type: "ActiveListInfo",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          ActivePageListReq: {
            fields: {
              activeId: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          ActivePageListResp: {
            fields: {
              activeInfo: {
                rule: "repeated",
                type: "ActiveListInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          ActiveSelectInfo: {
            fields: {
              activeId: {
                type: "string",
                id: 1
              },
              activeName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              preheatTime: {
                type: "int64",
                id: 7
              },
              preheat: {
                type: "int32",
                id: 8
              }
            }
          },
          ActiveSelectReq: {
            fields: {
              activeName: {
                type: "string",
                id: 1
              }
            }
          },
          ActiveSelectResp: {
            fields: {
              activeSelectInfo: {
                rule: "repeated",
                type: "ActiveSelectInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 3
              }
            }
          },
          ActiveAndGroupLabelInfo: {
            fields: {
              activeId: {
                type: "string",
                id: 1
              },
              activeName: {
                type: "string",
                id: 2
              },
              productCount: {
                type: "int32",
                id: 3
              },
              groupLabelId: {
                type: "string",
                id: 4
              },
              groupLabelName: {
                type: "string",
                id: 5
              }
            }
          },
          SelectActiveAndGroupLabelReq: {
            fields: {
              activeId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              activeName: {
                type: "string",
                id: 2
              },
              groupLabelId: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              groupLabelName: {
                type: "string",
                id: 4
              },
              queryType: {
                type: "int32",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              }
            }
          },
          SelectActiveAndGroupLabelResp: {
            fields: {
              activeAndGroupLabelInfo: {
                rule: "repeated",
                type: "ActiveAndGroupLabelInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              total: {
                type: "uint32",
                id: 4
              }
            }
          },
          ActiveService: {
            methods: {
              InsertActive: {
                requestType: "ActiveAddReq",
                responseType: "ActiveAddResp"
              },
              UpdateActive: {
                requestType: "ActiveUpdateReq",
                responseType: "ActiveUpdateResp"
              },
              ListActive: {
                requestType: "ActiveListReq",
                responseType: "ActiveListResp"
              },
              ListActivePage: {
                requestType: "ActivePageListReq",
                responseType: "ActivePageListResp"
              },
              SelectActive: {
                requestType: "ActiveSelectReq",
                responseType: "ActiveSelectResp"
              },
              SelectActiveAndGroupLabel: {
                requestType: "SelectActiveAndGroupLabelReq",
                responseType: "SelectActiveAndGroupLabelResp"
              }
            }
          },
          ActiveGroupInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              sort: {
                type: "int32",
                id: 3
              }
            }
          },
          ActiveAddOrUpdateGroupReq: {
            fields: {
              activeId: {
                type: "string",
                id: 1
              },
              groupInfo: {
                rule: "repeated",
                type: "ActiveGroupInfo",
                id: 2
              }
            }
          },
          ActiveAddOrUpdateGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ActiveGroupListReq: {
            fields: {
              activeId: {
                type: "string",
                id: 2
              }
            }
          },
          ActiveGroupListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupInfo: {
                rule: "repeated",
                type: "ActiveGroupInfo",
                id: 2
              }
            }
          },
          ActiveGroupBossService: {
            methods: {
              InsertOrUpdateGroup: {
                requestType: "ActiveAddOrUpdateGroupReq",
                responseType: "ActiveAddOrUpdateGroupResp"
              },
              ListActiveGroup: {
                requestType: "ActiveGroupListReq",
                responseType: "ActiveGroupListResp"
              },
              ListAllActiveGroup: {
                requestType: "ActiveGroupListReq",
                responseType: "ActiveGroupListResp"
              }
            }
          },
          GiveResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GiveQueryDetailReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          GiveQueryDetailResp: {
            fields: {
              giveQuery: {
                type: "GiveQuery",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          GiveBossService: {
            methods: {
              GiveAddOrEdit: {
                requestType: "GiveAddOrEditReq",
                responseType: "GiveResp"
              },
              Query: {
                requestType: "GiveQueryReq",
                responseType: "GiveQueryResp"
              },
              QueryDetail: {
                requestType: "GiveQueryDetailReq",
                responseType: "GiveQueryDetailResp"
              },
              EditStatus: {
                requestType: "GiveEditStatusReq",
                responseType: "GiveResp"
              }
            }
          },
          GiveEditStatusReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              status: {
                type: "int32",
                id: 2
              },
              operation: {
                type: "string",
                id: 3
              }
            }
          },
          GiveQueryReq: {
            fields: {
              label: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              spuId: {
                type: "string",
                id: 3
              },
              skuId: {
                type: "string",
                id: 4
              },
              id: {
                type: "int32",
                id: 5
              },
              status: {
                type: "int32",
                id: 6
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              }
            }
          },
          GiveQuery: {
            fields: {
              giveProductInfo: {
                rule: "repeated",
                type: "GiveProductInfo",
                id: 1
              },
              spuIds: {
                rule: "repeated",
                type: "int64",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              label: {
                type: "string",
                id: 5
              },
              ruleType: {
                type: "int32",
                id: 6
              },
              ruleContent: {
                type: "string",
                id: 7
              },
              note: {
                type: "string",
                id: 8
              },
              startTime: {
                type: "int64",
                id: 9
              },
              endTime: {
                type: "int64",
                id: 10
              },
              operation: {
                type: "string",
                id: 11
              },
              id: {
                type: "int32",
                id: 12
              },
              status: {
                type: "int32",
                id: 13
              },
              updated: {
                type: "int64",
                id: 14
              },
              created: {
                type: "int64",
                id: 15
              }
            }
          },
          GiveQueryResp: {
            fields: {
              giveQuery: {
                rule: "repeated",
                type: "GiveQuery",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          GiveProductInfo: {
            fields: {
              skuId: {
                type: "int64",
                id: 1
              },
              stock: {
                type: "int32",
                id: 2
              }
            }
          },
          GiveAddOrEditReq: {
            fields: {
              giveProductInfo: {
                rule: "repeated",
                type: "GiveProductInfo",
                id: 1
              },
              spuIds: {
                rule: "repeated",
                type: "int64",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              label: {
                type: "string",
                id: 5
              },
              ruleType: {
                type: "int32",
                id: 6
              },
              ruleContent: {
                type: "string",
                id: 7
              },
              note: {
                type: "string",
                id: 8
              },
              startTime: {
                type: "int64",
                id: 9
              },
              endTime: {
                type: "int64",
                id: 10
              },
              operation: {
                type: "string",
                id: 11
              },
              id: {
                type: "int32",
                id: 12
              }
            }
          },
          product: {
            options: {
              java_multiple_files: true,
              java_package: "com.fingo.littlec.proto.boss.active.product",
              java_outer_classname: "Product"
            },
            nested: {
              ActiveProductSkuInfo: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  values: {
                    type: "string",
                    id: 3
                  },
                  priceVip: {
                    type: "string",
                    id: 4
                  },
                  adviseActivePrice: {
                    type: "string",
                    id: 5
                  },
                  activePrice: {
                    type: "string",
                    id: 6
                  },
                  commissionRate: {
                    type: "string",
                    id: 7
                  },
                  activeCommissionRate: {
                    type: "string",
                    id: 8
                  },
                  stock: {
                    type: "uint32",
                    id: 9
                  },
                  activeStock: {
                    type: "uint32",
                    id: 10
                  },
                  skuCode: {
                    type: "string",
                    id: 11
                  },
                  specifiedPrice: {
                    type: "string",
                    id: 12
                  }
                }
              },
              ActiveProductInfo: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  countryCode: {
                    type: "string",
                    id: 3
                  },
                  activeType: {
                    type: "uint32",
                    id: 4
                  },
                  startTime: {
                    type: "int64",
                    id: 5
                  },
                  endTime: {
                    type: "int64",
                    id: 6
                  },
                  groupLabel: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 7
                  },
                  skuInfo: {
                    rule: "repeated",
                    type: "ActiveProductSkuInfo",
                    id: 8
                  },
                  productCorner: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 9
                  },
                  promotionDesc: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 10
                  },
                  promotionCover: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 11
                  },
                  homeDisplay: {
                    type: "bool",
                    id: 12
                  },
                  groupLabelId: {
                    type: "uint32",
                    id: 13
                  },
                  spuPreheat: {
                    type: "uint32",
                    id: 14
                  },
                  spuPreheatTime: {
                    type: "int64",
                    id: 15
                  },
                  id: {
                    type: "string",
                    id: 16
                  }
                }
              },
              ActiveProductAddReq: {
                fields: {
                  activeProductInfo: {
                    type: "ActiveProductInfo",
                    id: 1
                  }
                }
              },
              ActiveProductAddResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  message: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ActiveProductUpdateReq: {
                fields: {
                  activeProductInfo: {
                    type: "ActiveProductInfo",
                    id: 1
                  }
                }
              },
              ActiveProductUpdateResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  message: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ActiveProductListInfo: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  productName: {
                    type: "string",
                    id: 2
                  },
                  productCover: {
                    type: "string",
                    id: 3
                  },
                  countryCode: {
                    type: "string",
                    id: 4
                  },
                  activePrice: {
                    type: "string",
                    id: 5
                  },
                  activeStock: {
                    type: "string",
                    id: 6
                  },
                  startTime: {
                    type: "int64",
                    id: 7
                  },
                  endTime: {
                    type: "int64",
                    id: 8
                  },
                  activeId: {
                    type: "string",
                    id: 9
                  },
                  activeName: {
                    type: "string",
                    id: 10
                  },
                  promotionId: {
                    type: "string",
                    id: 11
                  },
                  promotionName: {
                    type: "string",
                    id: 12
                  },
                  groupLabel: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 13
                  },
                  productCorner: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 14
                  },
                  promotionDesc: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 15
                  },
                  promotionCover: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 16
                  },
                  operationName: {
                    type: "string",
                    id: 17
                  },
                  updateTime: {
                    type: "int64",
                    id: 18
                  },
                  homeDisplay: {
                    type: "bool",
                    id: 19
                  },
                  id: {
                    type: "int32",
                    id: 20
                  },
                  groupLabelId: {
                    type: "uint32",
                    id: 21
                  },
                  sort: {
                    type: "uint32",
                    id: 22
                  },
                  spuPreheat: {
                    type: "uint32",
                    id: 23
                  },
                  spuPreheatTime: {
                    type: "int64",
                    id: 24
                  },
                  specifiedPrice: {
                    type: "string",
                    id: 25
                  }
                }
              },
              ActiveProductListReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  productCorner: {
                    type: "string",
                    id: 3
                  },
                  productName: {
                    type: "string",
                    id: 4
                  },
                  promotionId: {
                    type: "string",
                    id: 5
                  },
                  groupLabel: {
                    type: "string",
                    id: 6
                  },
                  countryCode: {
                    type: "string",
                    id: 7
                  },
                  startTime: {
                    type: "int64",
                    id: 10
                  },
                  endTime: {
                    type: "int64",
                    id: 11
                  },
                  status: {
                    type: "uint32",
                    id: 12
                  },
                  page: {
                    type: "common.base.Pagination",
                    id: 13
                  },
                  groupLabelId: {
                    type: "uint32",
                    id: 14
                  },
                  productIdList: {
                    rule: "repeated",
                    type: "string",
                    id: 15
                  }
                }
              },
              ActiveProductListResp: {
                fields: {
                  activeProductInfo: {
                    rule: "repeated",
                    type: "ActiveProductListInfo",
                    id: 1
                  },
                  total: {
                    type: "uint32",
                    id: 2
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 3
                  },
                  message: {
                    type: "string",
                    id: 4
                  }
                }
              },
              ActiveProductSkuReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ActiveProductSkuResp: {
                fields: {
                  activeProductSkuInfo: {
                    rule: "repeated",
                    type: "ActiveProductSkuInfo",
                    id: 1
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 2
                  },
                  message: {
                    type: "string",
                    id: 3
                  }
                }
              },
              BatchInsertActiveProductReq: {
                fields: {
                  url: {
                    type: "string",
                    id: 1
                  }
                }
              },
              BatchInsertActiveProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  message: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ActiveProductTemplateReq: {
                fields: {}
              },
              ActiveProductTemplateResp: {
                fields: {
                  url: {
                    type: "string",
                    id: 1
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 2
                  },
                  message: {
                    type: "string",
                    id: 3
                  }
                }
              },
              UploadActiveProductReq: {
                fields: {
                  url: {
                    type: "string",
                    id: 1
                  }
                }
              },
              UploadActiveProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  message: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ChangeHomeDisplayStatusReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  homeDisplayStatus: {
                    type: "bool",
                    id: 3
                  }
                }
              },
              ChangeHomeDisplayStatusResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  message: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ActiveAllProductListReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  }
                }
              },
              ActiveAllProductInfo: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  productName: {
                    type: "string",
                    id: 2
                  },
                  productCover: {
                    type: "string",
                    id: 3
                  },
                  activeId: {
                    type: "string",
                    id: 4
                  },
                  homeDisplay: {
                    type: "bool",
                    id: 5
                  },
                  sort: {
                    type: "uint32",
                    id: 6
                  }
                }
              },
              ActiveProductGroupLabel: {
                fields: {
                  groupLabelName: {
                    type: "string",
                    id: 1
                  },
                  groupLabelId: {
                    type: "uint32",
                    id: 2
                  },
                  groupLabelSort: {
                    type: "uint32",
                    id: 3
                  },
                  activeAllProductInfo: {
                    rule: "repeated",
                    type: "ActiveAllProductInfo",
                    id: 4
                  }
                }
              },
              ActiveAllProductListResp: {
                fields: {
                  activeProductGroupLabel: {
                    rule: "repeated",
                    type: "ActiveProductGroupLabel",
                    id: 1
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 2
                  }
                }
              },
              ChangeActiveAllProductSortReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  activeAllProductInfo: {
                    rule: "repeated",
                    type: "ActiveAllProductInfo",
                    id: 4
                  }
                }
              },
              ChangeActiveAllProductSortResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              ActiveProductService: {
                methods: {
                  InsertActiveProduct: {
                    requestType: "ActiveProductAddReq",
                    responseType: "ActiveProductAddResp"
                  },
                  UpdateActiveProduct: {
                    requestType: "ActiveProductUpdateReq",
                    responseType: "ActiveProductUpdateResp"
                  },
                  ListActiveProductForSignUp: {
                    requestType: "ListActiveProductForSignUpReq",
                    responseType: "ListActiveProductForSignUpResp"
                  },
                  ListActiveProduct: {
                    requestType: "ActiveProductListReq",
                    responseType: "ActiveProductListResp"
                  },
                  ListActiveProductSku: {
                    requestType: "ActiveProductSkuReq",
                    responseType: "ActiveProductSkuResp"
                  },
                  BatchInsertActiveProduct: {
                    requestType: "BatchInsertActiveProductReq",
                    responseType: "BatchInsertActiveProductResp"
                  },
                  DownloadActiveProductTemplate: {
                    requestType: "ActiveProductTemplateReq",
                    responseType: "ActiveProductTemplateResp"
                  },
                  UploadActiveProduct: {
                    requestType: "UploadActiveProductReq",
                    responseType: "UploadActiveProductResp"
                  },
                  ChangeHomeDisplayStatus: {
                    requestType: "ChangeHomeDisplayStatusReq",
                    responseType: "ChangeHomeDisplayStatusResp"
                  },
                  ListActiveAllProduct: {
                    requestType: "ActiveAllProductListReq",
                    responseType: "ActiveAllProductListResp"
                  },
                  ChangeActiveAllProductSort: {
                    requestType: "ChangeActiveAllProductSortReq",
                    responseType: "ChangeActiveAllProductSortResp"
                  },
                  ListGatherUser: {
                    requestType: "ListGatherUserReq",
                    responseType: "ListGatherUserResp"
                  }
                }
              },
              ListGatherUserReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  }
                }
              },
              ListGatherUserResp: {
                fields: {
                  operationUserInfo: {
                    rule: "repeated",
                    type: "OperationUserInfo",
                    id: 1
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 2
                  }
                },
                nested: {
                  OperationUserInfo: {
                    fields: {
                      sysUserId: {
                        type: "int32",
                        id: 1
                      },
                      nickName: {
                        type: "string",
                        id: 2
                      },
                      realName: {
                        type: "string",
                        id: 3
                      }
                    }
                  }
                }
              },
              MarketingProductList: {
                fields: {
                  productId: {
                    type: "string",
                    id: 2
                  },
                  productName: {
                    type: "string",
                    id: 3
                  },
                  price: {
                    type: "string",
                    id: 6
                  },
                  priceVip: {
                    type: "string",
                    id: 7
                  },
                  productLabel: {
                    type: "string",
                    id: 9
                  },
                  productCover: {
                    type: "string",
                    id: 10
                  },
                  activePrice: {
                    type: "string",
                    id: 12
                  },
                  subName: {
                    type: "string",
                    id: 13
                  },
                  commissionSelf: {
                    type: "string",
                    id: 14
                  },
                  commission: {
                    type: "string",
                    id: 15
                  },
                  productCorner: {
                    type: "string",
                    id: 16
                  },
                  promotionDesc: {
                    type: "string",
                    id: 17
                  },
                  activeId: {
                    type: "string",
                    id: 18
                  },
                  startTime: {
                    type: "string",
                    id: 19
                  },
                  endTime: {
                    type: "string",
                    id: 20
                  },
                  activeStatus: {
                    type: "string",
                    id: 21
                  },
                  preheatTime: {
                    type: "string",
                    id: 22
                  },
                  activeCommission: {
                    type: "string",
                    id: 23
                  },
                  activeCommissionSelf: {
                    type: "string",
                    id: 24
                  },
                  saleCount: {
                    type: "int32",
                    id: 25
                  },
                  cartCount: {
                    type: "int32",
                    id: 26
                  }
                }
              },
              MarketingProductLabelList: {
                fields: {
                  groupLabel: {
                    type: "string",
                    id: 1
                  },
                  marketingProduct: {
                    rule: "repeated",
                    type: "MarketingProductList",
                    id: 2
                  },
                  groupLabelId: {
                    type: "int32",
                    id: 3
                  }
                }
              },
              GetActiveByIdOrLabelIdReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  groupLabelId: {
                    rule: "repeated",
                    type: "int32",
                    id: 2
                  },
                  type: {
                    type: "int32",
                    id: 3
                  },
                  productStatus: {
                    rule: "repeated",
                    type: "int32",
                    id: 4
                  },
                  countryCode: {
                    type: "string",
                    id: 5
                  },
                  languageCode: {
                    type: "string",
                    id: 6
                  },
                  sortType: {
                    type: "int32",
                    id: 7
                  }
                }
              },
              GetActiveByIdOrLabelIdResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  label: {
                    rule: "repeated",
                    type: "MarketingProductLabelList",
                    id: 2
                  },
                  activeCover: {
                    type: "string",
                    id: 3
                  }
                }
              },
              GetActiveProductByProductIdReq: {
                fields: {
                  productId: {
                    rule: "repeated",
                    type: "string",
                    id: 1
                  },
                  productStatus: {
                    rule: "repeated",
                    type: "int32",
                    id: 2
                  },
                  countryCode: {
                    type: "string",
                    id: 3
                  },
                  languageCode: {
                    type: "string",
                    id: 4
                  },
                  sortType: {
                    type: "int32",
                    id: 5
                  }
                }
              },
              GetActiveProductByProductIdResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  marketingProductInfo: {
                    rule: "repeated",
                    type: "MarketingProductList",
                    id: 2
                  }
                }
              },
              ActiveProductBossSimulationMallService: {
                methods: {
                  GetActiveByIdOrLabelId: {
                    requestType: "GetActiveByIdOrLabelIdReq",
                    responseType: "GetActiveByIdOrLabelIdResp"
                  },
                  GetActiveProductByProductId: {
                    requestType: "GetActiveProductByProductIdReq",
                    responseType: "GetActiveProductByProductIdResp"
                  }
                }
              },
              CategoryUnit: {
                fields: {
                  backCateFirstId: {
                    type: "string",
                    id: 1
                  },
                  backCateFirstName: {
                    type: "string",
                    id: 2
                  },
                  backCateSecondId: {
                    type: "string",
                    id: 3
                  },
                  backCateSecondName: {
                    type: "string",
                    id: 4
                  },
                  backCateThirdId: {
                    type: "string",
                    id: 5
                  },
                  backCateThirdName: {
                    type: "string",
                    id: 6
                  }
                }
              },
              EnterActiveProductSkuInfo: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  values: {
                    type: "string",
                    id: 3
                  },
                  priceVip: {
                    type: "string",
                    id: 4
                  },
                  adviseActivePrice: {
                    type: "string",
                    id: 5
                  },
                  activePrice: {
                    type: "string",
                    id: 6
                  },
                  commissionRate: {
                    type: "string",
                    id: 7
                  },
                  activeCommissionRate: {
                    type: "string",
                    id: 8
                  },
                  activeStock: {
                    type: "uint32",
                    id: 10
                  },
                  skuCode: {
                    type: "string",
                    id: 11
                  }
                }
              },
              DeleteProductReq: {
                fields: {
                  productEnterSerialId: {
                    rule: "repeated",
                    type: "string",
                    id: 1
                  }
                }
              },
              DeleteProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              ActiveProductEnterSimpleInfo: {
                fields: {
                  productEnterSerialId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  }
                }
              },
              BatchUpdateSignedProductReq: {
                fields: {
                  activeSpuInfo: {
                    rule: "repeated",
                    type: "ActiveProductEnterSimpleInfo",
                    id: 1
                  },
                  activeId: {
                    type: "string",
                    id: 2
                  },
                  spuPreheat: {
                    type: "uint32",
                    id: 3
                  },
                  spuPreheatTime: {
                    type: "string",
                    id: 4
                  },
                  startTime: {
                    type: "string",
                    id: 5
                  },
                  endTime: {
                    type: "string",
                    id: 6
                  },
                  groupLabelId: {
                    type: "uint32",
                    id: 7
                  },
                  groupLabel: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 8
                  },
                  productCorner: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 9
                  },
                  promotionDesc: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 10
                  }
                }
              },
              BatchUpdateSignedProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              AcceptSignedProductReq: {
                fields: {
                  productEnterSerialId: {
                    rule: "repeated",
                    type: "string",
                    id: 1
                  },
                  activeId: {
                    type: "string",
                    id: 2
                  },
                  countryCode: {
                    type: "string",
                    id: 3
                  }
                }
              },
              AcceptSignedProductResp: {
                fields: {
                  msg: {
                    type: "string",
                    id: 1
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 2
                  },
                  packageSpu: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  },
                  invalidSpu: {
                    rule: "repeated",
                    type: "string",
                    id: 4
                  }
                }
              },
              InsertNoSignedProductReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    rule: "repeated",
                    type: "string",
                    id: 2
                  },
                  countryCode: {
                    type: "string",
                    id: 3
                  },
                  groupLabelId: {
                    type: "string",
                    id: 4
                  },
                  groupLabel: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 5
                  }
                }
              },
              InsertNoSignedProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  packageSpu: {
                    rule: "repeated",
                    type: "string",
                    id: 2
                  },
                  invalidSpu: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  }
                }
              },
              ListActiveProductEnterReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  },
                  type: {
                    type: "uint32",
                    id: 3
                  },
                  productId: {
                    rule: "repeated",
                    type: "string",
                    id: 4
                  },
                  productName: {
                    type: "string",
                    id: 5
                  },
                  backCateId: {
                    type: "string",
                    id: 6
                  },
                  groupLabelId: {
                    type: "string",
                    id: 7
                  },
                  lookSwitch: {
                    type: "int32",
                    id: 8
                  },
                  activePriceMin: {
                    type: "string",
                    id: 10
                  },
                  activePriceMax: {
                    type: "string",
                    id: 11
                  },
                  selectSwitch: {
                    rule: "repeated",
                    type: "int32",
                    id: 12
                  },
                  signUpOperatorId: {
                    type: "string",
                    id: 13
                  },
                  gatherOperatorId: {
                    type: "string",
                    id: 14
                  },
                  page: {
                    type: "common.base.Pagination",
                    id: 15
                  }
                }
              },
              ListActiveProductForSignUpReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  },
                  productId: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  },
                  productName: {
                    type: "string",
                    id: 4
                  },
                  backCateId: {
                    type: "string",
                    id: 5
                  },
                  groupLabelId: {
                    type: "string",
                    id: 6
                  },
                  signUpOperatorId: {
                    type: "string",
                    id: 7
                  },
                  gatherOperatorId: {
                    type: "string",
                    id: 8
                  },
                  page: {
                    type: "common.base.Pagination",
                    id: 9
                  }
                }
              },
              SignUpBaseProduct: {
                fields: {
                  productEnterSerialId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  productCover: {
                    type: "string",
                    id: 3
                  },
                  productTitle: {
                    type: "string",
                    id: 4
                  },
                  categoryUnit: {
                    type: "CategoryUnit",
                    id: 5
                  },
                  shelveStatus: {
                    type: "common.enum.ProductEnum.ShelveStatus",
                    id: 6
                  },
                  startTime: {
                    type: "string",
                    id: 7
                  },
                  endTime: {
                    type: "string",
                    id: 8
                  },
                  spuPreheat: {
                    type: "uint32",
                    id: 9
                  },
                  spuPreheatTime: {
                    type: "string",
                    id: 10
                  },
                  groupLabelId: {
                    type: "string",
                    id: 11
                  },
                  groupLabel: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 13
                  },
                  productCorner: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 14
                  },
                  promotionDesc: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 15
                  },
                  promotionCover: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 16
                  }
                }
              },
              ActiveProductEnter: {
                fields: {
                  signUpBaseProduct: {
                    type: "SignUpBaseProduct",
                    id: 1
                  },
                  supplyPriceMin: {
                    type: "string",
                    id: 2
                  },
                  supplyPriceMax: {
                    type: "string",
                    id: 3
                  },
                  priceVipMin: {
                    type: "string",
                    id: 4
                  },
                  priceVipMax: {
                    type: "string",
                    id: 5
                  },
                  adviseActivePriceMin: {
                    type: "string",
                    id: 6
                  },
                  adviseActivePriceMax: {
                    type: "string",
                    id: 7
                  },
                  activePriceMin: {
                    type: "string",
                    id: 8
                  },
                  activePriceMax: {
                    type: "string",
                    id: 9
                  },
                  activeCommissionRateMin: {
                    type: "string",
                    id: 10
                  },
                  activeCommissionRateMax: {
                    type: "string",
                    id: 11
                  },
                  activeStockMin: {
                    type: "uint32",
                    id: 12
                  },
                  activeStockMax: {
                    type: "uint32",
                    id: 13
                  },
                  signUpOperatorName: {
                    type: "string",
                    id: 14
                  },
                  signUpTime: {
                    type: "string",
                    id: 15
                  },
                  gatherOperatorName: {
                    type: "string",
                    id: 16
                  },
                  gatherTime: {
                    type: "string",
                    id: 17
                  },
                  priceConflict: {
                    type: "int32",
                    id: 18
                  },
                  timeConflict: {
                    type: "bool",
                    id: 19
                  }
                }
              },
              ListActiveProductEnterResp: {
                fields: {
                  activeProductEnter: {
                    rule: "repeated",
                    type: "ActiveProductEnter",
                    id: 1
                  },
                  currencySymbol: {
                    type: "string",
                    id: 2
                  },
                  total: {
                    type: "uint32",
                    id: 3
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 4
                  }
                }
              },
              ActiveProductForSignUp: {
                fields: {
                  signUpBaseProduct: {
                    type: "SignUpBaseProduct",
                    id: 1
                  },
                  signUpOperatorName: {
                    type: "string",
                    id: 2
                  },
                  signUpTime: {
                    type: "string",
                    id: 3
                  },
                  gatherOperatorName: {
                    type: "string",
                    id: 4
                  },
                  gatherTime: {
                    type: "string",
                    id: 5
                  }
                }
              },
              ListActiveProductForSignUpResp: {
                fields: {
                  activeProductSignUpInfo: {
                    rule: "repeated",
                    type: "ActiveProductForSignUp",
                    id: 1
                  },
                  total: {
                    type: "uint32",
                    id: 2
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 3
                  }
                }
              },
              SubmitNoSignedProductReq: {
                fields: {
                  activeProductEnterSimpleInfo: {
                    rule: "repeated",
                    type: "ActiveProductEnterSimpleInfo",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  },
                  activeId: {
                    type: "string",
                    id: 3
                  }
                },
                nested: {
                  ActiveProductEnterSimpleInfo: {
                    fields: {
                      productEnterSerialId: {
                        type: "string",
                        id: 1
                      },
                      productId: {
                        type: "string",
                        id: 2
                      }
                    }
                  }
                }
              },
              SubmitNoSignedProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  packageSpu: {
                    rule: "repeated",
                    type: "string",
                    id: 2
                  },
                  invalidSpu: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  }
                }
              },
              GetActiveProductEnterSkuDetailReq: {
                fields: {
                  productEnterSerialId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  activeId: {
                    type: "string",
                    id: 3
                  },
                  countryCode: {
                    type: "string",
                    id: 4
                  }
                }
              },
              GetActiveProductEnterSkuDetailResp: {
                fields: {
                  skuInfo: {
                    rule: "repeated",
                    type: "EnterActiveProductSkuInfo",
                    id: 1
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 2
                  }
                }
              },
              SaveActiveProductEnterDetailReq: {
                fields: {
                  productEnterSerialId: {
                    type: "string",
                    id: 1
                  },
                  activeId: {
                    type: "string",
                    id: 2
                  },
                  productId: {
                    type: "string",
                    id: 3
                  },
                  countryCode: {
                    type: "string",
                    id: 4
                  },
                  spuPreheat: {
                    type: "uint32",
                    id: 5
                  },
                  spuPreheatTime: {
                    type: "string",
                    id: 6
                  },
                  startTime: {
                    type: "string",
                    id: 7
                  },
                  endTime: {
                    type: "string",
                    id: 8
                  },
                  groupLabelId: {
                    type: "string",
                    id: 9
                  },
                  productCorner: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 10
                  },
                  promotionDesc: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 11
                  },
                  promotionCover: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 12
                  },
                  groupLabel: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 13
                  },
                  skuInfo: {
                    rule: "repeated",
                    type: "EnterActiveProductSkuInfo",
                    id: 14
                  },
                  activeProductApprovalStatus: {
                    type: "uint32",
                    id: 15
                  }
                }
              },
              SaveActiveProductEnterDetailResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              BatchUpdateNoSignedProductReq: {
                fields: {
                  activeSpuInfo: {
                    rule: "repeated",
                    type: "ActiveProductEnterSimpleInfo",
                    id: 1
                  },
                  activeId: {
                    type: "string",
                    id: 2
                  },
                  countryCode: {
                    type: "string",
                    id: 3
                  },
                  spuPreheat: {
                    type: "uint32",
                    id: 4
                  },
                  spuPreheatTime: {
                    type: "string",
                    id: 5
                  },
                  startTime: {
                    type: "string",
                    id: 6
                  },
                  endTime: {
                    type: "string",
                    id: 7
                  },
                  groupLabelId: {
                    type: "uint32",
                    id: 8
                  },
                  groupLabel: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 9
                  },
                  switchPrice: {
                    type: "int32",
                    id: 10
                  },
                  priceVariable: {
                    type: "string",
                    id: 11
                  },
                  switchRate: {
                    type: "int32",
                    id: 12
                  },
                  rateVariable: {
                    type: "string",
                    id: 13
                  },
                  stock: {
                    type: "string",
                    id: 14
                  }
                }
              },
              BatchUpdateNoSignedProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 3
                  }
                }
              },
              GetListOperationUserReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  type: {
                    type: "string",
                    id: 2
                  }
                }
              },
              GetListOperationUserResp: {
                fields: {
                  operationUserInfo: {
                    rule: "repeated",
                    type: "OperationUserInfo",
                    id: 1
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 2
                  }
                },
                nested: {
                  OperationUserInfo: {
                    fields: {
                      sysUserId: {
                        type: "int32",
                        id: 1
                      },
                      nickName: {
                        type: "string",
                        id: 2
                      },
                      realName: {
                        type: "string",
                        id: 3
                      }
                    }
                  }
                }
              },
              RecheckForTimeConflictReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  }
                }
              },
              RecheckForTimeConflictResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              RecheckForPriceConflictReq: {
                fields: {
                  activeId: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  }
                }
              },
              RecheckForPriceConflictResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              ActiveProductSignUpBossService: {
                methods: {
                  ListOperationUser: {
                    requestType: "GetListOperationUserReq",
                    responseType: "GetListOperationUserResp"
                  },
                  ListGatherUser: {
                    requestType: "ListGatherUserReq",
                    responseType: "ListGatherUserResp"
                  },
                  DeleteProduct: {
                    requestType: "DeleteProductReq",
                    responseType: "DeleteProductResp"
                  },
                  RecheckForTimeConflict: {
                    requestType: "RecheckForTimeConflictReq",
                    responseType: "RecheckForTimeConflictResp"
                  },
                  RecheckForPriceConflict: {
                    requestType: "RecheckForPriceConflictReq",
                    responseType: "RecheckForPriceConflictResp"
                  },
                  InsertNoSignedProduct: {
                    requestType: "InsertNoSignedProductReq",
                    responseType: "InsertNoSignedProductResp"
                  },
                  ListActiveProductEnter: {
                    requestType: "ListActiveProductEnterReq",
                    responseType: "ListActiveProductEnterResp"
                  },
                  SubmitNoSignedProduct: {
                    requestType: "SubmitNoSignedProductReq",
                    responseType: "SubmitNoSignedProductResp"
                  },
                  GetActiveProductEnterSkuDetail: {
                    requestType: "GetActiveProductEnterSkuDetailReq",
                    responseType: "GetActiveProductEnterSkuDetailResp"
                  },
                  SaveActiveProductEnterDetail: {
                    requestType: "SaveActiveProductEnterDetailReq",
                    responseType: "SaveActiveProductEnterDetailResp"
                  },
                  BatchUpdateNoSignedProduct: {
                    requestType: "BatchUpdateNoSignedProductReq",
                    responseType: "BatchUpdateNoSignedProductResp"
                  },
                  BatchUpdateSignedProduct: {
                    requestType: "BatchUpdateSignedProductReq",
                    responseType: "BatchUpdateSignedProductResp"
                  },
                  AcceptSignedProduct: {
                    requestType: "AcceptSignedProductReq",
                    responseType: "AcceptSignedProductResp"
                  }
                }
              }
            }
          }
        }
      },
      appversion: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.appversion",
          java_outer_classname: "AppVersion"
        },
        nested: {
          CreateAppVersionReq: {
            fields: {
              clientType: {
                type: "common.enum.MsggwEnum.DeviceType",
                id: 1
              },
              versionCode: {
                type: "string",
                id: 2
              },
              updateType: {
                type: "common.enum.AppVersion.AppVersionUpdateTypeEnum",
                id: 4
              },
              country: {
                type: "string",
                id: 5
              },
              lang: {
                rule: "repeated",
                type: "AppVersionLang",
                id: 6
              },
              appUrl: {
                type: "string",
                id: 7
              }
            }
          },
          AppVersionLang: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              content: {
                type: "string",
                id: 2
              }
            }
          },
          CreateAppVersionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditAppVersionReq: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              updateType: {
                type: "common.enum.AppVersion.AppVersionUpdateTypeEnum",
                id: 5
              },
              country: {
                type: "string",
                id: 6
              },
              lang: {
                rule: "repeated",
                type: "AppVersionLang",
                id: 7
              },
              appUrl: {
                type: "string",
                id: 8
              }
            }
          },
          EditAppVersionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SearchCurrentAppVersionInfoReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              }
            }
          },
          GetAppVersionDetailReq: {
            fields: {
              id: {
                type: "string",
                id: 1
              }
            }
          },
          GetAppVersionDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              currentVersionInfo: {
                type: "VersionInfo",
                id: 2
              }
            }
          },
          SearchCurrentAppVersionInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              currentVersionInfo: {
                rule: "repeated",
                type: "VersionInfo",
                id: 2
              }
            }
          },
          VersionInfo: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              appName: {
                type: "string",
                id: 2
              },
              versionCode: {
                type: "string",
                id: 3
              },
              versionId: {
                type: "uint32",
                id: 4
              },
              clientType: {
                type: "common.enum.MsggwEnum.DeviceType",
                id: 5
              },
              updateType: {
                type: "common.enum.AppVersion.AppVersionUpdateTypeEnum",
                id: 6
              },
              contentLang: {
                rule: "repeated",
                type: "VersionLang",
                id: 7
              },
              createTime: {
                type: "string",
                id: 8
              },
              updateTime: {
                type: "string",
                id: 9
              },
              status: {
                type: "StatusEnum",
                id: 10
              },
              id: {
                type: "string",
                id: 11
              },
              appUrl: {
                type: "string",
                id: 12
              }
            }
          },
          StatusEnum: {
            values: {
              PUBLISHED: 0,
              UNPUBLISHED: 1,
              CANCEL: 2
            }
          },
          VersionLang: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              content: {
                type: "string",
                id: 2
              }
            }
          },
          SearchLowestAppVersionInfoReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              }
            }
          },
          SearchLowestAppVersionInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              lowestVersionInfo: {
                rule: "repeated",
                type: "VersionInfo",
                id: 2
              }
            }
          },
          SearchAppVersionInfoWithPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          SearchAppVersionInfoWithPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              allVersionInfo: {
                rule: "repeated",
                type: "VersionInfo",
                id: 3
              }
            }
          },
          UpdateAppVersionToCurrentAppVersionReq: {
            fields: {
              appVersionId: {
                type: "string",
                id: 1
              }
            }
          },
          PublishAppVersionOrNotReq: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              status: {
                type: "StatusEnum",
                id: 2
              }
            }
          },
          UpdateAppVersionToCurrentAppVersionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PublishAppVersionOrNotResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AppVersionBossService: {
            methods: {
              CreateAppVersion: {
                requestType: "CreateAppVersionReq",
                responseType: "CreateAppVersionResp"
              },
              EditAppVersion: {
                requestType: "EditAppVersionReq",
                responseType: "EditAppVersionResp"
              },
              SearchCurrentAppVersionInfo: {
                requestType: "SearchCurrentAppVersionInfoReq",
                responseType: "SearchCurrentAppVersionInfoResp"
              },
              SearchLowestAppVersionInfo: {
                requestType: "SearchLowestAppVersionInfoReq",
                responseType: "SearchLowestAppVersionInfoResp"
              },
              SearchAppVersionInfoWithPage: {
                requestType: "SearchAppVersionInfoWithPageReq",
                responseType: "SearchAppVersionInfoWithPageResp"
              },
              UpdateAppVersionToCurrentAppVersion: {
                requestType: "UpdateAppVersionToCurrentAppVersionReq",
                responseType: "UpdateAppVersionToCurrentAppVersionResp"
              },
              PublishAppVersionOrNot: {
                requestType: "PublishAppVersionOrNotReq",
                responseType: "PublishAppVersionOrNotResp"
              },
              GetAppVersionDetail: {
                requestType: "GetAppVersionDetailReq",
                responseType: "GetAppVersionDetailResp"
              }
            }
          }
        }
      },
      attribute: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.attribute",
          java_outer_classname: "Attribute"
        },
        nested: {
          ProductAttrValue: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              valueId: {
                type: "string",
                id: 2
              },
              valueName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              status: {
                type: "common.enum.AttributeEnum.ShowStatus",
                id: 5
              },
              valueType: {
                type: "common.enum.AttributeEnum.ValueType",
                id: 6
              },
              canBeModify: {
                type: "bool",
                id: 7
              },
              attrName: {
                type: "string",
                id: 8
              }
            }
          },
          ProductAttrAddReq: {
            fields: {
              attrName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 1
              },
              customize: {
                type: "common.enum.AttributeEnum.Customize",
                id: 2
              },
              attrValue: {
                rule: "repeated",
                type: "ProductAttrValue",
                id: 3
              }
            }
          },
          ProductAttrAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ProductAttr: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              attrName: {
                type: "string",
                id: 2
              },
              attrValueName: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              status: {
                type: "common.enum.AttributeEnum.ShowStatus",
                id: 4
              },
              operatorId: {
                type: "string",
                id: 5
              },
              operationName: {
                type: "string",
                id: 6
              },
              updateTime: {
                type: "string",
                id: 7
              },
              canBeDelete: {
                type: "bool",
                id: 8
              },
              attrNameCode: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 9
              }
            }
          },
          ProductAttrGetReq: {
            fields: {
              attrIdKey: {
                type: "string",
                id: 1
              },
              attrNameKey: {
                type: "string",
                id: 3
              },
              attrNameLanguageCode: {
                type: "string",
                id: 4
              },
              categoryNameKey: {
                type: "string",
                id: 7
              },
              page: {
                type: "common.base.Pagination",
                id: 8
              },
              emptyLanguageCode: {
                type: "string",
                id: 9
              }
            }
          },
          ProductAttrGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productAttr: {
                rule: "repeated",
                type: "ProductAttr",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          ProductAttrGetByIdReq: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              attrType: {
                type: "common.enum.AttributeEnum.AttrType",
                id: 3
              },
              filterHiddenAttrValue: {
                type: "bool",
                id: 4
              },
              draftId: {
                type: "string",
                id: 5
              }
            }
          },
          ProductAttrGetByIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              attrId: {
                type: "string",
                id: 2
              },
              attrName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              attrValue: {
                rule: "repeated",
                type: "ProductAttrValue",
                id: 4
              },
              status: {
                type: "common.enum.AttributeEnum.ShowStatus",
                id: 5
              },
              customize: {
                type: "common.enum.AttributeEnum.Customize",
                id: 6
              },
              operatorId: {
                type: "string",
                id: 7
              },
              operationName: {
                type: "string",
                id: 8
              },
              canBeModify: {
                type: "bool",
                id: 9
              }
            }
          },
          ProductAttrModifyReq: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              attrName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              customize: {
                type: "common.enum.AttributeEnum.Customize",
                id: 3
              },
              attrValue: {
                rule: "repeated",
                type: "ProductAttrValue",
                id: 4
              }
            }
          },
          ProductAttrModifyResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ProductAttrDisableReq: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              }
            }
          },
          ProductAttrDisableResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ProductAttrValueDisableReq: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              valueId: {
                type: "string",
                id: 2
              }
            }
          },
          ProductAttrValueDisableResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ProductAttrDownloadReq: {
            fields: {
              attrIdKey: {
                type: "string",
                id: 1
              },
              attrNameKey: {
                type: "string",
                id: 3
              },
              attrNameLanguageCode: {
                type: "string",
                id: 4
              },
              categoryNameKey: {
                type: "string",
                id: 7
              },
              emptyLanguageCode: {
                type: "string",
                id: 9
              }
            }
          },
          ProductAttrDownloadResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              },
              queryCode: {
                type: "string",
                id: 3
              }
            }
          },
          ProductAttrPreUploadReq: {
            fields: {
              fileUrl: {
                type: "string",
                id: 1
              }
            }
          },
          ProductAttrPreUploadResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              uploadId: {
                type: "string",
                id: 2
              },
              checkResult: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          ProductAttrConfirmUploadReq: {
            fields: {
              uploadId: {
                type: "string",
                id: 1
              }
            }
          },
          ProductAttrConfirmUploadResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductAttrGetByIdBatchReq: {
            fields: {
              paramAttrId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              standardAttrId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              filterHiddenAttrValue: {
                type: "bool",
                id: 4
              },
              draftId: {
                type: "string",
                id: 5
              }
            }
          },
          ProductAttrRespUnit: {
            fields: {
              attrId: {
                type: "string",
                id: 2
              },
              attrName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              attrValue: {
                rule: "repeated",
                type: "ProductAttrValue",
                id: 4
              },
              customize: {
                type: "common.enum.AttributeEnum.Customize",
                id: 6
              }
            }
          },
          ProductAttrGetByIdBatchResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              paramAttr: {
                rule: "repeated",
                type: "ProductAttrRespUnit",
                id: 2
              },
              standardAttr: {
                rule: "repeated",
                type: "ProductAttrRespUnit",
                id: 3
              }
            }
          },
          AddCustomizeAttrValueReq: {
            fields: {
              attrId: {
                type: "string",
                id: 2
              },
              valueName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              firstAddTime: {
                type: "string",
                id: 4
              }
            }
          },
          AddCustomizeAttrValueResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              attrId: {
                type: "string",
                id: 2
              },
              attrName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              attrValue: {
                rule: "repeated",
                type: "ProductAttrValue",
                id: 4
              },
              status: {
                type: "common.enum.AttributeEnum.ShowStatus",
                id: 5
              },
              customize: {
                type: "common.enum.AttributeEnum.Customize",
                id: 6
              },
              message: {
                type: "string",
                id: 7
              }
            }
          },
          TranslateSelectedAttrReq: {
            fields: {
              attrId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              valueId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              targetLanguageCode: {
                rule: "repeated",
                type: "string",
                id: 3
              }
            }
          },
          TranslateSelectedAttrResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductAttrValueGetReq: {
            fields: {
              valueIdKey: {
                type: "string",
                id: 1
              },
              productIdKey: {
                type: "string",
                id: 2
              },
              emptyLanguageCode: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          ProductAttrValueGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productAttrValue: {
                rule: "repeated",
                type: "ProductAttrValue",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          UpdateAttrTranslateByIdReq: {
            fields: {
              contentId: {
                type: "string",
                id: 1
              },
              valueName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              }
            }
          },
          UpdateAttrTranslateByIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductAttrValueDownloadReq: {
            fields: {
              valueIdKey: {
                type: "string",
                id: 1
              },
              productIdKey: {
                type: "string",
                id: 2
              },
              emptyLanguageCode: {
                type: "string",
                id: 3
              }
            }
          },
          ProductAttrValueDownloadResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              },
              queryCode: {
                type: "string",
                id: 3
              }
            }
          },
          UploadAttrTranslateReq: {
            fields: {
              uploadUrl: {
                type: "string",
                id: 1
              },
              filePath: {
                type: "string",
                id: 2
              }
            }
          },
          UploadAttrTranslateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              queryCode: {
                type: "string",
                id: 3
              }
            }
          },
          UploadAttrValueTranslateReq: {
            fields: {
              uploadUrl: {
                type: "string",
                id: 1
              },
              filePath: {
                type: "string",
                id: 2
              }
            }
          },
          UploadAttrValueTranslateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              queryCode: {
                type: "string",
                id: 3
              }
            }
          },
          ProductAttrService: {
            methods: {
              ProductAttrAdd: {
                requestType: "ProductAttrAddReq",
                responseType: "ProductAttrAddResp"
              },
              ProductAttrGet: {
                requestType: "ProductAttrGetReq",
                responseType: "ProductAttrGetResp"
              },
              ProductAttrModify: {
                requestType: "ProductAttrModifyReq",
                responseType: "ProductAttrModifyResp"
              },
              ProductAttrDisable: {
                requestType: "ProductAttrDisableReq",
                responseType: "ProductAttrDisableResp"
              },
              ProductAttrValueDisable: {
                requestType: "ProductAttrValueDisableReq",
                responseType: "ProductAttrValueDisableResp"
              },
              ProductAttrGetById: {
                requestType: "ProductAttrGetByIdReq",
                responseType: "ProductAttrGetByIdResp"
              },
              ProductAttrDownload: {
                requestType: "ProductAttrDownloadReq",
                responseType: "ProductAttrDownloadResp"
              },
              ProductAttrPreUpload: {
                requestType: "ProductAttrPreUploadReq",
                responseType: "ProductAttrPreUploadResp"
              },
              ProductAttrConfirmUpload: {
                requestType: "ProductAttrConfirmUploadReq",
                responseType: "ProductAttrConfirmUploadResp"
              },
              ProductAttrGetByIdBatch: {
                requestType: "ProductAttrGetByIdBatchReq",
                responseType: "ProductAttrGetByIdBatchResp"
              },
              AddCustomizeAttrValue: {
                requestType: "AddCustomizeAttrValueReq",
                responseType: "AddCustomizeAttrValueResp"
              },
              TranslateSelectedAttr: {
                requestType: "TranslateSelectedAttrReq",
                responseType: "TranslateSelectedAttrResp"
              },
              ProductAttrValueGet: {
                requestType: "ProductAttrValueGetReq",
                responseType: "ProductAttrValueGetResp"
              },
              UpdateAttrTranslateById: {
                requestType: "UpdateAttrTranslateByIdReq",
                responseType: "UpdateAttrTranslateByIdResp"
              },
              ProductAttrValueDownload: {
                requestType: "ProductAttrValueDownloadReq",
                responseType: "ProductAttrValueDownloadResp"
              },
              UploadAttrTranslate: {
                requestType: "UploadAttrTranslateReq",
                responseType: "UploadAttrTranslateResp"
              },
              UploadAttrValueTranslate: {
                requestType: "UploadAttrValueTranslateReq",
                responseType: "UploadAttrValueTranslateResp"
              }
            }
          }
        }
      },
      banner: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.banner",
          java_outer_classname: "Banner"
        },
        nested: {
          BannerInfo: {
            fields: {
              bannerId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              image: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              url: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              sortNo: {
                type: "uint32",
                id: 7
              },
              bannerType: {
                type: "common.enum.PromotionEnum.BannerTypeEnum",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 9
              },
              background: {
                type: "string",
                id: 10
              },
              clickNum: {
                type: "int32",
                id: 11
              },
              activeCrowdType: {
                type: "common.enum.MarketingEnum.ActiveCrowdType",
                id: 12
              }
            }
          },
          BannerSaveReq: {
            fields: {
              bannerInfo: {
                type: "BannerInfo",
                id: 1
              }
            }
          },
          BannerSaveResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          BatchDeleteBannerReq: {
            fields: {
              bannerIds: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          BatchDeleteBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteBannerReq: {
            fields: {
              bannerId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ListBannerReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              bannerType: {
                type: "common.enum.PromotionEnum.BannerTypeEnum",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          ListBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              bannerInfos: {
                rule: "repeated",
                type: "BannerInfo",
                id: 3
              },
              total: {
                type: "uint32",
                id: 4
              }
            }
          },
          ChangeBannerSortReq: {
            fields: {
              bannerId: {
                type: "string",
                id: 1
              },
              sortNo: {
                type: "uint32",
                id: 2
              }
            }
          },
          ChangeBannerSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          BannerBossService: {
            methods: {
              SaveBanner: {
                requestType: "BannerSaveReq",
                responseType: "BannerSaveResp"
              },
              BatchDeleteBanner: {
                requestType: "BatchDeleteBannerReq",
                responseType: "BatchDeleteBannerResp"
              },
              DeleteBanner: {
                requestType: "DeleteBannerReq",
                responseType: "DeleteBannerResp"
              },
              ListBanner: {
                requestType: "ListBannerReq",
                responseType: "ListBannerResp"
              },
              ChangeBannerSort: {
                requestType: "ChangeBannerSortReq",
                responseType: "ChangeBannerSortResp"
              }
            }
          }
        }
      },
      bombscreen: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.bombscreen",
          java_outer_classname: "Bombscreen"
        },
        nested: {
          BombScreenInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              cover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              status: {
                type: "int32",
                id: 4
              },
              type: {
                type: "int32",
                id: 5
              },
              url: {
                type: "string",
                id: 6
              },
              bombStatus: {
                type: "int32",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              },
              startTime: {
                type: "string",
                id: 9
              },
              endTime: {
                type: "string",
                id: 10
              }
            }
          },
          AddBombScreenReq: {
            fields: {
              bombScreenInfo: {
                type: "BombScreenInfo",
                id: 1
              }
            }
          },
          AddBombScreenResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          UpdateBombScreenReq: {
            fields: {
              bombScreenInfo: {
                type: "BombScreenInfo",
                id: 1
              }
            }
          },
          UpdateBombScreenResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteBombScreenReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          DeleteBombScreenResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ChangeBombScreenStatusReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              status: {
                type: "int32",
                id: 2
              }
            }
          },
          ChangeBombScreenStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          GetBombScreenReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 1
              }
            }
          },
          GetBombScreenResp: {
            fields: {
              bombScreenInfo: {
                rule: "repeated",
                type: "BombScreenInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 4
              },
              total: {
                type: "int32",
                id: 5
              }
            }
          },
          BombScreenService: {
            methods: {
              AddBombScreen: {
                requestType: "AddBombScreenReq",
                responseType: "AddBombScreenResp"
              },
              UpdateBombScreen: {
                requestType: "UpdateBombScreenReq",
                responseType: "UpdateBombScreenResp"
              },
              DeleteBombScreen: {
                requestType: "DeleteBombScreenReq",
                responseType: "DeleteBombScreenResp"
              },
              ChangeBombScreenStatus: {
                requestType: "ChangeBombScreenStatusReq",
                responseType: "ChangeBombScreenStatusResp"
              },
              GetBombScreen: {
                requestType: "GetBombScreenReq",
                responseType: "GetBombScreenResp"
              }
            }
          }
        }
      },
      bosspush: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.bosspush",
          java_outer_classname: "BossPush"
        },
        nested: {
          EditTriggerTemplateReq: {
            fields: {
              titleEn: {
                type: "string",
                id: 1
              },
              contentEn: {
                type: "string",
                id: 2
              },
              contentLang: {
                rule: "repeated",
                type: "TriggerTemplateContentLang",
                id: 3
              },
              cover: {
                type: "string",
                id: 4
              },
              templateCode: {
                type: "string",
                id: 5
              }
            }
          },
          EditTriggerTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EventInfo: {
            fields: {
              eventCode: {
                type: "string",
                id: 1
              },
              eventName: {
                type: "string",
                id: 2
              }
            }
          },
          SearchAllEventInfoReq: {
            fields: {
              bizCode: {
                type: "common.enum.Push.MessageBizCodeEnum",
                id: 1
              }
            }
          },
          SearchAllEventInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              event: {
                rule: "repeated",
                type: "EventInfo",
                id: 2
              }
            }
          },
          SearchTriggerTemplateReq: {
            fields: {
              templateCode: {
                type: "string",
                id: 1
              },
              templateTitle: {
                type: "string",
                id: 2
              },
              templateContent: {
                type: "string",
                id: 3
              },
              pushType: {
                type: "string",
                id: 4
              },
              bizCode: {
                type: "string",
                id: 6
              },
              eventCode: {
                type: "string",
                id: 7
              },
              startTime: {
                type: "string",
                id: 8
              },
              endTime: {
                type: "string",
                id: 9
              },
              country: {
                type: "string",
                id: 10
              },
              pageInfo: {
                type: "common.base.Pagination",
                id: 11
              }
            }
          },
          SearchTriggerTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              template: {
                rule: "repeated",
                type: "TriggerTemplate",
                id: 2
              },
              pageInfo: {
                type: "common.base.Pagination",
                id: 3
              },
              total: {
                type: "uint32",
                id: 4
              }
            }
          },
          TriggerTemplate: {
            fields: {
              templateCode: {
                type: "string",
                id: 1
              },
              templateTitle: {
                type: "string",
                id: 2
              },
              templateContent: {
                type: "string",
                id: 3
              },
              pushType: {
                type: "string",
                id: 4
              },
              bizType: {
                type: "string",
                id: 5
              },
              eventName: {
                type: "string",
                id: 6
              },
              eventDesc: {
                type: "string",
                id: 7
              },
              modifyTime: {
                type: "string",
                id: 8
              }
            }
          },
          TriggerTemplateContentLang: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              title: {
                type: "string",
                id: 2
              },
              content: {
                type: "string",
                id: 3
              },
              secondaryTitle: {
                type: "string",
                id: 4
              }
            }
          },
          GetTriggerTemplateInfoReq: {
            fields: {
              templateCode: {
                type: "string",
                id: 1
              }
            }
          },
          GetTriggerTemplateInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              templateCode: {
                type: "string",
                id: 7
              },
              templateTitle: {
                type: "string",
                id: 2
              },
              templateContent: {
                type: "string",
                id: 3
              },
              country: {
                type: "string",
                id: 4
              },
              eventName: {
                type: "string",
                id: 5
              },
              templateLang: {
                rule: "repeated",
                type: "TriggerTemplateContentLang",
                id: 6
              },
              cover: {
                type: "string",
                id: 8
              }
            }
          },
          PushTemplateService: {
            methods: {
              SearchTriggerTemplate: {
                requestType: "SearchTriggerTemplateReq",
                responseType: "SearchTriggerTemplateResp"
              },
              EditTriggerTemplate: {
                requestType: "EditTriggerTemplateReq",
                responseType: "EditTriggerTemplateResp"
              },
              SearchAllEventInfo: {
                requestType: "SearchAllEventInfoReq",
                responseType: "SearchAllEventInfoResp"
              },
              GetTriggerTemplateInfo: {
                requestType: "GetTriggerTemplateInfoReq",
                responseType: "GetTriggerTemplateInfoResp"
              }
            }
          }
        }
      },
      boxcard: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.boxcard",
          java_outer_classname: "Boxcard"
        },
        nested: {
          BoxcardInfo: {
            fields: {
              boxcardId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              image: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              bannerImage: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              type: {
                type: "common.enum.PromotionEnum.BoxCardType",
                id: 5
              },
              sortNo: {
                type: "uint32",
                id: 6
              },
              countryCode: {
                type: "string",
                id: 7
              },
              cardType: {
                type: "int32",
                id: 8
              },
              urlType: {
                type: "common.enum.PromotionEnum.PromotionAppUrlType",
                id: 9
              },
              url: {
                type: "string",
                id: 10
              },
              clickNum: {
                type: "int32",
                id: 11
              },
              updateTime: {
                type: "string",
                id: 12
              },
              sort: {
                type: "int32",
                id: 13
              },
              startTime: {
                type: "int64",
                id: 14
              },
              endTime: {
                type: "int64",
                id: 15
              },
              activeCrowdType: {
                type: "common.enum.MarketingEnum.ActiveCrowdType",
                id: 16
              }
            }
          },
          BoxcardSaveReq: {
            fields: {
              boxcardInfo: {
                type: "BoxcardInfo",
                id: 1
              }
            }
          },
          BoxcardSaveResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ListBoxcardReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              cardType: {
                type: "int32",
                id: 3
              }
            }
          },
          ListBoxcardResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "BoxcardInfo",
                id: 3
              },
              total: {
                type: "uint32",
                id: 4
              }
            }
          },
          ListProductsReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              boxcardId: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              productName: {
                type: "string",
                id: 4
              }
            }
          },
          ListProductsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "ListProductsInfo",
                id: 3
              },
              total: {
                type: "uint32",
                id: 4
              }
            },
            nested: {
              ListProductsInfo: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  cover: {
                    type: "string",
                    id: 2
                  },
                  sortNo: {
                    type: "uint32",
                    id: 3
                  },
                  productId: {
                    type: "string",
                    id: 4
                  }
                }
              }
            }
          },
          InsetProductsReq: {
            fields: {
              productIds: {
                type: "string",
                id: 1
              },
              boxcardId: {
                type: "string",
                id: 2
              }
            }
          },
          InsetProductsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          BatchDeleteBoxcardReq: {
            fields: {
              boxcardId: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          BatchDeleteBoxcardResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          BatchDeleteProductsReq: {
            fields: {
              productIds: {
                type: "string",
                id: 1
              },
              boxcardId: {
                type: "string",
                id: 2
              }
            }
          },
          BatchDeleteProductsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ProductsSortChangeReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              boxcardId: {
                type: "string",
                id: 2
              },
              sortNo: {
                type: "uint32",
                id: 3
              }
            }
          },
          ProductsSortChangeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          BoxcardSortChangeReq: {
            fields: {
              boxcardId: {
                type: "string",
                id: 1
              },
              sortNo: {
                type: "uint32",
                id: 2
              }
            }
          },
          BoxcardSortChangeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          BoxcardBossService: {
            methods: {
              SaveBoxcard: {
                requestType: "BoxcardSaveReq",
                responseType: "BoxcardSaveResp"
              },
              ListBoxcard: {
                requestType: "ListBoxcardReq",
                responseType: "ListBoxcardResp"
              },
              BatchDeleteBoxcard: {
                requestType: "BatchDeleteBoxcardReq",
                responseType: "BatchDeleteBoxcardResp"
              },
              BoxcardSortChange: {
                requestType: "BoxcardSortChangeReq",
                responseType: "BoxcardSortChangeResp"
              },
              ListProducts: {
                requestType: "ListProductsReq",
                responseType: "ListProductsResp"
              },
              InsetProducts: {
                requestType: "InsetProductsReq",
                responseType: "InsetProductsResp"
              },
              BatchDeleteProducts: {
                requestType: "BatchDeleteProductsReq",
                responseType: "BatchDeleteProductsResp"
              },
              ProductsSortChange: {
                requestType: "ProductsSortChangeReq",
                responseType: "ProductsSortChangeResp"
              }
            }
          }
        }
      },
      brand: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.brand",
          java_outer_classname: "Brand"
        },
        nested: {
          BrandInfo: {
            fields: {
              brandId: {
                type: "string",
                id: 1
              },
              nameCn: {
                type: "string",
                id: 2
              },
              nameEn: {
                type: "string",
                id: 3
              },
              logo: {
                type: "string",
                id: 4
              },
              comeFrom: {
                type: "string",
                id: 5
              },
              memo: {
                type: "string",
                id: 6
              },
              status: {
                type: "uint32",
                id: 7
              }
            }
          },
          BrandInfoAddReq: {
            fields: {
              nameCn: {
                type: "string",
                id: 2
              },
              nameEn: {
                type: "string",
                id: 3
              },
              logo: {
                type: "string",
                id: 4
              },
              comeFrom: {
                type: "string",
                id: 5
              },
              memo: {
                type: "string",
                id: 6
              }
            }
          },
          BrandInfoAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              brandId: {
                type: "string",
                id: 2
              }
            }
          },
          BrandInfoGetReq: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              status: {
                type: "uint32",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              }
            }
          },
          BrandInfoGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              brandInfo: {
                rule: "repeated",
                type: "BrandInfo",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          BrandInfoModifyReq: {
            fields: {
              brandId: {
                type: "string",
                id: 1
              },
              nameCn: {
                type: "string",
                id: 2
              },
              nameEn: {
                type: "string",
                id: 3
              },
              logo: {
                type: "string",
                id: 4
              },
              comeFrom: {
                type: "string",
                id: 5
              },
              memo: {
                type: "string",
                id: 6
              }
            }
          },
          BrandInfoModifyResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BrandChangeStatusReq: {
            fields: {
              brandId: {
                type: "string",
                id: 1
              },
              status: {
                type: "uint32",
                id: 2
              }
            }
          },
          BrandChangeStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BrandDeleteReq: {
            fields: {
              brandId: {
                type: "string",
                id: 1
              }
            }
          },
          BrandDeleteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BrandPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              brandId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              brandName: {
                type: "string",
                id: 3
              }
            }
          },
          BrandPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "BrandInfo",
                id: 3
              }
            }
          },
          ProductBrandService: {
            methods: {
              BrandInfoAdd: {
                requestType: "BrandInfoAddReq",
                responseType: "BrandInfoAddResp"
              },
              BrandInfoModify: {
                requestType: "BrandInfoModifyReq",
                responseType: "BrandInfoModifyResp"
              },
              BrandInfoGet: {
                requestType: "BrandInfoGetReq",
                responseType: "BrandInfoGetResp"
              },
              BrandChangeStatus: {
                requestType: "BrandChangeStatusReq",
                responseType: "BrandChangeStatusResp"
              },
              BrandDelete: {
                requestType: "BrandDeleteReq",
                responseType: "BrandDeleteResp"
              },
              BrandPage: {
                requestType: "BrandPageReq",
                responseType: "BrandPageResp"
              }
            }
          }
        }
      },
      carrier: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.carrier",
          java_outer_classname: "Carrier"
        },
        nested: {
          CreateUploadTaskRequest: {
            fields: {
              keyword: {
                type: "string",
                id: 1
              },
              categoryId: {
                type: "int32",
                id: 2
              },
              target: {
                type: "int32",
                id: 3
              },
              productAttr: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              minPrice: {
                type: "string",
                id: 5
              },
              maxPrice: {
                type: "string",
                id: 6
              },
              creatorId: {
                type: "int64",
                id: 7
              },
              creatorName: {
                type: "string",
                id: 8
              },
              categoryName: {
                type: "string",
                id: 9
              },
              minWeight: {
                type: "string",
                id: 10
              },
              maxWeight: {
                type: "string",
                id: 11
              }
            }
          },
          CreateUploadTaskResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetTaskListRequest: {
            fields: {}
          },
          GetTaskListResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              taskInfo: {
                rule: "repeated",
                type: "TaskInfo",
                id: 2
              }
            },
            nested: {
              TaskInfo: {
                fields: {
                  taskId: {
                    type: "int64",
                    id: 1
                  },
                  keyword: {
                    type: "string",
                    id: 2
                  },
                  categoryId: {
                    type: "int32",
                    id: 3
                  },
                  target: {
                    type: "int32",
                    id: 4
                  },
                  progress: {
                    type: "int32",
                    id: 5
                  },
                  status: {
                    type: "int32",
                    id: 6
                  },
                  productAttr: {
                    rule: "repeated",
                    type: "string",
                    id: 7
                  },
                  minPrice: {
                    type: "string",
                    id: 8
                  },
                  maxPrice: {
                    type: "string",
                    id: 9
                  },
                  creatorId: {
                    type: "int64",
                    id: 10
                  },
                  creatorName: {
                    type: "string",
                    id: 11
                  },
                  categoryName: {
                    type: "string",
                    id: 12
                  },
                  createTime: {
                    type: "string",
                    id: 13
                  },
                  updateTime: {
                    type: "string",
                    id: 14
                  },
                  finishTime: {
                    type: "string",
                    id: 15
                  },
                  operateTime: {
                    type: "string",
                    id: 16
                  },
                  startTime: {
                    type: "string",
                    id: 17
                  },
                  minWeight: {
                    type: "string",
                    id: 18
                  },
                  maxWeight: {
                    type: "string",
                    id: 19
                  }
                }
              }
            }
          },
          StopTaskRequest: {
            fields: {
              taskId: {
                type: "int64",
                id: 1
              }
            }
          },
          StopTaskResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetChilindoImagesReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              filter: {
                type: "int32",
                id: 2
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              }
            }
          },
          GetChilindoImagesResp: {
            fields: {
              total: {
                type: "int32",
                id: 1
              },
              image: {
                rule: "repeated",
                type: "ChilindoImageInfo",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            },
            nested: {
              ChilindoImageInfo: {
                fields: {
                  imageUrl: {
                    type: "string",
                    id: 1
                  },
                  status: {
                    type: "int32",
                    id: 2
                  },
                  id: {
                    type: "int32",
                    id: 3
                  }
                }
              }
            }
          },
          DownloadChilindoImagesResp: {
            fields: {
              url: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          TagChilindoImageReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "int32",
                id: 1
              },
              type: {
                type: "bool",
                id: 2
              }
            }
          },
          TagChilindoImageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BatchAddTaskReq: {
            fields: {
              filename: {
                type: "string",
                id: 1
              },
              creatorId: {
                type: "int64",
                id: 2
              },
              creatorName: {
                type: "string",
                id: 3
              }
            }
          },
          BatchAddTaskResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CreateSameKindTaskReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          CreateSameKindTaskResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SameKindTaskListReq: {
            fields: {}
          },
          SameKindTaskListResp: {
            fields: {
              task: {
                rule: "repeated",
                type: "SameKindTaskInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            },
            nested: {
              SameKindTaskInfo: {
                fields: {
                  taskId: {
                    type: "string",
                    id: 1
                  },
                  status: {
                    type: "int32",
                    id: 2
                  },
                  createTime: {
                    type: "string",
                    id: 3
                  },
                  progress: {
                    type: "int32",
                    id: 4
                  }
                }
              }
            }
          },
          SameKindResultReq: {
            fields: {
              taskId: {
                type: "string",
                id: 1
              }
            }
          },
          SameKindResultResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              result: {
                keyType: "string",
                type: "string",
                id: 2
              }
            }
          },
          CarrierService: {
            methods: {
              CreateUploadTask: {
                requestType: "CreateUploadTaskRequest",
                responseType: "CreateUploadTaskResponse"
              },
              BatchAddTask: {
                requestType: "BatchAddTaskReq",
                responseType: "BatchAddTaskResp"
              },
              GetTaskList: {
                requestType: "GetTaskListRequest",
                responseType: "GetTaskListResponse"
              },
              StopTask: {
                requestType: "StopTaskRequest",
                responseType: "StopTaskResponse"
              },
              GetChilindoImages: {
                requestType: "GetChilindoImagesReq",
                responseType: "GetChilindoImagesResp"
              },
              TagChilindoImage: {
                requestType: "TagChilindoImageReq",
                responseType: "TagChilindoImageResp"
              },
              CreateSameKindTask: {
                requestType: "CreateSameKindTaskReq",
                responseType: "CreateSameKindTaskResp"
              },
              SameKindTaskList: {
                requestType: "SameKindTaskListReq",
                responseType: "SameKindTaskListResp"
              },
              SameKindResult: {
                requestType: "SameKindResultReq",
                responseType: "SameKindResultResp"
              },
              downloadChilindoImages: {
                requestType: "GetChilindoImagesReq",
                responseType: "DownloadChilindoImagesResp"
              }
            }
          }
        }
      },
      category: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.category",
          java_outer_classname: "Category"
        },
        nested: {
          CategoryUnit: {
            fields: {
              cateId: {
                type: "uint32",
                id: 2
              },
              pid: {
                type: "uint32",
                id: 3
              },
              sort: {
                type: "uint32",
                id: 4
              },
              cover: {
                type: "string",
                id: 5
              },
              cateNameValue: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 6
              },
              status: {
                type: "common.enum.CategoryEnum.ShowStatus",
                id: 7
              },
              cateType: {
                type: "common.enum.CategoryEnum.CateType",
                id: 8
              },
              level: {
                type: "common.enum.CategoryEnum.CateLevel",
                id: 9
              },
              bindId: {
                type: "string",
                id: 10
              },
              paramAttrId: {
                type: "string",
                id: 11
              },
              standardAttrId: {
                type: "string",
                id: 12
              },
              desc: {
                type: "string",
                id: 13
              },
              bindCateInfo: {
                rule: "repeated",
                type: "BindCateInfo",
                id: 14
              },
              cateName: {
                type: "string",
                id: 15
              },
              countryCode: {
                type: "string",
                id: 16
              },
              isStar: {
                type: "bool",
                id: 17
              },
              iconInfo: {
                type: "IconInfo",
                id: 18
              }
            }
          },
          BindCateInfo: {
            fields: {
              cateId: {
                type: "string",
                id: 1
              },
              cateName: {
                type: "string",
                id: 2
              }
            }
          },
          IconInfo: {
            fields: {
              selected: {
                type: "string",
                id: 1
              },
              unselected: {
                type: "string",
                id: 2
              }
            }
          },
          CategoryAddReq: {
            fields: {
              pid: {
                type: "uint32",
                id: 1
              },
              cateNameValue: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              level: {
                type: "common.enum.CategoryEnum.CateLevel",
                id: 3
              },
              desc: {
                type: "string",
                id: 4
              },
              cover: {
                type: "string",
                id: 5
              },
              cateType: {
                type: "common.enum.CategoryEnum.CateType",
                id: 6
              },
              bindId: {
                type: "string",
                id: 8
              },
              paramAttrId: {
                type: "string",
                id: 9
              },
              standardAttrId: {
                type: "string",
                id: 10
              },
              countryCode: {
                type: "string",
                id: 11
              },
              iconInfo: {
                type: "IconInfo",
                id: 12
              }
            }
          },
          CategoryAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              categoryUnit: {
                type: "CategoryUnit",
                id: 2
              }
            }
          },
          CategoryDeleteReq: {
            fields: {
              cateId: {
                type: "uint32",
                id: 1
              }
            }
          },
          CategoryDeleteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryUpdateReq: {
            fields: {
              cateId: {
                type: "uint32",
                id: 1
              },
              pid: {
                type: "uint32",
                id: 2
              },
              cateNameValue: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              desc: {
                type: "string",
                id: 5
              },
              cover: {
                type: "string",
                id: 6
              },
              cateType: {
                type: "common.enum.CategoryEnum.CateType",
                id: 7
              },
              sort: {
                type: "uint32",
                id: 8
              },
              bindId: {
                type: "string",
                id: 9
              },
              paramAttrId: {
                type: "string",
                id: 10
              },
              standardAttrId: {
                type: "string",
                id: 11
              },
              iconInfo: {
                type: "IconInfo",
                id: 12
              }
            }
          },
          CategoryUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              categoryUnit: {
                type: "CategoryUnit",
                id: 2
              }
            }
          },
          CategoryListGetReq: {
            fields: {
              pid: {
                type: "uint32",
                id: 1
              },
              cateType: {
                type: "common.enum.CategoryEnum.CateType",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              languageCode: {
                type: "string",
                id: 5
              }
            }
          },
          CategoryListGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              categoryUnit: {
                rule: "repeated",
                type: "CategoryUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          CategoryHiddenOrShowReq: {
            fields: {
              cateId: {
                type: "int32",
                id: 1
              },
              status: {
                type: "common.enum.CategoryEnum.ShowStatus",
                id: 2
              }
            }
          },
          CategoryHiddenOrShowResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryChangSortReq: {
            fields: {
              cateId: {
                type: "uint32",
                id: 1
              },
              sortDirection: {
                type: "common.enum.CategoryEnum.SortDirection",
                id: 2
              }
            }
          },
          CategoryChangSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryChangeToSortReq: {
            fields: {
              cateId: {
                type: "uint32",
                id: 1
              },
              targetSort: {
                type: "uint32",
                id: 2
              }
            }
          },
          CategoryChangeToSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryQueryByNameReq: {
            fields: {
              categoryName: {
                type: "string",
                id: 1
              }
            }
          },
          CategoryQueryResult: {
            fields: {
              cateId_1: {
                type: "uint32",
                id: 1
              },
              cateName_1: {
                type: "string",
                id: 2
              },
              cateId_2: {
                type: "uint32",
                id: 3
              },
              cateName_2: {
                type: "string",
                id: 4
              },
              cateId_3: {
                type: "uint32",
                id: 5
              },
              cateName_3: {
                type: "string",
                id: 6
              }
            }
          },
          CategoryQueryByNameResp: {
            fields: {
              categoryResult: {
                rule: "repeated",
                type: "CategoryQueryResult",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetUpperRelatedCategoryByIdReq: {
            fields: {
              cateId: {
                type: "uint32",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              draftId: {
                type: "string",
                id: 3
              }
            }
          },
          GetUpperRelatedCategoryByIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              categoryUnit: {
                rule: "repeated",
                type: "CategoryUnit",
                id: 2
              }
            }
          },
          ListCategoryProductReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              frontCateId: {
                type: "uint32",
                id: 2
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 3
              }
            }
          },
          ListCategoryProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              categoryProductUnit: {
                rule: "repeated",
                type: "CategoryProductUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            },
            nested: {
              CategoryProductUnit: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  spuCover: {
                    type: "string",
                    id: 2
                  },
                  title: {
                    type: "string",
                    id: 3
                  },
                  frontCate: {
                    rule: "repeated",
                    type: "string",
                    id: 4
                  },
                  sort: {
                    type: "int32",
                    id: 5
                  },
                  top: {
                    type: "common.enum.CategoryEnum.CateProdTop",
                    id: 6
                  },
                  backCateId: {
                    type: "uint32",
                    id: 7
                  },
                  totalSort: {
                    type: "int32",
                    id: 8
                  }
                }
              }
            }
          },
          ChangeCategoryProductSortReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              sort: {
                type: "uint32",
                id: 2
              }
            }
          },
          ChangeCategoryProductSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SetCategoryProductTopReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              top: {
                type: "common.enum.CategoryEnum.CateProdTop",
                id: 2
              }
            }
          },
          SetCategoryProductTopResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          LevelTwoCopyUnit: {
            fields: {
              fromLevelTwoCateId: {
                type: "uint32",
                id: 1
              },
              toLevelOneCateId: {
                type: "uint32",
                id: 2
              }
            }
          },
          CategoryCopyToUnit: {
            fields: {
              fromLevelOneCateId: {
                type: "uint32",
                id: 1
              },
              levelTwo: {
                rule: "repeated",
                type: "LevelTwoCopyUnit",
                id: 2
              },
              toCountryCode: {
                type: "string",
                id: 3
              }
            }
          },
          CopyFrontCategoryReq: {
            fields: {
              copyUnit: {
                rule: "repeated",
                type: "CategoryCopyToUnit",
                id: 2
              }
            }
          },
          CopyFrontCategoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryGroupGetReq: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              }
            }
          },
          CategoryGroupGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              id: {
                type: "uint32",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              nameValue: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              secondCategory: {
                rule: "repeated",
                type: "SecondCategory",
                id: 5
              }
            },
            nested: {
              SecondCategory: {
                fields: {
                  id: {
                    type: "uint32",
                    id: 1
                  },
                  name: {
                    type: "string",
                    id: 2
                  },
                  cover: {
                    type: "string",
                    id: 3
                  },
                  sort: {
                    type: "uint32",
                    id: 4
                  }
                }
              }
            }
          },
          CategoryGroupListGetReq: {
            fields: {
              pid: {
                type: "uint32",
                id: 1
              }
            }
          },
          CategoryGroupListGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pid: {
                type: "uint32",
                id: 2
              },
              categoryGroup: {
                rule: "repeated",
                type: "CategoryGroup",
                id: 3
              }
            },
            nested: {
              CategoryGroup: {
                fields: {
                  id: {
                    type: "uint32",
                    id: 1
                  },
                  name: {
                    type: "string",
                    id: 2
                  },
                  cateNames: {
                    type: "string",
                    id: 3
                  }
                }
              }
            }
          },
          CategoryGroupAddOrUpdateReq: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              pid: {
                type: "uint32",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              nameValue: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              categoryId: {
                rule: "repeated",
                type: "uint32",
                id: 5
              }
            }
          },
          CategoryGroupAddOrUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryGroupDeleteReq: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              }
            }
          },
          CategoryGroupDeleteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryStarReq: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              isStar: {
                type: "uint32",
                id: 2
              }
            }
          },
          CategoryStarResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryGroupSortReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "uint32",
                id: 1
              },
              pid: {
                type: "uint32",
                id: 2
              }
            }
          },
          CategoryGroupSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CategoryMappingQueryReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              platform: {
                type: "uint32",
                id: 2
              },
              fingoCategoryIdList: {
                rule: "repeated",
                type: "uint32",
                id: 3
              },
              thirdCategoryIdList: {
                rule: "repeated",
                type: "uint32",
                id: 4
              },
              categoryStatus: {
                type: "uint32",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              }
            }
          },
          CategoryMappingFingoItem: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              }
            }
          },
          CategoryMappingFingoItemList: {
            fields: {
              fingoCategoryItems: {
                rule: "repeated",
                type: "CategoryMappingFingoItem",
                id: 1
              }
            }
          },
          CategoryMappingItem: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              thirdCategoryId: {
                type: "uint32",
                id: 3
              },
              thirdCategoryNames: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              fingoCategoryList: {
                rule: "repeated",
                type: "CategoryMappingFingoItemList",
                id: 5
              }
            }
          },
          CategoryMappingQueryResp: {
            fields: {
              mappingList: {
                rule: "repeated",
                type: "CategoryMappingItem",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          CategoryLazadaQueryReq: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          CategoryLazadaItem: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              level: {
                type: "uint32",
                id: 3
              },
              leaf: {
                type: "uint32",
                id: 4
              }
            }
          },
          CategoryLazadaQueryResp: {
            fields: {
              subCategoryList: {
                rule: "repeated",
                type: "CategoryLazadaItem",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetCateMappingDetailReq: {
            fields: {
              mappingId: {
                type: "int32",
                id: 1
              }
            }
          },
          GetCateMappingDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              cateList: {
                rule: "repeated",
                type: "FingoCate",
                id: 2
              },
              cateIdList: {
                rule: "repeated",
                type: "int32",
                id: 3
              }
            },
            nested: {
              FingoCate: {
                fields: {
                  cateId: {
                    type: "int32",
                    id: 1
                  },
                  cateName: {
                    type: "string",
                    id: 2
                  },
                  cateList: {
                    rule: "repeated",
                    type: "FingoCate",
                    id: 7
                  }
                }
              }
            }
          },
          UpdateCategoryMappingReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              fingoCateIdList: {
                rule: "repeated",
                type: "int32",
                id: 2
              }
            }
          },
          UpdateCategoryMappingResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductCategoryService: {
            methods: {
              CategoryAdd: {
                requestType: "CategoryAddReq",
                responseType: "CategoryAddResp"
              },
              CategoryDelete: {
                requestType: "CategoryDeleteReq",
                responseType: "CategoryDeleteResp"
              },
              CategoryUpdate: {
                requestType: "CategoryUpdateReq",
                responseType: "CategoryUpdateResp"
              },
              CategoryListGet: {
                requestType: "CategoryListGetReq",
                responseType: "CategoryListGetResp"
              },
              CategoryQueryByName: {
                requestType: "CategoryQueryByNameReq",
                responseType: "CategoryQueryByNameResp"
              },
              CategoryHiddenOrShow: {
                requestType: "CategoryHiddenOrShowReq",
                responseType: "CategoryHiddenOrShowResp"
              },
              CategoryChangSort: {
                requestType: "CategoryChangSortReq",
                responseType: "CategoryChangSortResp"
              },
              CategoryChangeToSort: {
                requestType: "CategoryChangeToSortReq",
                responseType: "CategoryChangeToSortResp"
              },
              GetUpperRelatedCategoryById: {
                requestType: "GetUpperRelatedCategoryByIdReq",
                responseType: "GetUpperRelatedCategoryByIdResp"
              },
              ListCategoryProduct: {
                requestType: "ListCategoryProductReq",
                responseType: "ListCategoryProductResp"
              },
              ChangeCategoryProductSort: {
                requestType: "ChangeCategoryProductSortReq",
                responseType: "ChangeCategoryProductSortResp"
              },
              SetCategoryProductTop: {
                requestType: "SetCategoryProductTopReq",
                responseType: "SetCategoryProductTopResp"
              },
              CopyFrontCategory: {
                requestType: "CopyFrontCategoryReq",
                responseType: "CopyFrontCategoryResp"
              },
              CategoryGroupListGet: {
                requestType: "CategoryGroupListGetReq",
                responseType: "CategoryGroupListGetResp"
              },
              CategoryGroupGet: {
                requestType: "CategoryGroupGetReq",
                responseType: "CategoryGroupGetResp"
              },
              CategoryGroupAddOrUpdate: {
                requestType: "CategoryGroupAddOrUpdateReq",
                responseType: "CategoryGroupAddOrUpdateResp"
              },
              CategoryGroupDelete: {
                requestType: "CategoryGroupDeleteReq",
                responseType: "CategoryGroupDeleteResp"
              },
              CategoryGroupSort: {
                requestType: "CategoryGroupSortReq",
                responseType: "CategoryGroupSortResp"
              },
              CategoryStar: {
                requestType: "CategoryStarReq",
                responseType: "CategoryStarResp"
              },
              CategoryMappingList: {
                requestType: "CategoryMappingQueryReq",
                responseType: "CategoryMappingQueryResp"
              },
              CategoryLazadaList: {
                requestType: "CategoryLazadaQueryReq",
                responseType: "CategoryLazadaQueryResp"
              },
              GetCateMappingDetail: {
                requestType: "GetCateMappingDetailReq",
                responseType: "GetCateMappingDetailResp"
              },
              UpdateCategoryMapping: {
                requestType: "UpdateCategoryMappingReq",
                responseType: "UpdateCategoryMappingResp"
              }
            }
          }
        }
      },
      cms: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.cms",
          java_outer_classname: "Cms"
        },
        nested: {
          CmsSearchTagRequest: {
            fields: {
              tagName: {
                type: "string",
                id: 1
              },
              tagId: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          EditSpecialColumnReq: {
            fields: {
              specialColumnId: {
                type: "string",
                id: 1
              },
              specialColumnName: {
                type: "string",
                id: 2
              },
              langContent: {
                rule: "repeated",
                type: "SpecialColumnContent",
                id: 3
              },
              specialColumnBanner: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          SpecialColumnContent: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              content: {
                type: "string",
                id: 2
              }
            }
          },
          SpecialSubjectContent: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              content: {
                type: "string",
                id: 2
              }
            }
          },
          EditSpecialColumnResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CmsSearchTagResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              tags: {
                rule: "repeated",
                type: "CmsTag",
                id: 2
              }
            }
          },
          CmsTag: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              tagName: {
                type: "string",
                id: 2
              }
            }
          },
          SearchSpecialColumnInfoReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              }
            }
          },
          SearchSpecialColumnInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              specialColumn: {
                rule: "repeated",
                type: "SpecialColumn",
                id: 2
              }
            }
          },
          SpecialColumn: {
            fields: {
              specialColumnId: {
                type: "string",
                id: 1
              },
              specialColumnName: {
                type: "string",
                id: 2
              },
              specialColumnContent: {
                rule: "repeated",
                type: "SpecialColumnContent",
                id: 3
              },
              specialSubject: {
                rule: "repeated",
                type: "SpecialSubject",
                id: 4
              },
              contentType: {
                type: "common.enum.CmsEnum.ArticleContentTypeEnum",
                id: 5
              },
              specialColumnBanner: {
                rule: "repeated",
                type: "string",
                id: 6
              },
              topics: {
                rule: "repeated",
                type: "ArticleTopic",
                id: 7
              },
              orderIndex: {
                type: "int32",
                id: 8
              }
            }
          },
          SpecialSubject: {
            fields: {
              specialSubjectId: {
                type: "string",
                id: 1
              },
              specialSubjectName: {
                type: "string",
                id: 2
              },
              specialSubjectContent: {
                rule: "repeated",
                type: "SpecialSubjectContent",
                id: 3
              },
              orderIndex: {
                type: "int32",
                id: 4
              }
            }
          },
          AddArticleRequest: {
            fields: {
              articleUrl: {
                type: "string",
                id: 1
              },
              contentType: {
                type: "common.enum.CmsEnum.ArticleContentTypeEnum",
                id: 4
              },
              specialColumnId: {
                type: "string",
                id: 5
              },
              specialSubjectId: {
                type: "string",
                id: 6
              },
              userLevel: {
                rule: "repeated",
                type: "uint32",
                id: 7
              },
              contentTag: {
                rule: "repeated",
                type: "string",
                id: 8
              },
              productIds: {
                rule: "repeated",
                type: "string",
                id: 9
              },
              browserBaseNumber: {
                type: "string",
                id: 10
              },
              shareBaseNumber: {
                type: "string",
                id: 11
              },
              articleLangInfos: {
                rule: "repeated",
                type: "ArticleLangInfo",
                id: 12
              },
              roleCover: {
                type: "string",
                id: 13
              },
              roleName: {
                type: "string",
                id: 14
              },
              articleTopicId: {
                type: "string",
                id: 15
              },
              collectBaseNumber: {
                type: "string",
                id: 16
              }
            }
          },
          ArticleLangInfo: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              articleTitle: {
                type: "string",
                id: 2
              },
              articleDescribe: {
                type: "string",
                id: 3
              },
              coverPic: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              shareTitle: {
                type: "string",
                id: 5
              },
              shareDescribe: {
                type: "string",
                id: 6
              },
              sharePic: {
                type: "string",
                id: 7
              },
              contentComponents: {
                rule: "repeated",
                type: "ArticleContentComponent",
                id: 10
              },
              videoCover: {
                type: "string",
                id: 11
              },
              videoUrl: {
                type: "string",
                id: 12
              }
            }
          },
          ArticleContentComponent: {
            fields: {
              componentType: {
                type: "common.enum.CmsEnum.ArticleComponentTypeEnum",
                id: 1
              },
              componentValue: {
                type: "string",
                id: 2
              },
              componentLocation: {
                type: "string",
                id: 3
              }
            }
          },
          AddArticleResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              articleCode: {
                type: "string",
                id: 2
              }
            }
          },
          AddSpecialSubjectReq: {
            fields: {
              specialColumnId: {
                type: "string",
                id: 1
              },
              specialSubjectName: {
                type: "string",
                id: 2
              },
              specialSubjectContent: {
                rule: "repeated",
                type: "SpecialSubjectContent",
                id: 4
              }
            }
          },
          AddSpecialSubjectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditSpecialSubjectReq: {
            fields: {
              specialSubjectId: {
                type: "string",
                id: 1
              },
              specialSubjectName: {
                type: "string",
                id: 2
              },
              specialSubjectContent: {
                rule: "repeated",
                type: "SpecialSubjectContent",
                id: 3
              }
            }
          },
          EditSpecialSubjectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ViewArticleDetailReq: {
            fields: {
              articleCode: {
                type: "string",
                id: 1
              }
            }
          },
          ViewArticleDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              articleCode: {
                type: "string",
                id: 2
              },
              articleLangInfo: {
                rule: "repeated",
                type: "ArticleLangInfo",
                id: 3
              },
              articleUrl: {
                type: "string",
                id: 4
              },
              contentType: {
                type: "common.enum.CmsEnum.ArticleContentTypeEnum",
                id: 5
              },
              specialColumnId: {
                type: "string",
                id: 6
              },
              specialSubjectId: {
                type: "string",
                id: 7
              },
              userLevel: {
                rule: "repeated",
                type: "string",
                id: 8
              },
              contentTag: {
                rule: "repeated",
                type: "ArticleTag",
                id: 9
              },
              productIds: {
                rule: "repeated",
                type: "string",
                id: 10
              },
              browserBaseNumber: {
                type: "string",
                id: 11
              },
              shareBaseNumber: {
                type: "string",
                id: 12
              },
              roleCover: {
                type: "string",
                id: 13
              },
              roleName: {
                type: "string",
                id: 14
              },
              articleTopicId: {
                type: "string",
                id: 15
              },
              articleTopicName: {
                type: "string",
                id: 16
              },
              collectBaseNumber: {
                type: "string",
                id: 17
              }
            }
          },
          SortArticleReq: {
            fields: {
              articleCode: {
                type: "string",
                id: 1
              },
              orderIndex: {
                type: "uint32",
                id: 2
              }
            }
          },
          SortArticleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AddSpecialColumnReq: {
            fields: {
              specialColumnName: {
                type: "string",
                id: 1
              },
              specialColumnContent: {
                rule: "repeated",
                type: "SpecialColumnContent",
                id: 2
              },
              country: {
                type: "string",
                id: 3
              },
              contentType: {
                type: "common.enum.CmsEnum.ArticleContentTypeEnum",
                id: 4
              },
              specialColumnBanner: {
                rule: "repeated",
                type: "string",
                id: 5
              }
            }
          },
          AddSpecialColumnResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SortSpecialSubjectReq: {
            fields: {
              specialSubjectId: {
                type: "string",
                id: 1
              },
              orderIndex: {
                type: "uint32",
                id: 2
              }
            }
          },
          SortSpecialSubjectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BatchGetArticleByArticleCodeReq: {
            fields: {
              articleCode: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          BatchGetArticleByArticleCodeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              articleBaseInfo: {
                rule: "repeated",
                type: "ArticleBaseInfo",
                id: 2
              }
            }
          },
          ArticleBaseInfo: {
            fields: {
              articleCode: {
                type: "string",
                id: 1
              },
              articleUrl: {
                type: "string",
                id: 2
              },
              picUrl: {
                type: "string",
                id: 3
              }
            }
          },
          ArticleView: {
            fields: {
              articleCode: {
                type: "string",
                id: 1
              },
              articleUrl: {
                type: "string",
                id: 2
              },
              languages: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              orderIndex: {
                type: "uint32",
                id: 4
              },
              contentType: {
                type: "string",
                id: 5
              },
              articleTitle: {
                type: "string",
                id: 6
              },
              articleDescribe: {
                type: "string",
                id: 7
              },
              userLevel: {
                rule: "repeated",
                type: "uint32",
                id: 8
              },
              contentTag: {
                rule: "repeated",
                type: "CmsTag",
                id: 9
              },
              createName: {
                type: "string",
                id: 10
              },
              createTime: {
                type: "string",
                id: 11
              },
              actualBrowseNumber: {
                type: "uint32",
                id: 12
              },
              actualShareNumber: {
                type: "uint32",
                id: 13
              },
              browserBaseNumber: {
                type: "uint32",
                id: 14
              },
              shareBaseNumber: {
                type: "uint32",
                id: 15
              },
              articleStatus: {
                type: "common.enum.CmsEnum.ArticleStatusEnum",
                id: 16
              },
              createUserName: {
                type: "string",
                id: 17
              },
              createUserId: {
                type: "string",
                id: 18
              },
              sendUserName: {
                type: "string",
                id: 19
              },
              sendUserId: {
                type: "string",
                id: 20
              },
              sendTime: {
                type: "string",
                id: 21
              },
              videoCover: {
                type: "string",
                id: 22
              },
              videoUrl: {
                type: "string",
                id: 23
              },
              productIds: {
                rule: "repeated",
                type: "string",
                id: 24
              },
              shareTitle: {
                type: "string",
                id: 25
              },
              shareDescribe: {
                type: "string",
                id: 26
              },
              coverPic: {
                rule: "repeated",
                type: "string",
                id: 27
              },
              sharePic: {
                type: "string",
                id: 28
              },
              articleTopicName: {
                type: "string",
                id: 29
              },
              articleTopicId: {
                type: "string",
                id: 30
              },
              collectBaseNumber: {
                type: "string",
                id: 31
              },
              collectNum: {
                type: "string",
                id: 32
              }
            }
          },
          SearchArticleListBySortReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              specialColumnId: {
                type: "string",
                id: 2
              },
              specialSubjectId: {
                type: "string",
                id: 3
              },
              language: {
                type: "string",
                id: 4
              },
              articleTitle: {
                type: "string",
                id: 5
              },
              articleStatus: {
                type: "common.enum.CmsEnum.ArticleStatusEnum",
                id: 6
              },
              startTime: {
                type: "string",
                id: 7
              },
              endTime: {
                type: "string",
                id: 8
              },
              pageInfo: {
                type: "common.base.Pagination",
                id: 9
              },
              tags: {
                rule: "repeated",
                type: "string",
                id: 10
              },
              articleSortType: {
                type: "string",
                id: 11
              },
              articleTopicId: {
                type: "string",
                id: 12
              },
              sortType: {
                type: "string",
                id: 13
              }
            }
          },
          SearchArticleListBySortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pageInfo: {
                type: "common.base.Pagination",
                id: 2
              },
              articleViewList: {
                rule: "repeated",
                type: "ArticleView",
                id: 3
              },
              total: {
                type: "uint32",
                id: 4
              }
            }
          },
          EditArticleReq: {
            fields: {
              articleCode: {
                type: "string",
                id: 1
              },
              articleUrl: {
                type: "string",
                id: 2
              },
              userLevel: {
                rule: "repeated",
                type: "uint32",
                id: 3
              },
              contentTag: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              productIds: {
                rule: "repeated",
                type: "string",
                id: 5
              },
              browserBaseNumber: {
                type: "string",
                id: 6
              },
              shareBaseNumber: {
                type: "string",
                id: 7
              },
              articleLangInfos: {
                rule: "repeated",
                type: "ArticleLangInfo",
                id: 8
              },
              specialSubjectId: {
                type: "string",
                id: 9
              },
              roleCover: {
                type: "string",
                id: 13
              },
              roleName: {
                type: "string",
                id: 14
              },
              articleTopicId: {
                type: "string",
                id: 15
              },
              collectBaseNumber: {
                type: "string",
                id: 16
              }
            }
          },
          EditArticleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SendArticleReq: {
            fields: {
              articleCode: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          SendArticleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteArticleReq: {
            fields: {
              articleCode: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          DeleteArticleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WithdrawArticleReq: {
            fields: {
              articleCode: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          WithdrawArticleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CopyArticleToOtherReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              specialColumnId: {
                type: "string",
                id: 2
              },
              specialSubjectId: {
                type: "string",
                id: 3
              },
              articleCode: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          CopyArticleToOtherResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CopyArticleByArticleCodeReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              specialColumnId: {
                type: "string",
                id: 2
              },
              articleCode: {
                type: "string",
                id: 4
              }
            }
          },
          CopyArticleByArticleCodeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CopyBannerToOtherReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              specialColumnId: {
                type: "string",
                id: 2
              },
              bannerCode: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          CopyBannerToOtherResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SaveTagReq: {
            fields: {
              articleTag: {
                type: "ArticleTag",
                id: 1
              }
            }
          },
          ArticleTag: {
            fields: {
              tagId: {
                type: "string",
                id: 1
              },
              tagName: {
                rule: "repeated",
                type: "TagName",
                id: 2
              },
              createTime: {
                type: "string",
                id: 3
              }
            },
            nested: {
              TagName: {
                fields: {
                  language: {
                    type: "string",
                    id: 1
                  },
                  content: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          SaveTagResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DelTagReq: {
            fields: {
              tagId: {
                type: "string",
                id: 1
              }
            }
          },
          DelTagResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SearchTagListReq: {
            fields: {
              selectParam: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              pageInfo: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          SearchTagListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              articleTags: {
                rule: "repeated",
                type: "ArticleTag",
                id: 3
              }
            }
          },
          SortSpecialColumnReq: {
            fields: {
              specialColumnId: {
                type: "string",
                id: 1
              },
              orderIndex: {
                type: "uint32",
                id: 2
              }
            }
          },
          SortSpecialColumnResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CmsSpecialColumnService: {
            methods: {
              EditSpecialColumn: {
                requestType: "EditSpecialColumnReq",
                responseType: "EditSpecialColumnResp"
              },
              SearchSpecialColumnInfo: {
                requestType: "SearchSpecialColumnInfoReq",
                responseType: "SearchSpecialColumnInfoResp"
              },
              AddSpecialColumn: {
                requestType: "AddSpecialColumnReq",
                responseType: "AddSpecialColumnResp"
              },
              CopyArticleToOther: {
                requestType: "CopyArticleToOtherReq",
                responseType: "CopyArticleToOtherResp"
              },
              CopyArticleByArticleCode: {
                requestType: "CopyArticleByArticleCodeReq",
                responseType: "CopyArticleByArticleCodeResp"
              },
              CopyBannerToOther: {
                requestType: "CopyBannerToOtherReq",
                responseType: "CopyBannerToOtherResp"
              },
              SortSpecialColumn: {
                requestType: "SortSpecialColumnReq",
                responseType: "SortSpecialColumnResp"
              }
            }
          },
          CmsSpecialSubjectService: {
            methods: {
              AddSpecialSubject: {
                requestType: "AddSpecialSubjectReq",
                responseType: "AddSpecialSubjectResp"
              },
              EditSpecialSubject: {
                requestType: "EditSpecialSubjectReq",
                responseType: "EditSpecialSubjectResp"
              },
              SortSpecialSubject: {
                requestType: "SortSpecialSubjectReq",
                responseType: "SortSpecialSubjectResp"
              }
            }
          },
          CmsTagService: {
            methods: {
              SearchTag: {
                requestType: "CmsSearchTagRequest",
                responseType: "CmsSearchTagResponse"
              },
              SaveTag: {
                requestType: "SaveTagReq",
                responseType: "SaveTagResp"
              },
              DelTag: {
                requestType: "DelTagReq",
                responseType: "DelTagResp"
              },
              SearchTagList: {
                requestType: "SearchTagListReq",
                responseType: "SearchTagListResp"
              }
            }
          },
          EditArticleTagReq: {
            fields: {
              articleCode: {
                type: "string",
                id: 1
              },
              contentTag: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          EditArticleTagResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CmsArticleService: {
            methods: {
              AddArticle: {
                requestType: "AddArticleRequest",
                responseType: "AddArticleResponse"
              },
              ViewArticleDetail: {
                requestType: "ViewArticleDetailReq",
                responseType: "ViewArticleDetailResp"
              },
              SortArticle: {
                requestType: "SortArticleReq",
                responseType: "SortArticleResp"
              },
              BatchGetArticleByArticleCode: {
                requestType: "BatchGetArticleByArticleCodeReq",
                responseType: "BatchGetArticleByArticleCodeResp"
              },
              EditArticle: {
                requestType: "EditArticleReq",
                responseType: "EditArticleResp"
              },
              SendArticle: {
                requestType: "SendArticleReq",
                responseType: "SendArticleResp"
              },
              DeleteArticle: {
                requestType: "DeleteArticleReq",
                responseType: "DeleteArticleResp"
              },
              WithdrawArticle: {
                requestType: "WithdrawArticleReq",
                responseType: "WithdrawArticleResp"
              },
              SearchArticleListBySort: {
                requestType: "SearchArticleListBySortReq",
                responseType: "SearchArticleListBySortResp"
              },
              EditArticleTag: {
                requestType: "EditArticleTagReq",
                responseType: "EditArticleTagResp"
              }
            }
          },
          AddBannerReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              specialColumnId: {
                type: "string",
                id: 2
              },
              bannerName: {
                type: "string",
                id: 3
              },
              articleCode: {
                type: "string",
                id: 4
              },
              bannerBaseNumber: {
                type: "string",
                id: 5
              },
              bannerPicInfo: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 6
              }
            }
          },
          AddBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditBannerReq: {
            fields: {
              bannerCode: {
                type: "string",
                id: 1
              },
              bannerName: {
                type: "string",
                id: 2
              },
              articleCode: {
                type: "string",
                id: 3
              },
              bannerPicInfo: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              }
            }
          },
          EditBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteBannerByBannerCodeReq: {
            fields: {
              bannerCode: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteBannerByBannerCodeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PageSearchBannerReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              specialColumnId: {
                type: "string",
                id: 2
              },
              pageInfo: {
                type: "common.base.Pagination",
                id: 3
              }
            }
          },
          PageSearchBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              data: {
                rule: "repeated",
                type: "BannerInfo",
                id: 3
              }
            }
          },
          BannerInfo: {
            fields: {
              bannerCode: {
                type: "string",
                id: 1
              },
              bannerName: {
                type: "string",
                id: 2
              },
              bannerPicInfo: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              bannerBrowserNumber: {
                type: "string",
                id: 4
              },
              bannerBaseNumber: {
                type: "string",
                id: 5
              },
              articleCode: {
                type: "string",
                id: 6
              },
              articleUrl: {
                type: "string",
                id: 7
              },
              createTime: {
                type: "string",
                id: 8
              },
              startTime: {
                type: "string",
                id: 9
              },
              endTime: {
                type: "string",
                id: 10
              }
            }
          },
          GetBannerWatchedReq: {
            fields: {
              bannerCode: {
                type: "string",
                id: 1
              }
            }
          },
          GetBannerWatchedResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              bannerBrowserNumber: {
                type: "string",
                id: 2
              },
              bannerBaseNumber: {
                type: "string",
                id: 3
              }
            }
          },
          CopyBannerByBannerCodeReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              specialColumnId: {
                type: "string",
                id: 2
              },
              bannerCode: {
                type: "string",
                id: 3
              }
            }
          },
          CopyBannerByBannerCodeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BannerService: {
            methods: {
              SaveBanner: {
                requestType: "AddBannerReq",
                responseType: "AddBannerResp"
              },
              EditBanner: {
                requestType: "EditBannerReq",
                responseType: "EditBannerResp"
              },
              DeleteBannerByBannerCode: {
                requestType: "DeleteBannerByBannerCodeReq",
                responseType: "DeleteBannerByBannerCodeResp"
              },
              PageBanner: {
                requestType: "PageSearchBannerReq",
                responseType: "PageSearchBannerResp"
              },
              GetBannerWatched: {
                requestType: "GetBannerWatchedReq",
                responseType: "GetBannerWatchedResp"
              },
              CopyBannerByBannerCode: {
                requestType: "CopyBannerByBannerCodeReq",
                responseType: "CopyBannerByBannerCodeResp"
              }
            }
          },
          AddTopicReq: {
            fields: {
              specialColumnId: {
                type: "string",
                id: 1
              },
              topicCover: {
                type: "string",
                id: 2
              },
              topicName: {
                rule: "repeated",
                type: "TopicName",
                id: 3
              }
            }
          },
          TopicName: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              content: {
                type: "string",
                id: 2
              }
            }
          },
          AddTopicResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditTopicReq: {
            fields: {
              topicId: {
                type: "string",
                id: 1
              },
              topicCover: {
                type: "string",
                id: 2
              },
              topicName: {
                rule: "repeated",
                type: "TopicName",
                id: 3
              }
            }
          },
          EditTopicResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ArticleTopic: {
            fields: {
              topicId: {
                type: "string",
                id: 1
              },
              topicCover: {
                type: "string",
                id: 2
              },
              topicName: {
                rule: "repeated",
                type: "TopicName",
                id: 3
              }
            }
          },
          TopicService: {
            methods: {
              AddTopic: {
                requestType: "AddTopicReq",
                responseType: "AddTopicResp"
              },
              EditTopic: {
                requestType: "EditTopicReq",
                responseType: "EditTopicResp"
              }
            }
          },
          Role: {
            fields: {
              roleCover: {
                type: "string",
                id: 1
              },
              roleName: {
                type: "string",
                id: 2
              }
            }
          },
          AddRoleReq: {
            fields: {
              role: {
                type: "Role",
                id: 1
              }
            }
          },
          AddRoleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ShowRoleReq: {
            fields: {
              pageInfo: {
                type: "common.base.Pagination",
                id: 1
              }
            }
          },
          ShowRoleResp: {
            fields: {
              role: {
                rule: "repeated",
                type: "Role",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          CmsRoleService: {
            methods: {
              AddRole: {
                requestType: "AddRoleReq",
                responseType: "AddRoleResp"
              },
              ShowRole: {
                requestType: "ShowRoleReq",
                responseType: "ShowRoleResp"
              }
            }
          }
        }
      },
      collect: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.collect",
          java_outer_classname: "Collect"
        },
        nested: {
          CollectProductInfo: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              cover: {
                type: "string",
                id: 4
              },
              title: {
                type: "string",
                id: 5
              },
              createTime: {
                type: "string",
                id: 7
              }
            }
          },
          ListUserProductCollectReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              }
            }
          },
          ListUserProductCollectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              collectProductInfo: {
                rule: "repeated",
                type: "CollectProductInfo",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          CollectService: {
            methods: {
              ListUserProductCollect: {
                requestType: "ListUserProductCollectReq",
                responseType: "ListUserProductCollectResp"
              }
            }
          }
        }
      },
      coupon: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.coupon",
          java_outer_classname: "Coupon"
        },
        nested: {
          CouponReqPB: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              couponType: {
                type: "string",
                id: 2
              },
              couponScope: {
                type: "string",
                id: 3
              },
              scopeDetails: {
                type: "string",
                id: 4
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 5
              },
              categoryId: {
                rule: "repeated",
                type: "string",
                id: 6
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 7
              },
              amount: {
                type: "string",
                id: 9
              },
              discount: {
                type: "string",
                id: 10
              },
              fullAmt: {
                type: "string",
                id: 11
              },
              level: {
                type: "int32",
                id: 12
              },
              quantity: {
                type: "int32",
                id: 13
              },
              dailyLimit: {
                type: "int32",
                id: 14
              },
              personLimit: {
                type: "int32",
                id: 15
              },
              status: {
                type: "int32",
                id: 16
              },
              memberLevel: {
                rule: "repeated",
                type: "int32",
                id: 17
              },
              description: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 18
              },
              startTime: {
                type: "int64",
                id: 19
              },
              endTime: {
                type: "int64",
                id: 20
              },
              effectiveDays: {
                type: "int32",
                id: 21
              },
              countryCode: {
                type: "string",
                id: 22
              },
              allowPublicity: {
                type: "int32",
                id: 23
              },
              publicityStartTime: {
                type: "string",
                id: 24
              },
              publicityEndTime: {
                type: "string",
                id: 25
              },
              giftGivingPermitted: {
                type: "int32",
                id: 26
              }
            }
          },
          CouponTypeResultPB: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              desc: {
                type: "string",
                id: 2
              }
            }
          },
          CouponShareReqPB: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              couponId: {
                type: "string",
                id: 2
              },
              couponPackageId: {
                type: "string",
                id: 3
              },
              password: {
                type: "string",
                id: 4
              },
              clickCount: {
                type: "string",
                id: 5
              },
              status: {
                type: "int32",
                id: 6
              },
              isDelete: {
                type: "int32",
                id: 7
              }
            }
          },
          CouponPackageReqPB: {
            fields: {
              couponPackageId: {
                type: "string",
                id: 5
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 1
              },
              couponId: {
                type: "string",
                id: 2
              },
              couponCount: {
                type: "string",
                id: 3
              },
              description: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              countryCode: {
                type: "string",
                id: 6
              }
            }
          },
          CouponQueryPB: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              couponId: {
                type: "string",
                id: 2
              },
              couponPackageId: {
                type: "string",
                id: 3
              },
              name: {
                type: "string",
                id: 4
              },
              status: {
                type: "int32",
                id: 5
              },
              startTime: {
                type: "int64",
                id: 6
              },
              endTime: {
                type: "int64",
                id: 7
              },
              useWays: {
                type: "string",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 9
              },
              giftGivingPermitted: {
                type: "int32",
                id: 10
              },
              allowPublicityOrAll: {
                type: "int32",
                id: 23
              }
            }
          },
          CouponDetailsDOPB: {
            fields: {
              couponId: {
                type: "string",
                id: 1
              },
              couponType: {
                type: "string",
                id: 2
              },
              couponScope: {
                type: "string",
                id: 3
              },
              scopeDetails: {
                type: "string",
                id: 4
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              amount: {
                type: "string",
                id: 6
              },
              discount: {
                type: "string",
                id: 7
              },
              rule: {
                type: "string",
                id: 8
              },
              quantity: {
                type: "int32",
                id: 9
              },
              description: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 10
              },
              startTime: {
                type: "int64",
                id: 11
              },
              endTime: {
                type: "int64",
                id: 12
              },
              dailyLimit: {
                type: "int32",
                id: 13
              },
              personLimit: {
                type: "int32",
                id: 14
              },
              effectiveDays: {
                type: "int32",
                id: 15
              },
              status: {
                type: "int32",
                id: 16
              },
              isDelete: {
                type: "int32",
                id: 17
              },
              createTime: {
                type: "int64",
                id: 18
              },
              updateTime: {
                type: "int64",
                id: 19
              },
              countryCode: {
                type: "string",
                id: 20
              },
              operationName: {
                type: "string",
                id: 21
              },
              allowPublicity: {
                type: "int32",
                id: 23
              },
              publicityStartTime: {
                type: "string",
                id: 24
              },
              publicityEndTime: {
                type: "string",
                id: 25
              },
              giftGivingPermitted: {
                type: "int32",
                id: 26
              }
            }
          },
          CouponPackageDOPB: {
            fields: {
              couponPackageId: {
                type: "string",
                id: 1
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              useWays: {
                type: "string",
                id: 3
              },
              couponId: {
                type: "string",
                id: 4
              },
              couponCount: {
                type: "string",
                id: 5
              },
              description: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 6
              },
              status: {
                type: "int32",
                id: 16
              },
              isDelete: {
                type: "int32",
                id: 17
              },
              createTime: {
                type: "int64",
                id: 18
              },
              updateTime: {
                type: "int64",
                id: 19
              },
              countryCode: {
                type: "string",
                id: 7
              }
            }
          },
          OldUserCouponReqPB: {
            fields: {
              couponId: {
                type: "string",
                id: 1
              },
              couponPackageId: {
                type: "string",
                id: 2
              },
              receivingChannel: {
                type: "string",
                id: 3
              },
              memberLevel: {
                type: "int32",
                id: 4
              },
              userId: {
                rule: "repeated",
                type: "string",
                id: 5
              },
              payStatus: {
                type: "int32",
                id: 6
              }
            }
          },
          CouponProductReqPB: {
            fields: {
              couponPackageId: {
                type: "string",
                id: 1
              },
              productSn: {
                type: "string",
                id: 2
              }
            }
          },
          CouponScopeDetails: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              }
            }
          },
          CouponQueryResultPB: {
            fields: {
              couponId: {
                type: "string",
                id: 1
              },
              secretId: {
                type: "string",
                id: 2
              },
              password: {
                type: "string",
                id: 3
              },
              clickCount: {
                type: "string",
                id: 4
              },
              memberLevel: {
                rule: "repeated",
                type: "int32",
                id: 5
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 6
              },
              nm: {
                type: "string",
                id: 23
              },
              couponType: {
                type: "string",
                id: 7
              },
              couponScope: {
                type: "string",
                id: 8
              },
              scopeDetails: {
                type: "string",
                id: 9
              },
              couponScopeDetails: {
                rule: "repeated",
                type: "CouponScopeDetails",
                id: 27
              },
              amount: {
                type: "string",
                id: 10
              },
              discount: {
                type: "string",
                id: 11
              },
              fullAmt: {
                type: "string",
                id: 12
              },
              rule: {
                type: "string",
                id: 13
              },
              quantity: {
                type: "int32",
                id: 14
              },
              status: {
                type: "int32",
                id: 15
              },
              startTime: {
                type: "int64",
                id: 16
              },
              endTime: {
                type: "int64",
                id: 17
              },
              dailyLimit: {
                type: "int32",
                id: 18
              },
              personLimit: {
                type: "int32",
                id: 19
              },
              effectiveDays: {
                type: "int32",
                id: 20
              },
              description: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 21
              },
              des: {
                type: "string",
                id: 22
              },
              createTime: {
                type: "int64",
                id: 24
              },
              updateTime: {
                type: "int64",
                id: 25
              },
              countryCode: {
                type: "string",
                id: 26
              },
              allowPublicity: {
                type: "int32",
                id: 28
              },
              publicityStartTime: {
                type: "string",
                id: 29
              },
              publicityEndTime: {
                type: "string",
                id: 30
              },
              giftGivingPermitted: {
                type: "int32",
                id: 31
              }
            }
          },
          CouponPackageQueryResultPB: {
            fields: {
              couponPackageDopb: {
                type: "CouponPackageDOPB",
                id: 1
              },
              clickCount: {
                type: "string",
                id: 2
              },
              couponQueryResultPb: {
                rule: "repeated",
                type: "CouponQueryResultPB",
                id: 3
              },
              password: {
                type: "string",
                id: 4
              },
              secretId: {
                type: "string",
                id: 5
              }
            }
          },
          CouponManageQueryPB: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              couponId: {
                type: "string",
                id: 2
              },
              couponPackageId: {
                type: "string",
                id: 3
              },
              orderNo: {
                type: "string",
                id: 4
              },
              userId: {
                type: "string",
                id: 5
              },
              couponUseStatus: {
                type: "int32",
                id: 6
              },
              useTime: {
                type: "int64",
                id: 7
              },
              currentTime: {
                type: "int64",
                id: 8
              },
              screeningEndTime: {
                type: "string",
                id: 9
              },
              couponName: {
                type: "string",
                id: 10
              },
              couponType: {
                type: "string",
                id: 11
              },
              createTime: {
                type: "int64",
                id: 12
              }
            }
          },
          CouponUserDOPB: {
            fields: {
              userCouponId: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              productSn: {
                type: "string",
                id: 3
              },
              orderId: {
                type: "string",
                id: 4
              },
              receivingChannel: {
                type: "string",
                id: 5
              },
              orderAmount: {
                type: "string",
                id: 6
              },
              couponId: {
                type: "string",
                id: 7
              },
              couponCode: {
                type: "string",
                id: 8
              },
              couponUseTime: {
                type: "int64",
                id: 9
              },
              couponUseStatus: {
                type: "int32",
                id: 10
              },
              startTime: {
                type: "int64",
                id: 11
              },
              endTime: {
                type: "int64",
                id: 12
              },
              createTime: {
                type: "int64",
                id: 13
              },
              updateTime: {
                type: "int64",
                id: 14
              },
              countryCode: {
                type: "string",
                id: 15
              },
              couponScope: {
                type: "string",
                id: 16
              }
            }
          },
          CouponUserRespPB: {
            fields: {
              couponUserDopb: {
                type: "CouponUserDOPB",
                id: 1
              },
              type: {
                type: "int32",
                id: 2
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              nm: {
                type: "string",
                id: 4
              },
              rule: {
                type: "string",
                id: 5
              },
              discount: {
                type: "string",
                id: 6
              },
              couponDesc: {
                type: "string",
                id: 7
              },
              amount: {
                type: "string",
                id: 8
              },
              fullAmt: {
                type: "string",
                id: 9
              },
              preferentialAmount: {
                type: "int32",
                id: 10
              },
              isCanWithDraw: {
                type: "int32",
                id: 11
              }
            }
          },
          CouponCountResultPB: {
            fields: {
              used: {
                type: "int32",
                id: 1
              },
              unUsed: {
                type: "int32",
                id: 2
              },
              expired: {
                type: "int32",
                id: 3
              },
              received: {
                type: "int32",
                id: 4
              },
              unclaimed: {
                type: "int32",
                id: 5
              }
            }
          },
          AddCouponReq: {
            fields: {
              record: {
                type: "CouponReqPB",
                id: 1
              }
            }
          },
          AddCouponResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          UpdateCouponReq: {
            fields: {
              couponId: {
                type: "string",
                id: 1
              },
              couponScope: {
                type: "string",
                id: 2
              },
              scopeDetails: {
                type: "string",
                id: 3
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              categoryId: {
                rule: "repeated",
                type: "string",
                id: 5
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 6
              },
              level: {
                type: "int32",
                id: 7
              },
              dailyLimit: {
                type: "int32",
                id: 8
              },
              personLimit: {
                type: "int32",
                id: 9
              },
              description: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 10
              },
              startTime: {
                type: "int64",
                id: 11
              },
              endTime: {
                type: "int64",
                id: 12
              },
              effectiveDays: {
                type: "int32",
                id: 13
              },
              allowPublicity: {
                type: "int32",
                id: 23
              },
              publicityStartTime: {
                type: "string",
                id: 24
              },
              publicityEndTime: {
                type: "string",
                id: 25
              },
              giftGivingPermitted: {
                type: "int32",
                id: 26
              }
            }
          },
          UpdateCouponResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          QueryCouponTypeReq: {
            fields: {}
          },
          QueryCouponTypeResp: {
            fields: {
              couponTypeResult: {
                rule: "repeated",
                type: "CouponTypeResultPB",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          AddCouponPasswordReq: {
            fields: {
              couponSharePb: {
                type: "CouponShareReqPB",
                id: 1
              }
            }
          },
          AddCouponPasswordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          AddCouponPackageReq: {
            fields: {
              couponPackageReqPb: {
                type: "CouponPackageReqPB",
                id: 1
              }
            }
          },
          AddCouponPackageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          ListByQueryCouponWithPageReq: {
            fields: {
              couponQueryPb: {
                type: "CouponQueryPB",
                id: 1
              }
            }
          },
          ListByQueryCouponWithPageResp: {
            fields: {
              couponDetailsDopb: {
                rule: "repeated",
                type: "CouponDetailsDOPB",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          ListByQueryCouponPackageWithPageReq: {
            fields: {
              couponQueryPb: {
                type: "CouponQueryPB",
                id: 1
              }
            }
          },
          ListByQueryCouponPackageWithPageResp: {
            fields: {
              couponPackageDopb: {
                rule: "repeated",
                type: "CouponPackageDOPB",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          AddOldUserCouponReq: {
            fields: {
              oldUserCouponReqPb: {
                type: "OldUserCouponReqPB",
                id: 1
              }
            }
          },
          AddOldUserCouponResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          QueryCouponDetailsReq: {
            fields: {
              couponDetailsId: {
                type: "string",
                id: 1
              },
              type: {
                type: "int32",
                id: 2
              }
            }
          },
          QueryCouponDetailsResp: {
            fields: {
              couponQueryResultPb: {
                type: "CouponQueryResultPB",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          QueryCouponPackageDetailsReq: {
            fields: {
              couponPackageId: {
                type: "string",
                id: 1
              },
              type: {
                type: "int32",
                id: 2
              }
            }
          },
          QueryCouponPackageDetailsResp: {
            fields: {
              couponPackageQueryResultPb: {
                type: "CouponPackageQueryResultPB",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          CountCouponDetailsReq: {
            fields: {
              couponDetailsId: {
                type: "string",
                id: 1
              }
            }
          },
          CountCouponDetailsResp: {
            fields: {
              couponCountResultPb: {
                type: "CouponCountResultPB",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          QueryUserCouponManageReq: {
            fields: {
              query: {
                type: "CouponManageQueryPB",
                id: 1
              }
            }
          },
          QueryUserCouponManageResp: {
            fields: {
              couponUserRespPb: {
                rule: "repeated",
                type: "CouponUserRespPB",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          CouponService: {
            methods: {
              AddCoupon: {
                requestType: "AddCouponReq",
                responseType: "AddCouponResp"
              },
              UpdateCoupon: {
                requestType: "UpdateCouponReq",
                responseType: "UpdateCouponResp"
              },
              QueryCouponType: {
                requestType: "QueryCouponTypeReq",
                responseType: "QueryCouponTypeResp"
              },
              AddCouponPassword: {
                requestType: "AddCouponPasswordReq",
                responseType: "AddCouponPasswordResp"
              },
              AddCouponPackage: {
                requestType: "AddCouponPackageReq",
                responseType: "AddCouponPackageResp"
              },
              ListByQueryCouponWithPage: {
                requestType: "ListByQueryCouponWithPageReq",
                responseType: "ListByQueryCouponWithPageResp"
              },
              ListByQueryCouponPackageWithPage: {
                requestType: "ListByQueryCouponPackageWithPageReq",
                responseType: "ListByQueryCouponPackageWithPageResp"
              },
              AddOldUserCoupon: {
                requestType: "AddOldUserCouponReq",
                responseType: "AddOldUserCouponResp"
              },
              QueryCouponDetails: {
                requestType: "QueryCouponDetailsReq",
                responseType: "QueryCouponDetailsResp"
              },
              QueryCouponPackageDetails: {
                requestType: "QueryCouponPackageDetailsReq",
                responseType: "QueryCouponPackageDetailsResp"
              },
              CountCouponDetails: {
                requestType: "CountCouponDetailsReq",
                responseType: "CountCouponDetailsResp"
              },
              QueryUserCouponManage: {
                requestType: "QueryUserCouponManageReq",
                responseType: "QueryUserCouponManageResp"
              }
            }
          },
          UploadCouponReq: {
            fields: {
              url: {
                type: "string",
                id: 1
              }
            }
          },
          UploadCouponResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CouponBossService: {
            methods: {
              UploadCoupon: {
                requestType: "UploadCouponReq",
                responseType: "UploadCouponResp"
              },
              ListByQueryCouponWhiteListWithPage: {
                requestType: "ListByQueryCouponWhiteListWithPageReq",
                responseType: "ListByQueryCouponWhiteListWithPageResp"
              },
              ListByQueryProductCouponWithPage: {
                requestType: "ListByQueryProductCouponWithPageReq",
                responseType: "ListByQueryProductCouponWithPageResp"
              },
              AddCouponWhiteList: {
                requestType: "AddCouponWhiteListReq",
                responseType: "AddCouponWhiteListResp"
              },
              AddProductCoupon: {
                requestType: "AddProductCouponReq",
                responseType: "AddProductCouponResp"
              },
              DeleteCouponWhiteList: {
                requestType: "DeleteCouponWhiteListReq",
                responseType: "DeleteCouponWhiteListResp"
              },
              DeleteProductCoupon: {
                requestType: "DeleteProductCouponReq",
                responseType: "DeleteProductCouponResp"
              },
              UpdateCouponWhiteList: {
                requestType: "UpdateCouponWhiteListReq",
                responseType: "UpdateCouponWhiteListResp"
              },
              UpdateProductCoupon: {
                requestType: "UpdateProductCouponReq",
                responseType: "UpdateProductCouponResp"
              },
              ListCouponByName: {
                requestType: "ListCouponByNameReq",
                responseType: "ListCouponByNameResp"
              },
              ListUserCouponOnPageBoss: {
                requestType: "ListUserCouponOnPageBossReq",
                responseType: "ListUserCouponOnPageBossResp"
              }
            }
          },
          CouponWhiteListResultPB: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              productCover: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              type: {
                type: "string",
                id: 5
              },
              couponId: {
                type: "string",
                id: 6
              },
              operationName: {
                type: "string",
                id: 7
              },
              updateTime: {
                type: "int64",
                id: 8
              },
              id: {
                type: "string",
                id: 9
              }
            }
          },
          ListByQueryCouponWhiteListWithPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              couponId: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              }
            }
          },
          ListByQueryCouponWhiteListWithPageResp: {
            fields: {
              couponWhiteListResultPb: {
                rule: "repeated",
                type: "CouponWhiteListResultPB",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          ProductCouponResultPB: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              productCover: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              couponPackageId: {
                type: "string",
                id: 5
              },
              operationName: {
                type: "string",
                id: 6
              },
              updateTime: {
                type: "int64",
                id: 7
              },
              id: {
                type: "string",
                id: 8
              }
            }
          },
          ListByQueryProductCouponWithPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              couponPackageId: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              }
            }
          },
          ListByQueryProductCouponWithPageResp: {
            fields: {
              productCouponResultPb: {
                rule: "repeated",
                type: "ProductCouponResultPB",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          AddProductCouponReq: {
            fields: {
              productSn: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              couponPackageId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          AddProductCouponResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          AddCouponWhiteListReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              couponId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              type: {
                type: "int32",
                id: 4
              }
            }
          },
          AddCouponWhiteListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteProductCouponReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          DeleteProductCouponResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteCouponWhiteListReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          DeleteCouponWhiteListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          UpdateCouponWhiteListReq: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              type: {
                type: "int32",
                id: 2
              },
              couponId: {
                type: "string",
                id: 3
              }
            }
          },
          UpdateCouponWhiteListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          UpdateProductCouponReq: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              couponPackageId: {
                type: "string",
                id: 2
              }
            }
          },
          UpdateProductCouponResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ListCouponByNameReq: {
            fields: {
              couponName: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              couponId: {
                type: "string",
                id: 3
              }
            }
          },
          CouponOnPagePB: {
            fields: {
              couponId: {
                type: "string",
                id: 1
              },
              encryptionCouponId: {
                type: "string",
                id: 2
              },
              couponName: {
                type: "string",
                id: 3
              }
            }
          },
          ListCouponByNameResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              couponOnPagePB: {
                rule: "repeated",
                type: "CouponOnPagePB",
                id: 2
              }
            }
          },
          ListUserCouponOnPageBossReq: {
            fields: {
              couponId: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          EachUserCouponDetailBoss: {
            fields: {
              parsedCouponId: {
                type: "string",
                id: 1
              },
              couponType: {
                type: "string",
                id: 2
              },
              couponName: {
                type: "string",
                id: 3
              },
              amount: {
                type: "string",
                id: 4
              },
              discount: {
                type: "string",
                id: 5
              },
              status: {
                type: "int32",
                id: 6
              },
              received: {
                type: "bool",
                id: 7
              },
              type: {
                type: "int32",
                id: 8
              },
              fullAmt: {
                type: "string",
                id: 9
              },
              copywriter: {
                type: "string",
                id: 10
              },
              couponId: {
                type: "string",
                id: 11
              }
            }
          },
          ListUserCouponOnPageBossResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              eachCouponboss: {
                rule: "repeated",
                type: "EachUserCouponDetailBoss",
                id: 2
              }
            }
          }
        }
      },
      csstaff: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.csstaff",
          java_outer_classname: "CsStaff"
        },
        nested: {
          BooleanResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              success: {
                type: "bool",
                id: 2
              }
            }
          },
          CsStaffAddOrUpdateReq: {
            fields: {
              csId: {
                type: "int32",
                id: 1
              },
              csMobile: {
                type: "string",
                id: 2
              },
              csName: {
                type: "string",
                id: 3
              },
              csCountryCode: {
                type: "string",
                id: 4
              },
              csLanguage: {
                type: "string",
                id: 5
              },
              isDelete: {
                type: "int32",
                id: 8
              }
            }
          },
          DeleteCsStaffReq: {
            fields: {
              csId: {
                type: "int32",
                id: 1
              }
            }
          },
          ListCsStaffByPageReq: {
            fields: {
              csId: {
                type: "int32",
                id: 1
              },
              operationName: {
                type: "string",
                id: 2
              },
              csName: {
                type: "string",
                id: 3
              },
              csCountryCode: {
                type: "string",
                id: 4
              },
              csLanguage: {
                type: "string",
                id: 5
              },
              createTimeStart: {
                type: "string",
                id: 6
              },
              createTimeEnd: {
                type: "string",
                id: 7
              },
              isDelete: {
                type: "int32",
                id: 10
              },
              page: {
                type: "common.base.Pagination",
                id: 11
              }
            }
          },
          CsStaffPb: {
            fields: {
              csId: {
                type: "int32",
                id: 1
              },
              csMobile: {
                type: "string",
                id: 2
              },
              csName: {
                type: "string",
                id: 3
              },
              csCountryCode: {
                type: "string",
                id: 4
              },
              csLanguageCode: {
                type: "string",
                id: 5
              },
              csLanguage: {
                type: "string",
                id: 6
              },
              isOnline: {
                type: "int32",
                id: 7
              },
              csStatus: {
                type: "int32",
                id: 8
              },
              isDelete: {
                type: "int32",
                id: 9
              },
              operationName: {
                type: "string",
                id: 10
              },
              createTime: {
                type: "string",
                id: 11
              },
              updateTime: {
                type: "string",
                id: 12
              }
            }
          },
          ListCsStaffByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              csStaffPb: {
                rule: "repeated",
                type: "CsStaffPb",
                id: 3
              }
            }
          },
          CsStaffBossService: {
            methods: {
              AddCsStaff: {
                requestType: "CsStaffAddOrUpdateReq",
                responseType: "BooleanResp"
              },
              ListCsStaffByPage: {
                requestType: "ListCsStaffByPageReq",
                responseType: "ListCsStaffByPageResp"
              },
              UpdateCsStaff: {
                requestType: "CsStaffAddOrUpdateReq",
                responseType: "BooleanResp"
              },
              DeleteCsStaff: {
                requestType: "DeleteCsStaffReq",
                responseType: "BooleanResp"
              }
            }
          }
        }
      },
      datacenter: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.datacenter",
          java_outer_classname: "DataCenter"
        },
        nested: {
          UserOrderTraceReportReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          UserOrderTraceReportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              allData: {
                rule: "repeated",
                type: "StatAllData",
                id: 2
              }
            },
            nested: {
              TimeDataInfo: {
                fields: {
                  timeRange: {
                    type: "string",
                    id: 1
                  },
                  startOrderTime: {
                    type: "string",
                    id: 2
                  },
                  endOrderTime: {
                    type: "string",
                    id: 3
                  },
                  num: {
                    type: "int32",
                    id: 4
                  }
                }
              },
              StatOrderNumInfo: {
                fields: {
                  orderStatus: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 1
                  },
                  timeData: {
                    rule: "repeated",
                    type: "TimeDataInfo",
                    id: 2
                  }
                }
              },
              StatAllData: {
                fields: {
                  deliveryWay: {
                    type: "common.enum.ProductEnum.DeliveryWay",
                    id: 2
                  },
                  statOrder: {
                    rule: "repeated",
                    type: "StatOrderNumInfo",
                    id: 3
                  }
                }
              }
            }
          },
          OrderTraceReportService: {
            methods: {
              UserOrderTraceReport: {
                requestType: "UserOrderTraceReportReq",
                responseType: "UserOrderTraceReportResp"
              }
            }
          }
        }
      },
      datahouse: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.datahouse",
          java_outer_classname: "RecommendProduct"
        },
        nested: {
          SimpleDataDisplayReq: {
            fields: {
              dataType: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          SimpleDataDisplayResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "SimpleData",
                id: 2
              }
            }
          },
          SimpleData: {
            fields: {
              dataType: {
                type: "string",
                id: 1
              },
              volume: {
                type: "string",
                id: 2
              },
              weeklyChange: {
                type: "double",
                id: 3
              },
              dailyChange: {
                type: "double",
                id: 4
              }
            }
          },
          OrderBrokenLineGraphReq: {
            fields: {
              dataType: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "int64",
                id: 2
              },
              endTime: {
                type: "int64",
                id: 3
              },
              dimension: {
                rule: "repeated",
                type: "DimensionType",
                id: 4
              }
            }
          },
          OrderBrokenLineGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              dataType: {
                type: "string",
                id: 2
              },
              dataPoint: {
                rule: "repeated",
                type: "Data",
                id: 3
              },
              startTime: {
                type: "int64",
                id: 4
              },
              endTime: {
                type: "int64",
                id: 5
              }
            }
          },
          Data: {
            fields: {
              volume: {
                type: "double",
                id: 1
              },
              dimensionTag: {
                type: "string",
                id: 2
              },
              date: {
                type: "string",
                id: 3
              }
            }
          },
          OrderProductTypeProportionReq: {
            fields: {
              startTime: {
                type: "int64",
                id: 1
              },
              endTime: {
                type: "int64",
                id: 2
              },
              dimension: {
                rule: "repeated",
                type: "DimensionType",
                id: 3
              }
            }
          },
          OrderProductTypeProportionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              proportion: {
                rule: "repeated",
                type: "TypeProportion",
                id: 2
              }
            }
          },
          TypeProportion: {
            fields: {
              productType: {
                type: "string",
                id: 1
              },
              percentage: {
                type: "double",
                id: 2
              },
              productValue: {
                type: "int64",
                id: 3
              }
            }
          },
          OrderFrequencyReq: {
            fields: {
              startTime: {
                type: "int64",
                id: 1
              },
              endTime: {
                type: "int64",
                id: 2
              },
              dimension: {
                rule: "repeated",
                type: "DimensionType",
                id: 3
              }
            }
          },
          OrderFrequencyResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "PurchaseFrequency",
                id: 2
              }
            }
          },
          PurchaseFrequency: {
            fields: {
              frequency: {
                type: "string",
                id: 1
              },
              volume: {
                type: "int64",
                id: 2
              }
            }
          },
          OrderAmountDistributionReq: {
            fields: {
              startTime: {
                type: "int64",
                id: 1
              },
              endTime: {
                type: "int64",
                id: 2
              },
              dimension: {
                rule: "repeated",
                type: "DimensionType",
                id: 3
              }
            }
          },
          OrderAmountDistributionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              percentages: {
                rule: "repeated",
                type: "AmountPercentage",
                id: 2
              }
            }
          },
          AmountPercentage: {
            fields: {
              amountPaid: {
                type: "string",
                id: 1
              },
              percentage: {
                type: "double",
                id: 2
              },
              amountValue: {
                type: "int64",
                id: 3
              }
            }
          },
          ProductGMVPercentGraphReq: {
            fields: {
              startTime: {
                type: "int64",
                id: 1
              },
              endTime: {
                type: "int64",
                id: 2
              },
              dimension: {
                rule: "repeated",
                type: "DimensionType",
                id: 3
              }
            }
          },
          ProductGMVPercentGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              proportion: {
                rule: "repeated",
                type: "TypeProportion",
                id: 2
              }
            }
          },
          SiteGMVPercentGraphReq: {
            fields: {
              startTime: {
                type: "int64",
                id: 1
              },
              endTime: {
                type: "int64",
                id: 2
              },
              dimension: {
                rule: "repeated",
                type: "DimensionType",
                id: 3
              }
            }
          },
          SiteGMVPercentGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              siteType: {
                rule: "repeated",
                type: "SiteType",
                id: 2
              }
            }
          },
          DimensionType: {
            fields: {
              dimensionCode: {
                type: "int32",
                id: 1
              },
              degree: {
                rule: "repeated",
                type: "int32",
                id: 2
              }
            }
          },
          SiteType: {
            fields: {
              siteName: {
                type: "string",
                id: 1
              },
              percent: {
                type: "double",
                id: 2
              },
              siteValue: {
                type: "int64",
                id: 3
              }
            }
          },
          OrderActivityProductDataReq: {
            fields: {
              startTime: {
                type: "int64",
                id: 1
              },
              endTime: {
                type: "int64",
                id: 2
              },
              activityId: {
                rule: "repeated",
                type: "int64",
                id: 3
              },
              dimension: {
                rule: "repeated",
                type: "DimensionType",
                id: 4
              }
            }
          },
          OrderActivityProductDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              totalNumber: {
                type: "int64",
                id: 2
              },
              totalGMV: {
                type: "int64",
                id: 3
              },
              product: {
                rule: "repeated",
                type: "ActivityProduct",
                id: 4
              }
            }
          },
          ActivityProduct: {
            fields: {
              spuId: {
                type: "int64",
                id: 1
              },
              productName: {
                type: "string",
                id: 2
              },
              salesNumber: {
                type: "int64",
                id: 3
              },
              changePP: {
                type: "double",
                id: 4
              }
            }
          },
          MemberIncreaseNumberReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              dataType: {
                rule: "repeated",
                type: "int32",
                id: 2
              }
            }
          },
          MemberIncreaseNumberResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "VolumeData",
                id: 2
              }
            }
          },
          VolumeData: {
            fields: {
              dataType: {
                type: "string",
                id: 1
              },
              volume: {
                type: "string",
                id: 2
              }
            }
          },
          MemberMiscellaneousDataReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              dataType: {
                rule: "repeated",
                type: "int32",
                id: 2
              }
            }
          },
          MemberMiscellaneousDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "VolumeData",
                id: 2
              }
            }
          },
          MemberBrokenLineGraphReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              dimension: {
                type: "int32",
                id: 3
              },
              dataType: {
                type: "int32",
                id: 4
              }
            }
          },
          MemberBrokenLineGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "PointData",
                id: 2
              }
            }
          },
          PointData: {
            fields: {
              dimensionTag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "double",
                id: 2
              },
              date: {
                type: "string",
                id: 3
              }
            }
          },
          MemberPsIncreaseRankingListReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          MemberPsIncreaseRankingListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              memberData: {
                rule: "repeated",
                type: "RankingMemberInfo",
                id: 2
              }
            }
          },
          RankingMemberInfo: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              userNickname: {
                type: "string",
                id: 2
              },
              volume: {
                type: "string",
                id: 3
              },
              changePP: {
                type: "double",
                id: 4
              }
            }
          },
          MemberPsIncreaseRiseRankingListReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          MemberPsIncreaseRiseRankingListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              memberData: {
                rule: "repeated",
                type: "RankingMemberInfo",
                id: 2
              }
            }
          },
          MemberPsIncreaseDropRankingListReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          MemberPsIncreaseDropRankingListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              memberData: {
                rule: "repeated",
                type: "RankingMemberInfo",
                id: 2
              }
            }
          },
          CoreIndicatorDataListReq: {
            fields: {
              dataType: {
                rule: "repeated",
                type: "int32",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              }
            }
          },
          CoreIndicatorDataListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              tableData: {
                rule: "repeated",
                type: "TableData",
                id: 2
              }
            }
          },
          TableData: {
            fields: {
              dataType: {
                type: "int32",
                id: 1
              },
              monthlyData: {
                type: "string",
                id: 2
              },
              progress: {
                type: "string",
                id: 3
              },
              periodData: {
                type: "string",
                id: 4
              },
              MoM: {
                type: "double",
                id: 5
              }
            }
          },
          CoreIndicatorPlatformGMVPieChartReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 3
              }
            }
          },
          CoreIndicatorPlatformGMVPieChartResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pieData: {
                rule: "repeated",
                type: "PieData",
                id: 2
              }
            }
          },
          PieData: {
            fields: {
              volume: {
                type: "double",
                id: 1
              },
              orderType: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              percentage: {
                type: "double",
                id: 4
              },
              percentStr: {
                type: "string",
                id: 5
              }
            }
          },
          CoreIndicatorNormalGMVPieChartReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              dataType: {
                type: "int32",
                id: 4
              }
            }
          },
          CoreIndicatorNormalGMVPieChartResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pieData: {
                rule: "repeated",
                type: "NormalPieData",
                id: 2
              }
            }
          },
          NormalPieData: {
            fields: {
              dataType: {
                type: "string",
                id: 1
              },
              volume: {
                type: "double",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              typeTwo: {
                type: "string",
                id: 4
              },
              quantity: {
                type: "int64",
                id: 5
              },
              pricePerItem: {
                type: "double",
                id: 6
              },
              percentage: {
                type: "double",
                id: 7
              },
              percentStr: {
                type: "string",
                id: 8
              },
              countryRatio: {
                type: "double",
                id: 9
              },
              countryRatioStr: {
                type: "string",
                id: 10
              }
            }
          },
          CoreIndicatorPSIncreaseMapReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          CoreIndicatorPSIncreaseMapResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              mapData: {
                rule: "repeated",
                type: "MapData",
                id: 2
              }
            }
          },
          MapData: {
            fields: {
              areaCode: {
                type: "string",
                id: 1
              },
              newPSNum: {
                type: "int64",
                id: 2
              },
              MoM: {
                type: "double",
                id: 3
              }
            }
          },
          StatisticsTodayCategoryReq: {
            fields: {
              flag: {
                type: "string",
                id: 1
              }
            }
          },
          StatisticsTodayCategoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              todayCategory: {
                rule: "repeated",
                type: "TodayCategory",
                id: 2
              }
            }
          },
          TodayCategory: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              data: {
                type: "string",
                id: 2
              }
            }
          },
          ShowCategorySaleDetailReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              }
            }
          },
          ShowCategorySaleDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              },
              total: {
                type: "string",
                id: 3
              },
              CategorySaleDetail: {
                rule: "repeated",
                type: "CategorySaleDetail",
                id: 4
              }
            }
          },
          CategorySaleDetail: {
            fields: {
              date: {
                type: "string",
                id: 1
              },
              catLevelOne: {
                type: "string",
                id: 2
              },
              catLevelTwo: {
                type: "string",
                id: 3
              },
              catLevelThree: {
                type: "string",
                id: 4
              },
              productId: {
                type: "string",
                id: 5
              },
              productName: {
                type: "string",
                id: 6
              },
              skuCode: {
                type: "string",
                id: 7
              },
              skuValue: {
                type: "string",
                id: 8
              },
              supplierId: {
                type: "string",
                id: 9
              },
              supplierName: {
                type: "string",
                id: 10
              },
              saleNum: {
                type: "string",
                id: 11
              },
              saleAmount: {
                type: "string",
                id: 12
              },
              PV: {
                type: "string",
                id: 13
              },
              UV: {
                type: "string",
                id: 14
              },
              UVDivPV: {
                type: "double",
                id: 15
              },
              grossMargin: {
                type: "double",
                id: 16
              },
              inStockCN: {
                type: "string",
                id: 17
              },
              inStockCNAmount: {
                type: "double",
                id: 18
              },
              inStockMY: {
                type: "string",
                id: 19
              },
              inStockMYAmount: {
                type: "double",
                id: 20
              },
              inStockTH: {
                type: "string",
                id: 21
              },
              inStockTHAmount: {
                type: "double",
                id: 22
              },
              productPic: {
                type: "string",
                id: 23
              }
            }
          },
          GetMovableUserDetailReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              }
            }
          },
          GetMovableUserDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              },
              total: {
                type: "string",
                id: 3
              },
              movablePinRateUser: {
                rule: "repeated",
                type: "MovablePinRateUser",
                id: 4
              }
            }
          },
          MovablePinRateUser: {
            fields: {
              catLevelOne: {
                type: "string",
                id: 1
              },
              catLevelTwo: {
                type: "string",
                id: 2
              },
              catLevelThree: {
                type: "string",
                id: 3
              },
              firstPayNum: {
                type: "string",
                id: 4
              },
              SH_Rate: {
                type: "string",
                id: 5
              },
              PS_Rate: {
                type: "string",
                id: 6
              },
              AM_Rate: {
                type: "string",
                id: 7
              },
              AT_Rate: {
                type: "string",
                id: 8
              },
              saleOrderPrice: {
                type: "string",
                id: 9
              },
              saleOrderNum: {
                type: "string",
                id: 10
              },
              repeatedBuyRate: {
                type: "string",
                id: 11
              },
              allPayUser: {
                type: "string",
                id: 12
              }
            }
          },
          GetCancelCategoryRateReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          GetCancelCategoryRateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              cancelCatRate: {
                rule: "repeated",
                type: "CancelCatRate",
                id: 2
              }
            }
          },
          CancelCatRate: {
            fields: {
              cateName: {
                type: "string",
                id: 1
              },
              cateRateValue: {
                type: "double",
                id: 2
              },
              cateValue: {
                type: "string",
                id: 3
              }
            }
          },
          GetReturnCategoryRateReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          GetReturnCategoryRateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              returnCatRate: {
                rule: "repeated",
                type: "ReturnCatRate",
                id: 2
              }
            }
          },
          ReturnCatRate: {
            fields: {
              cateName: {
                type: "string",
                id: 1
              },
              cateRateValue: {
                type: "double",
                id: 2
              },
              cateValue: {
                type: "string",
                id: 3
              }
            }
          },
          GetMovableCategoryDetailReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              }
            }
          },
          GetMovableCategoryDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "string",
                id: 2
              },
              movablePinRate: {
                rule: "repeated",
                type: "MovablePinRate",
                id: 3
              }
            }
          },
          MovablePinRate: {
            fields: {
              catLevelOne: {
                type: "string",
                id: 1
              },
              catLevelTwo: {
                type: "string",
                id: 2
              },
              catLevelThree: {
                type: "string",
                id: 3
              },
              saleNum: {
                type: "string",
                id: 4
              },
              saleAmount: {
                type: "string",
                id: 5
              },
              movableProductNum: {
                type: "string",
                id: 6
              },
              onSaleProductNum: {
                type: "string",
                id: 7
              },
              movableProductRate: {
                type: "string",
                id: 8
              }
            }
          },
          GetCateVisitDetailReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              }
            }
          },
          GetCateVisitDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "string",
                id: 2
              },
              cateVisitDetail: {
                rule: "repeated",
                type: "CateVisitDetail",
                id: 3
              }
            }
          },
          CateVisitDetail: {
            fields: {
              catLevelOne: {
                type: "string",
                id: 1
              },
              catLevelTwo: {
                type: "string",
                id: 2
              },
              catLevelThree: {
                type: "string",
                id: 3
              },
              pvCount: {
                type: "string",
                id: 4
              },
              orderNum: {
                type: "string",
                id: 5
              },
              visitBuyRate: {
                type: "string",
                id: 6
              }
            }
          },
          GetRepeatedBuyCateDetailReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              type: {
                type: "string",
                id: 3
              }
            }
          },
          GetRepeatedBuyCateDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              repeatedBuyProduct: {
                rule: "repeated",
                type: "RepeatedBuyProduct",
                id: 3
              }
            }
          },
          RepeatedBuyProduct: {
            fields: {
              dataType: {
                type: "string",
                id: 1
              },
              cateName: {
                type: "string",
                id: 2
              },
              cateValue: {
                type: "string",
                id: 3
              },
              cateRate: {
                type: "string",
                id: 4
              }
            }
          },
          GetAllCategoryDetailToExcelReq: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              }
            }
          },
          GetAllCategoryDetailToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          GetProductFunnelViewDataReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              cateId: {
                type: "string",
                id: 3
              },
              productType: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          GetProductFunnelViewDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productFunnelViewDatas: {
                rule: "repeated",
                type: "ProductFunnelViewData",
                id: 2
              }
            }
          },
          ProductFunnelViewData: {
            fields: {
              viewDataName: {
                type: "string",
                id: 1
              },
              viewDataCount: {
                type: "string",
                id: 2
              },
              viewDataRate: {
                type: "string",
                id: 3
              },
              viewDataConversion: {
                type: "string",
                id: 4
              },
              viewDataChain: {
                type: "string",
                id: 5
              },
              viewDataTypeCode: {
                type: "string",
                id: 6
              }
            }
          },
          GetProductFunnelViewTradeDataReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              cateId: {
                type: "string",
                id: 3
              },
              productType: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              dataType: {
                type: "string",
                id: 5
              }
            }
          },
          GetProductFunnelViewTradeDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              viewDataTrades: {
                rule: "repeated",
                type: "ViewDataTrade",
                id: 2
              }
            }
          },
          ViewDataTrade: {
            fields: {
              dateDay: {
                type: "string",
                id: 1
              },
              viewDataConversion: {
                type: "string",
                id: 2
              },
              viewDataChain: {
                type: "string",
                id: 3
              }
            }
          },
          GetProductViewDataDetailReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              queryType: {
                type: "string",
                id: 3
              },
              queryParam: {
                type: "string",
                id: 4
              },
              cateId: {
                type: "string",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              },
              orderByName: {
                type: "string",
                id: 7
              },
              orderByType: {
                type: "string",
                id: 8
              }
            }
          },
          GetProductViewDataDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              count: {
                type: "string",
                id: 2
              },
              productFunnelViewDataDetails: {
                rule: "repeated",
                type: "ProductFunnelViewDataDetail",
                id: 3
              }
            }
          },
          ProductFunnelViewDataDetail: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              cateOneName: {
                type: "string",
                id: 3
              },
              cateTwoName: {
                type: "string",
                id: 4
              },
              cateThreeName: {
                type: "string",
                id: 5
              },
              productView: {
                type: "string",
                id: 6
              },
              productClick: {
                type: "string",
                id: 7
              },
              orderCreateNum: {
                type: "string",
                id: 8
              },
              orderPayNum: {
                type: "string",
                id: 9
              },
              viewClickRate: {
                type: "string",
                id: 10
              },
              clickOrderRate: {
                type: "string",
                id: 11
              },
              orderPayRate: {
                type: "string",
                id: 12
              },
              viewPayRate: {
                type: "string",
                id: 13
              },
              onSaleStatus: {
                type: "string",
                id: 14
              },
              onSaleCount: {
                type: "string",
                id: 15
              }
            }
          },
          GetDataCenterTypeDataReq: {
            fields: {}
          },
          GetDataCenterTypeDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productInfo: {
                rule: "repeated",
                type: "DataCenterProductInfo",
                id: 2
              },
              orderName: {
                rule: "repeated",
                type: "DataCenterOrderName",
                id: 3
              },
              CoreInfo: {
                rule: "repeated",
                type: "DataCenterProductInfo",
                id: 4
              },
              dataHouseConfig: {
                rule: "repeated",
                type: "DataHouseConfig",
                id: 5
              }
            }
          },
          DataHouseConfig: {
            fields: {
              dataHousePageName: {
                type: "string",
                id: 1
              },
              dataHousePageCode: {
                type: "string",
                id: 2
              },
              dataHouseComponent: {
                rule: "repeated",
                type: "DataHouseComponent",
                id: 3
              }
            }
          },
          DataHouseComponent: {
            fields: {
              componentName: {
                type: "string",
                id: 1
              },
              componentCode: {
                type: "string",
                id: 2
              },
              dataHouseItemConfig: {
                rule: "repeated",
                type: "DataHouseComponentType",
                id: 3
              }
            }
          },
          DataHouseComponentType: {
            fields: {
              componentTypeName: {
                type: "string",
                id: 1
              },
              componentCode: {
                type: "string",
                id: 2
              },
              dataHouseItemConfig: {
                rule: "repeated",
                type: "DataHouseItemConfig",
                id: 3
              }
            }
          },
          DataHouseItemConfig: {
            fields: {
              itemCode: {
                type: "string",
                id: 1
              },
              itemName: {
                type: "string",
                id: 2
              }
            }
          },
          DataCenterProductInfo: {
            fields: {
              typename: {
                type: "string",
                id: 1
              },
              typeCode: {
                type: "string",
                id: 2
              }
            }
          },
          DataCenterOrderName: {
            fields: {
              typeName: {
                type: "string",
                id: 1
              },
              typeCode: {
                type: "string",
                id: 2
              }
            }
          },
          AddTargetDataReq: {
            fields: {
              targetCategoryName: {
                type: "string",
                id: 1
              },
              targetKey: {
                type: "string",
                id: 2
              },
              targetName: {
                type: "string",
                id: 3
              },
              targetDescription: {
                type: "string",
                id: 4
              },
              targetStatus: {
                type: "string",
                id: 5
              },
              targetCategoryId: {
                type: "string",
                id: 6
              }
            }
          },
          AddTargetDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetTargetPageByParamReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              targetName: {
                type: "string",
                id: 2
              },
              targetKey: {
                type: "string",
                id: 3
              }
            }
          },
          GetTargetPageByParamResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              targetPageViewList: {
                rule: "repeated",
                type: "TargetPageViewList",
                id: 2
              },
              total: {
                type: "string",
                id: 3
              }
            }
          },
          TargetPageViewList: {
            fields: {
              targetCategoryId: {
                type: "string",
                id: 1
              },
              targetCategoryName: {
                type: "string",
                id: 2
              },
              targetId: {
                type: "string",
                id: 3
              },
              targetKey: {
                type: "string",
                id: 4
              },
              targetName: {
                type: "string",
                id: 5
              },
              targetDescription: {
                type: "string",
                id: 6
              },
              targetStatus: {
                type: "string",
                id: 7
              },
              createTime: {
                type: "string",
                id: 8
              }
            }
          },
          EditTargetDataReq: {
            fields: {
              targetCategoryId: {
                type: "string",
                id: 1
              },
              targetCategoryName: {
                type: "string",
                id: 2
              },
              targetId: {
                type: "string",
                id: 3
              },
              targetKey: {
                type: "string",
                id: 4
              },
              targetName: {
                type: "string",
                id: 5
              },
              targetDescription: {
                type: "string",
                id: 6
              },
              targetStatus: {
                type: "string",
                id: 7
              }
            }
          },
          EditTargetDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteTargetDataReq: {
            fields: {
              targetId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteTargetDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AddTargetDataByExcelReq: {
            fields: {
              targetDataList: {
                type: "string",
                id: 1
              }
            }
          },
          AddTargetDataByExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetGroupImportantDataReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              groupType: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              page: {
                type: "common.base.Pagination",
                id: 5
              }
            }
          },
          GetGroupImportantDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupImportantDataInfo: {
                rule: "repeated",
                type: "GroupImportantDataInfo",
                id: 2
              },
              total: {
                type: "string",
                id: 3
              }
            }
          },
          GroupImportantDataInfo: {
            fields: {
              dateDay: {
                type: "string",
                id: 1
              },
              groupTotal: {
                type: "string",
                id: 2
              },
              groupTotalSuccess: {
                type: "string",
                id: 3
              },
              groupOrderTotal: {
                type: "string",
                id: 4
              },
              gmv: {
                type: "string",
                id: 5
              },
              groupOrderTotalHistory: {
                type: "string",
                id: 6
              },
              gmvTotal: {
                type: "string",
                id: 7
              },
              indexEntryNum: {
                type: "string",
                id: 8
              },
              psShopEntryNum: {
                type: "string",
                id: 9
              },
              accountEntryNum: {
                type: "string",
                id: 10
              }
            }
          },
          GetGroupProductDataReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              groupType: {
                type: "string",
                id: 4
              },
              page: {
                type: "common.base.Pagination",
                id: 5
              },
              orderType: {
                type: "string",
                id: 6
              },
              orderName: {
                type: "string",
                id: 7
              }
            }
          },
          GetGroupProductDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupProductDataInfo: {
                rule: "repeated",
                type: "GroupProductDataInfo",
                id: 2
              },
              total: {
                type: "string",
                id: 3
              }
            }
          },
          GroupProductDataInfo: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productPic: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              productView: {
                type: "string",
                id: 4
              },
              productClick: {
                type: "string",
                id: 5
              },
              viewClickRate: {
                type: "string",
                id: 6
              },
              groupTotal: {
                type: "string",
                id: 7
              },
              groupTotalSuccess: {
                type: "string",
                id: 8
              },
              groupMatch: {
                type: "string",
                id: 9
              },
              groupNotMatch: {
                type: "string",
                id: 10
              },
              groupOrderTotal: {
                type: "string",
                id: 11
              },
              orderAmount: {
                type: "string",
                id: 12
              }
            }
          },
          GetGroupBuyProductInfoReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              groupType: {
                type: "string",
                id: 4
              },
              page: {
                type: "common.base.Pagination",
                id: 5
              },
              orderType: {
                type: "string",
                id: 6
              },
              orderName: {
                type: "string",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              }
            }
          },
          GetGroupBuyProductInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupBuyProductInfo: {
                rule: "repeated",
                type: "GroupBuyProductInfo",
                id: 2
              },
              total: {
                type: "string",
                id: 3
              }
            }
          },
          GroupBuyProductInfo: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productPic: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              productViewPv: {
                type: "string",
                id: 4
              },
              productViewUv: {
                type: "string",
                id: 18
              },
              productClickPv: {
                type: "string",
                id: 5
              },
              productClickUv: {
                type: "string",
                id: 6
              },
              clickPerView: {
                type: "string",
                id: 17
              },
              createGroupPv: {
                type: "string",
                id: 7
              },
              createGroupUv: {
                type: "string",
                id: 8
              },
              joinGroupPv: {
                type: "string",
                id: 9
              },
              joinGroupUv: {
                type: "string",
                id: 10
              },
              specSelectPv: {
                type: "string",
                id: 11
              },
              specSelectUv: {
                type: "string",
                id: 12
              },
              joinPaidNum: {
                type: "string",
                id: 13
              },
              createPaidNum: {
                type: "string",
                id: 14
              },
              orderAmount: {
                type: "string",
                id: 15
              },
              orderNum: {
                type: "string",
                id: 16
              }
            }
          },
          GetGroupBuyProductInfoToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              groupType: {
                type: "string",
                id: 4
              },
              orderType: {
                type: "string",
                id: 6
              },
              orderName: {
                type: "string",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              }
            }
          },
          GetGroupBuyProductInfoToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          RealTimeCsStaffOnLineInfoReq: {
            fields: {}
          },
          RealTimeCsStaffOnLineInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              staffOnLineInfos: {
                rule: "repeated",
                type: "StaffOnLineInfo",
                id: 2
              }
            },
            nested: {
              StaffOnLineInfo: {
                fields: {
                  type: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    type: "string",
                    id: 2
                  },
                  staffNickName: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  }
                }
              }
            }
          },
          UserRealTimeOnLineInfoReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              }
            }
          },
          UserRealTimeOnLineInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              userRealTimeOnLineInfo: {
                rule: "repeated",
                type: "UserRealTimeOnLineInfo",
                id: 2
              }
            },
            nested: {
              UserRealTimeOnLineInfo: {
                fields: {
                  type: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          CsStaffPersonalDataReq: {
            fields: {
              staffId: {
                type: "string",
                id: 1
              }
            }
          },
          CsStaffPersonalDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              csStaffPersonalData: {
                rule: "repeated",
                type: "CsStaffPersonalData",
                id: 2
              }
            },
            nested: {
              CsStaffPersonalData: {
                fields: {
                  type: {
                    type: "string",
                    id: 1
                  },
                  value: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          CsStaffListReq: {
            fields: {
              selectParam: {
                type: "string",
                id: 1
              }
            }
          },
          CsStaffListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              csStaffInfo: {
                rule: "repeated",
                type: "CsStaffInfo",
                id: 2
              }
            },
            nested: {
              CsStaffInfo: {
                fields: {
                  staffId: {
                    type: "string",
                    id: 1
                  },
                  staffNickName: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          DayConsultationVolumeReq: {
            fields: {}
          },
          DayConsultationVolumeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              dayConsultationVolumeInfo: {
                rule: "repeated",
                type: "DayConsultationVolumeInfo",
                id: 2
              }
            },
            nested: {
              DayConsultationVolumeInfo: {
                fields: {
                  dateTime: {
                    type: "string",
                    id: 1
                  },
                  userReqNum: {
                    type: "uint32",
                    id: 2
                  },
                  transferLaborNum: {
                    type: "uint32",
                    id: 3
                  },
                  csPickUpNum: {
                    type: "uint32",
                    id: 4
                  },
                  abandonmentQuantity: {
                    type: "uint32",
                    id: 5
                  }
                }
              }
            }
          },
          UserActivityDataDisplayReq: {
            fields: {
              dataType: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          UserActivityDataDisplayResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "VolumeData",
                id: 2
              }
            }
          },
          UaBrokenLineGraphReq: {
            fields: {
              dataType: {
                type: "int32",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              dimension: {
                type: "int32",
                id: 4
              }
            }
          },
          UaBrokenLineGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "TwoDimensionPointData",
                id: 2
              }
            }
          },
          TwoDimensionPointData: {
            fields: {
              dimensionTag: {
                type: "string",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "PointVolume",
                id: 2
              }
            }
          },
          PointVolume: {
            fields: {
              volume: {
                type: "double",
                id: 1
              },
              date: {
                type: "string",
                id: 2
              }
            }
          },
          UaSourceProportionPieChartReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          UaSourceProportionPieChartResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "UaPieData",
                id: 2
              }
            }
          },
          UaPieData: {
            fields: {
              dataTag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "double",
                id: 2
              }
            }
          },
          UaSiteProportionPieChartReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          UaSiteProportionPieChartResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "UaPieData",
                id: 2
              }
            }
          },
          CustomerServiceUserOnLineDataReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              language: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              page: {
                type: "common.base.Pagination",
                id: 5
              }
            }
          },
          CustomerServiceUserOnLineDataResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              customerServiceUserOnLineDataList: {
                rule: "repeated",
                type: "CustomerServiceUserOnLineDataList",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          CustomerServiceUserOnLineDataList: {
            fields: {
              dateDay: {
                type: "string",
                id: 1
              },
              uv: {
                type: "string",
                id: 2
              },
              robotChat: {
                type: "string",
                id: 3
              },
              humanChat: {
                type: "string",
                id: 4
              },
              humanPick: {
                type: "string",
                id: 5
              },
              pickRate: {
                type: "string",
                id: 6
              },
              notPickUp: {
                type: "string",
                id: 7
              },
              notPickUpRate: {
                type: "string",
                id: 8
              },
              averageWaitTime: {
                type: "string",
                id: 9
              },
              totalChatTime: {
                type: "string",
                id: 10
              },
              averageChatTime: {
                type: "string",
                id: 11
              },
              commentTotal: {
                type: "string",
                id: 12
              },
              commentRate: {
                type: "string",
                id: 13
              },
              goodCommentTotal: {
                type: "string",
                id: 14
              },
              goodCommentRate: {
                type: "string",
                id: 15
              },
              badCommentTotal: {
                type: "string",
                id: 16
              },
              badCommentRate: {
                type: "string",
                id: 17
              }
            }
          },
          CustomerServiceEachDetailDataReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              customerServiceName: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          CustomerServiceEachDetailDataResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              customerServiceEachDetailDataList: {
                rule: "repeated",
                type: "CustomerServiceEachDetailDataList",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          CustomerServiceEachDetailDataList: {
            fields: {
              dateDay: {
                type: "string",
                id: 1
              },
              customerServiceName: {
                type: "string",
                id: 2
              },
              loginTime: {
                type: "string",
                id: 3
              },
              logoutTime: {
                type: "string",
                id: 4
              },
              loginTimeTotal: {
                type: "string",
                id: 5
              },
              pickTotal: {
                type: "string",
                id: 6
              },
              onLineTotal: {
                type: "string",
                id: 7
              },
              busyTotl: {
                type: "string",
                id: 8
              },
              busyStatusTotal: {
                type: "string",
                id: 9
              },
              customerServiceRate: {
                type: "string",
                id: 10
              },
              firstPickUpTotal: {
                type: "string",
                id: 11
              },
              averagePickUpTotal: {
                type: "string",
                id: 12
              },
              chatTotal: {
                type: "string",
                id: 13
              },
              averageChatTotal: {
                type: "string",
                id: 14
              },
              commentTotal: {
                type: "string",
                id: 15
              },
              commentRate: {
                type: "string",
                id: 16
              },
              goodComment: {
                type: "string",
                id: 17
              },
              goodCommentRate: {
                type: "string",
                id: 18
              },
              badComment: {
                type: "string",
                id: 19
              },
              badCommentRate: {
                type: "string",
                id: 20
              }
            }
          },
          CustomerServiceChatDetailDataReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              customerServiceName: {
                type: "string",
                id: 4
              },
              chatTotal: {
                type: "string",
                id: 5
              },
              chatId: {
                type: "string",
                id: 6
              },
              userId: {
                type: "string",
                id: 7
              },
              comment: {
                type: "string",
                id: 8
              },
              language: {
                type: "string",
                id: 9
              },
              countryCode: {
                type: "string",
                id: 10
              },
              operationSystem: {
                type: "string",
                id: 11
              },
              chatSource: {
                type: "string",
                id: 12
              },
              customerServiceGroup: {
                type: "string",
                id: 13
              },
              commentTag: {
                type: "string",
                id: 14
              }
            }
          },
          CustomerServiceChatDetailDataResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              customerServiceChatDetailDataList: {
                rule: "repeated",
                type: "CustomerServiceChatDetailDataList",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          CustomerServiceChatDetailDataList: {
            fields: {
              chatId: {
                type: "string",
                id: 1
              },
              customerServiceGroup: {
                type: "string",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              },
              chatSource: {
                type: "string",
                id: 4
              },
              language: {
                type: "string",
                id: 5
              },
              version: {
                type: "string",
                id: 6
              },
              operationSystem: {
                type: "string",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              },
              waitTime: {
                type: "string",
                id: 9
              },
              chatStartTime: {
                type: "string",
                id: 10
              },
              charEndTime: {
                type: "string",
                id: 11
              },
              chatTime: {
                type: "string",
                id: 12
              },
              firstPickTime: {
                type: "string",
                id: 13
              },
              averagePicTime: {
                type: "string",
                id: 14
              },
              customerServiceName: {
                type: "string",
                id: 15
              },
              comment: {
                type: "string",
                id: 16
              },
              commentTag: {
                type: "string",
                id: 17
              }
            }
          },
          CustomerServiceUnPickDetailDataReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              userId: {
                type: "string",
                id: 4
              },
              language: {
                type: "string",
                id: 5
              },
              operationSystem: {
                type: "string",
                id: 6
              },
              countryCode: {
                type: "string",
                id: 7
              },
              waitTimeTotal: {
                type: "string",
                id: 8
              },
              chatSource: {
                type: "string",
                id: 9
              }
            }
          },
          CustomerServiceUnPickDetailDataResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              customerServiceUnPickDetailDataList: {
                rule: "repeated",
                type: "CustomerServiceUnPickDetailDataList",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          CustomerServiceUnPickDetailDataList: {
            fields: {
              waitStartTime: {
                type: "string",
                id: 1
              },
              waitEndTime: {
                type: "string",
                id: 2
              },
              waitTimeTotal: {
                type: "string",
                id: 3
              },
              chatSource: {
                type: "string",
                id: 4
              },
              language: {
                type: "string",
                id: 5
              },
              version: {
                type: "string",
                id: 6
              },
              operationSystem: {
                type: "string",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              },
              userId: {
                type: "string",
                id: 9
              }
            }
          },
          CustomerServiceAllDataDetailToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              reportName: {
                type: "string",
                id: 3
              },
              customerServiceName: {
                type: "string",
                id: 4
              },
              chatTotal: {
                type: "string",
                id: 5
              },
              chatId: {
                type: "string",
                id: 6
              },
              userId: {
                type: "string",
                id: 7
              },
              comment: {
                type: "string",
                id: 8
              },
              language: {
                type: "string",
                id: 9
              },
              countryCode: {
                type: "string",
                id: 10
              },
              operationSystem: {
                type: "string",
                id: 11
              },
              chatSource: {
                type: "string",
                id: 12
              },
              customerServiceGroup: {
                type: "string",
                id: 13
              },
              commentTag: {
                type: "string",
                id: 14
              },
              waitTimeTotal: {
                type: "string",
                id: 15
              }
            }
          },
          CustomerServiceAllDataDetailToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          CustomerChatDetailDataReq: {
            fields: {
              chatStartTime: {
                type: "string",
                id: 1
              },
              chatEndTime: {
                type: "string",
                id: 2
              },
              staffId: {
                type: "string",
                id: 3
              },
              userId: {
                type: "string",
                id: 4
              },
              chatRecordId: {
                type: "string",
                id: 5
              },
              chatTimeStart: {
                type: "uint32",
                id: 6
              },
              chatTimeEnd: {
                type: "uint32",
                id: 7
              },
              appLanguage: {
                type: "string",
                id: 8
              },
              userCountry: {
                type: "string",
                id: 9
              },
              customerGroup: {
                type: "string",
                id: 10
              },
              userEvaluation: {
                type: "string",
                id: 11
              },
              evaluationTag: {
                type: "string",
                id: 12
              },
              page: {
                type: "common.base.Pagination",
                id: 13
              }
            }
          },
          CustomerChatDetailDataResp: {
            fields: {
              total: {
                type: "int32",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              data: {
                rule: "repeated",
                type: "CustomerChatRecordInfo",
                id: 3
              }
            }
          },
          CustomerChatRecordInfo: {
            fields: {
              chatRecordId: {
                type: "string",
                id: 1
              },
              customerGroup: {
                type: "string",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              },
              appLanguage: {
                type: "string",
                id: 4
              },
              appVersion: {
                type: "string",
                id: 5
              },
              userCountry: {
                type: "string",
                id: 6
              },
              queueWaitTime: {
                type: "string",
                id: 7
              },
              chatStartTime: {
                type: "string",
                id: 8
              },
              chatEndTime: {
                type: "string",
                id: 9
              },
              firstResptTime: {
                type: "string",
                id: 10
              },
              averageResptTime: {
                type: "string",
                id: 11
              },
              evaluation: {
                type: "string",
                id: 12
              },
              evaluationTag: {
                type: "string",
                id: 13
              },
              csStaffName: {
                type: "string",
                id: 14
              }
            }
          },
          GetBuryingPointInfoReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              beginDate: {
                type: "string",
                id: 2
              },
              endDate: {
                type: "string",
                id: 3
              },
              pointEventKey: {
                type: "string",
                id: 4
              }
            }
          },
          GetBuryingPointInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pointInfos: {
                rule: "repeated",
                type: "BuryingPointInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          BuryingPointInfo: {
            fields: {
              pointEventName: {
                type: "string",
                id: 1
              },
              pointEventKey: {
                type: "string",
                id: 2
              },
              type: {
                type: "string",
                id: 3
              },
              num: {
                type: "string",
                id: 4
              },
              paramNum: {
                type: "uint32",
                id: 5
              }
            }
          },
          GetBuryingPointParamInfoReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              beginDate: {
                type: "string",
                id: 2
              },
              endDate: {
                type: "string",
                id: 3
              },
              pointEventKey: {
                type: "string",
                id: 4
              }
            }
          },
          GetBuryingPointParamInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pointParamInfos: {
                rule: "repeated",
                type: "BuryingPointParamInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          BuryingPointParamInfo: {
            fields: {
              paramName: {
                type: "string",
                id: 1
              },
              dataType: {
                type: "string",
                id: 2
              },
              num: {
                type: "string",
                id: 3
              }
            }
          },
          GetBuryingPointParamValueInfoReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              beginDate: {
                type: "string",
                id: 2
              },
              endDate: {
                type: "string",
                id: 3
              },
              pointEventKey: {
                type: "string",
                id: 4
              },
              paramName: {
                type: "string",
                id: 5
              }
            }
          },
          GetBuryingPointParamValueInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pointParamValueInfos: {
                rule: "repeated",
                type: "BuryingPointParamValueInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          BuryingPointParamValueInfo: {
            fields: {
              paramValue: {
                type: "string",
                id: 2
              },
              num: {
                type: "string",
                id: 3
              }
            }
          },
          AddUserGroupBySpeRep: {
            fields: {
              userGroupName: {
                type: "string",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              },
              userInput: {
                type: "string",
                id: 3
              }
            }
          },
          AddUserGroupBySpeResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          AddUserGroupByGroupReq: {
            fields: {
              userGroupName: {
                type: "string",
                id: 1
              },
              userGroupAnd: {
                type: "UserGroupAnd",
                id: 2
              }
            }
          },
          UserGroupAnd: {
            fields: {
              userGroupOr: {
                rule: "repeated",
                type: "UserGroupOr",
                id: 1
              }
            }
          },
          UserGroupOr: {
            fields: {
              condition: {
                rule: "repeated",
                type: "GroupingCondition",
                id: 1
              }
            }
          },
          GroupingCondition: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              operationSign: {
                type: "string",
                id: 2
              },
              value: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              },
              desc: {
                type: "string",
                id: 5
              },
              key: {
                type: "string",
                id: 6
              }
            }
          },
          AddUserGroupByGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetUserGroupInfoReq: {
            fields: {
              userGroupName: {
                type: "string",
                id: 1
              },
              userGroupType: {
                type: "string",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              userGroupId: {
                type: "string",
                id: 4
              }
            }
          },
          GetUserGroupInfoResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              userGroupInfo: {
                rule: "repeated",
                type: "UserGroupInfo",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          UserGroupInfo: {
            fields: {
              userGroupId: {
                type: "string",
                id: 1
              },
              userGroupName: {
                type: "string",
                id: 2
              },
              userGroupType: {
                type: "string",
                id: 3
              },
              number: {
                type: "string",
                id: 4
              },
              operationName: {
                type: "string",
                id: 5
              },
              editTime: {
                type: "string",
                id: 6
              }
            }
          },
          GetUserGroupDetailInfoReq: {
            fields: {
              userGroupId: {
                type: "string",
                id: 1
              },
              userGroupType: {
                type: "string",
                id: 2
              }
            }
          },
          GetUserGroupDetailInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              userGroupId: {
                type: "string",
                id: 2
              },
              userGroupType: {
                type: "string",
                id: 3
              },
              userId: {
                type: "string",
                id: 4
              },
              userGroupAnd: {
                type: "UserGroupAnd",
                id: 5
              }
            }
          },
          EditUserGroupInfoReq: {
            fields: {
              userGroupId: {
                type: "string",
                id: 1
              },
              userGroupType: {
                type: "string",
                id: 2
              },
              userGroupName: {
                type: "string",
                id: 3
              },
              userGroupAnd: {
                type: "UserGroupAnd",
                id: 4
              },
              url: {
                type: "string",
                id: 5
              },
              userInput: {
                type: "string",
                id: 6
              }
            }
          },
          EditUserGroupInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteUserGroupInfoReq: {
            fields: {
              userGroupId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteUserGroupInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetUserPropertyListReq: {
            fields: {
              propertyName: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          GetUserPropertyListResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              userPropertyList: {
                rule: "repeated",
                type: "UserPropertyList",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          UserPropertyList: {
            fields: {
              propertyName: {
                type: "string",
                id: 1
              },
              propertyType: {
                type: "string",
                id: 2
              },
              propertyDesc: {
                type: "string",
                id: 3
              },
              onLineTime: {
                type: "string",
                id: 4
              },
              propertyKey: {
                type: "string",
                id: 5
              }
            }
          },
          GetUserGroupIdToExcelReq: {
            fields: {
              userGroupId: {
                type: "string",
                id: 1
              }
            }
          },
          GetUserGroupIdToExcelResp: {
            fields: {
              url: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetUserGroupIdTotalReq: {
            fields: {
              userGroupId: {
                type: "string",
                id: 1
              }
            }
          },
          GetUserGroupIdTotalResp: {
            fields: {
              total: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetUserIdsExcelOnEditPageReq: {
            fields: {
              userGroupAnd: {
                type: "UserGroupAnd",
                id: 1
              }
            }
          },
          GetUserIdsExcelOnEditPageResp: {
            fields: {
              url: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetUserIdsCountOnEditPageReq: {
            fields: {
              userGroupAnd: {
                type: "UserGroupAnd",
                id: 1
              }
            }
          },
          GetUserIdsCountOnEditPageResp: {
            fields: {
              count: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          BigScreenGmvStatsReq: {
            fields: {}
          },
          BigScreenGmvStatsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderStats: {
                rule: "repeated",
                type: "OrderStats",
                id: 2
              },
              points: {
                rule: "repeated",
                type: "TradeDataPoint",
                id: 3
              }
            }
          },
          OrderStats: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              totalGmv: {
                type: "double",
                id: 3
              },
              totalOrderNum: {
                type: "string",
                id: 4
              },
              totalPricePerOrder: {
                type: "string",
                id: 5
              }
            }
          },
          TradeDataPoint: {
            fields: {
              time: {
                type: "string",
                id: 1
              },
              type: {
                type: "string",
                id: 2
              },
              gmv: {
                type: "int64",
                id: 3
              },
              change: {
                type: "string",
                id: 4
              }
            }
          },
          BigScreenDauStatsReq: {
            fields: {}
          },
          BigScreenDauStatsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              dauData: {
                rule: "repeated",
                type: "DauData",
                id: 2
              },
              updateTime: {
                type: "string",
                id: 3
              }
            }
          },
          DauData: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              volume: {
                type: "string",
                id: 2
              },
              change: {
                type: "string",
                id: 3
              }
            }
          },
          BigScreenConversionFunnelReq: {
            fields: {}
          },
          BigScreenConversionFunnelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              loginRate: {
                type: "double",
                id: 2
              },
              browseRate: {
                type: "double",
                id: 3
              },
              orderRate: {
                type: "double",
                id: 4
              },
              payRate: {
                type: "double",
                id: 5
              },
              completeRate: {
                type: "double",
                id: 6
              }
            }
          },
          BigScreenAcquisitionStatsReq: {
            fields: {}
          },
          BigScreenAcquisitionStatsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              stats: {
                rule: "repeated",
                type: "PromotionStats",
                id: 2
              }
            }
          },
          PromotionStats: {
            fields: {
              promotionName: {
                type: "string",
                id: 1
              },
              totalRegisterNum: {
                type: "string",
                id: 2
              },
              countryStats: {
                rule: "repeated",
                type: "PromotionCountryStats",
                id: 3
              }
            }
          },
          PromotionCountryStats: {
            fields: {
              promotionName: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              registerNum: {
                type: "int64",
                id: 3
              }
            }
          },
          BigScreenModuleStatsReq: {
            fields: {}
          },
          BigScreenModuleStatsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              moduleStats: {
                rule: "repeated",
                type: "ModuleStats",
                id: 2
              }
            }
          },
          ModuleStats: {
            fields: {
              moduleName: {
                type: "string",
                id: 1
              },
              gmv: {
                type: "string",
                id: 2
              },
              change: {
                type: "string",
                id: 3
              }
            }
          },
          BigScreenProductSaleReq: {
            fields: {}
          },
          BigScreenProductSaleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productStats: {
                rule: "repeated",
                type: "ProductStats",
                id: 2
              }
            }
          },
          ProductStats: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              cateOneName: {
                type: "string",
                id: 2
              },
              salesNum: {
                type: "string",
                id: 3
              },
              gmv: {
                type: "string",
                id: 4
              }
            }
          },
          BigScreenMemberStatsReq: {
            fields: {}
          },
          BigScreenMemberStatsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              memberStats: {
                rule: "repeated",
                type: "MemberStats",
                id: 2
              }
            }
          },
          MemberStats: {
            fields: {
              periodName: {
                type: "string",
                id: 1
              },
              registerNum: {
                type: "int64",
                id: 2
              },
              psNum: {
                type: "int64",
                id: 3
              }
            }
          },
          OverviewTodayWatchBoardReq: {
            fields: {}
          },
          OverviewTodayWatchBoardResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              boardData: {
                rule: "repeated",
                type: "OverviewBoardData",
                id: 2
              }
            }
          },
          OverviewBoardData: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              volume: {
                type: "string",
                id: 2
              },
              ratio: {
                type: "string",
                id: 3
              },
              todayTargetProgress: {
                type: "string",
                id: 4
              },
              monthlyTargetProgress: {
                type: "string",
                id: 5
              },
              updateTime: {
                type: "string",
                id: 6
              },
              change: {
                type: "string",
                id: 7
              }
            }
          },
          OverviewTodayTableReq: {
            fields: {}
          },
          OverviewTodayTableResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              tableData: {
                rule: "repeated",
                type: "OverviewTableData",
                id: 2
              }
            }
          },
          OverviewTableData: {
            fields: {
              title: {
                type: "string",
                id: 1
              },
              columnName: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              listData: {
                rule: "repeated",
                type: "OverviewListData",
                id: 3
              }
            }
          },
          OverviewListData: {
            fields: {
              rowName: {
                type: "string",
                id: 1
              },
              myData: {
                type: "string",
                id: 2
              },
              thData: {
                type: "string",
                id: 3
              },
              sgData: {
                type: "string",
                id: 4
              },
              totalData: {
                type: "string",
                id: 5
              }
            }
          },
          OverviewHourlyIncreaseReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              type: {
                type: "string",
                id: 2
              }
            }
          },
          OverviewHourlyIncreaseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              graphData: {
                rule: "repeated",
                type: "OverviewGraphData",
                id: 2
              }
            }
          },
          OverviewGraphData: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              pointData: {
                rule: "repeated",
                type: "OverviewPointData",
                id: 2
              }
            }
          },
          OverviewPointData: {
            fields: {
              tag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "int64",
                id: 2
              },
              change: {
                type: "string",
                id: 3
              }
            }
          },
          OverviewOrdinaryGoodsReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderBy: {
                type: "string",
                id: 3
              }
            }
          },
          OverviewOrdinaryGoodsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              rankData: {
                rule: "repeated",
                type: "OverviewRankData",
                id: 2
              }
            }
          },
          OverviewRankData: {
            fields: {
              title: {
                type: "string",
                id: 1
              },
              rowData: {
                rule: "repeated",
                type: "OverviewRankRowData",
                id: 2
              }
            }
          },
          OverviewRankRowData: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              soldNum: {
                type: "string",
                id: 3
              },
              paidGmv: {
                type: "string",
                id: 4
              }
            }
          },
          OverviewTrendGraphReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              }
            }
          },
          OverviewTrendGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              graph: {
                rule: "repeated",
                type: "OverviewTrendGraph",
                id: 2
              },
              chart: {
                rule: "repeated",
                type: "OverviewTrendPieChart",
                id: 3
              }
            }
          },
          OverviewTrendGraph: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              point: {
                rule: "repeated",
                type: "OverviewTrendPoint",
                id: 2
              },
              visible: {
                type: "bool",
                id: 3
              }
            }
          },
          OverviewTrendPoint: {
            fields: {
              tag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "int64",
                id: 2
              },
              progress: {
                type: "string",
                id: 3
              },
              change: {
                type: "string",
                id: 4
              }
            }
          },
          OverviewTrendPieChart: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              slice: {
                rule: "repeated",
                type: "OverviewTrendPieSlice",
                id: 2
              }
            }
          },
          OverviewTrendPieSlice: {
            fields: {
              tag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "int64",
                id: 2
              }
            }
          },
          OverviewYearlySalesReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          OverviewYearlySalesResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "OverviewYearlyData",
                id: 2
              }
            }
          },
          OverviewYearlyData: {
            fields: {
              rowData: {
                rule: "repeated",
                type: "OverviewParentRowData",
                id: 1
              },
              graphData: {
                rule: "repeated",
                type: "OverviewYearlyGraphData",
                id: 2
              }
            }
          },
          OverviewParentRowData: {
            fields: {
              rowName: {
                type: "string",
                id: 1
              },
              data1: {
                type: "string",
                id: 2
              },
              data2: {
                type: "string",
                id: 3
              },
              data3: {
                type: "string",
                id: 4
              },
              childRowData: {
                rule: "repeated",
                type: "OverviewChildRowData",
                id: 5
              }
            }
          },
          OverviewChildRowData: {
            fields: {
              rowName: {
                type: "string",
                id: 1
              },
              data1: {
                type: "string",
                id: 2
              },
              data2: {
                type: "string",
                id: 3
              },
              data3: {
                type: "string",
                id: 4
              }
            }
          },
          OverviewYearlyGraphData: {
            fields: {
              date: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              type: {
                type: "string",
                id: 2
              },
              point: {
                rule: "repeated",
                type: "OverviewYearlyPointData",
                id: 3
              }
            }
          },
          OverviewYearlyPointData: {
            fields: {
              value: {
                type: "int64",
                id: 1
              },
              change: {
                type: "string",
                id: 2
              }
            }
          },
          OverviewPlatformWideDataReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          OverviewPlatformWideDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "OverviewPlatformWideData",
                id: 2
              },
              num: {
                rule: "repeated",
                type: "OverviewMemberNumber",
                id: 3
              },
              totalUserNum: {
                type: "string",
                id: 4
              }
            }
          },
          OverviewPlatformWideData: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              volume: {
                type: "string",
                id: 2
              },
              ratio: {
                type: "string",
                id: 3
              }
            }
          },
          OverviewMemberNumber: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              number: {
                type: "int64",
                id: 2
              }
            }
          },
          OverviewLiveDataTableReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          OverviewLiveDataTableResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              tableData: {
                rule: "repeated",
                type: "OverviewLiveTableData",
                id: 2
              }
            }
          },
          OverviewLiveTableData: {
            fields: {
              title: {
                type: "string",
                id: 1
              },
              columnName: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              RowData: {
                rule: "repeated",
                type: "OverviewLiveRowData",
                id: 3
              }
            }
          },
          OverviewLiveRowData: {
            fields: {
              rowName: {
                type: "string",
                id: 1
              },
              giftData: {
                type: "string",
                id: 2
              },
              ordinaryData: {
                type: "string",
                id: 3
              },
              brandData: {
                type: "string",
                id: 4
              },
              topUpData: {
                type: "string",
                id: 5
              },
              totalData: {
                type: "string",
                id: 6
              }
            }
          },
          GetBackendLevelOneCategoryReq: {
            fields: {}
          },
          GetBackendLevelOneCategoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              categoryInfo: {
                type: "string",
                id: 2
              }
            }
          },
          OrdinaryProductAnalysisReq: {
            fields: {
              date: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              type: {
                type: "string",
                id: 3
              }
            }
          },
          OrdinaryProductAnalysisResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              boardData: {
                rule: "repeated",
                type: "ProductAnalysisBoardData",
                id: 2
              },
              soldNumRanking: {
                rule: "repeated",
                type: "ProductAnalysisRankingData",
                id: 3
              },
              gmvRanking: {
                rule: "repeated",
                type: "ProductAnalysisRankingData",
                id: 4
              }
            }
          },
          ProductAnalysisBoardData: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              gmv: {
                type: "string",
                id: 2
              },
              ratio: {
                type: "double",
                id: 3
              },
              change: {
                type: "string",
                id: 4
              }
            }
          },
          ProductAnalysisRankingData: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              productName: {
                type: "string",
                id: 2
              },
              cateOneName: {
                type: "string",
                id: 3
              },
              soldNum: {
                type: "string",
                id: 4
              },
              gmv: {
                type: "string",
                id: 5
              }
            }
          },
          ProductTrendAnalysisReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              graphType: {
                type: "string",
                id: 4
              },
              cateOneId: {
                type: "string",
                id: 5
              }
            }
          },
          ProductTrendAnalysisResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              graph: {
                rule: "repeated",
                type: "ProductAnalysisGraph",
                id: 2
              },
              chart: {
                rule: "repeated",
                type: "ProductAnalysisPieChart",
                id: 3
              }
            }
          },
          ProductAnalysisGraph: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              point: {
                rule: "repeated",
                type: "ProductAnalysisPoint",
                id: 2
              },
              visible: {
                type: "bool",
                id: 3
              }
            }
          },
          ProductAnalysisPoint: {
            fields: {
              tag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "double",
                id: 2
              },
              ratio: {
                type: "string",
                id: 3
              },
              change: {
                type: "string",
                id: 4
              }
            }
          },
          ProductAnalysisPieChart: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              slice: {
                rule: "repeated",
                type: "ProductAnalysisPieSlice",
                id: 2
              }
            }
          },
          ProductAnalysisPieSlice: {
            fields: {
              tag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "int64",
                id: 2
              }
            }
          },
          ProductSalesDetailReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              cateId: {
                type: "string",
                id: 4
              },
              cateLevel: {
                type: "string",
                id: 5
              },
              activityType: {
                type: "string",
                id: 6
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              },
              olderField: {
                type: "string",
                id: 8
              },
              order: {
                type: "string",
                id: 9
              }
            }
          },
          ProductSalesDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              detail: {
                rule: "repeated",
                type: "ProductAnalysisItemDetail",
                id: 2
              },
              total: {
                type: "string",
                id: 3
              },
              types: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          ProductAnalysisItemDetail: {
            fields: {
              activityType: {
                type: "string",
                id: 1
              },
              activityName: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              productName: {
                type: "string",
                id: 4
              },
              productPic: {
                type: "string",
                id: 5
              },
              cateOneName: {
                type: "string",
                id: 6
              },
              cateTwoName: {
                type: "string",
                id: 7
              },
              cateThreeName: {
                type: "string",
                id: 8
              },
              supplierName: {
                type: "string",
                id: 9
              },
              soldNum: {
                type: "string",
                id: 10
              },
              pnoAmt: {
                type: "string",
                id: 11
              },
              discount: {
                type: "string",
                id: 12
              },
              freight: {
                type: "string",
                id: 13
              },
              freightDiscount: {
                type: "string",
                id: 14
              },
              paidGmv: {
                type: "string",
                id: 15
              },
              productView: {
                type: "string",
                id: 16
              },
              productClick: {
                type: "string",
                id: 17
              },
              clickPerView: {
                type: "string",
                id: 18
              },
              orderNum: {
                type: "string",
                id: 19
              },
              orderPerClick: {
                type: "string",
                id: 20
              },
              orderPaidNum: {
                type: "string",
                id: 21
              },
              payPerOrder: {
                type: "string",
                id: 22
              },
              refundQty: {
                type: "string",
                id: 23
              },
              refundRate: {
                type: "string",
                id: 24
              },
              refundGmv: {
                type: "string",
                id: 25
              },
              income: {
                type: "string",
                id: 26
              }
            }
          },
          GetAllProductSalesDetailToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              cateId: {
                type: "string",
                id: 4
              },
              cateLevel: {
                type: "string",
                id: 5
              },
              activityType: {
                type: "string",
                id: 6
              },
              olderField: {
                type: "string",
                id: 7
              },
              order: {
                type: "string",
                id: 8
              }
            }
          },
          GetAllProductSalesDetailToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          PriceBrandAnalysisReq: {
            fields: {
              date: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              cateOneId: {
                type: "string",
                id: 3
              }
            }
          },
          PriceBrandAnalysisResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              info: {
                rule: "repeated",
                type: "ProductAnalysisPriceRangeInfo",
                id: 2
              }
            }
          },
          ProductAnalysisPriceRangeInfo: {
            fields: {
              cateOneName: {
                type: "string",
                id: 1
              },
              priceRange: {
                type: "string",
                id: 2
              },
              currency: {
                type: "string",
                id: 3
              },
              stockNum: {
                type: "string",
                id: 4
              },
              soldProductNum: {
                type: "string",
                id: 5
              },
              rollingSalesRate: {
                type: "string",
                id: 6
              },
              salesQty: {
                type: "string",
                id: 7
              },
              paidGmv: {
                type: "string",
                id: 8
              },
              soldProductCost: {
                type: "string",
                id: 9
              },
              netProfitMargin: {
                type: "string",
                id: 10
              }
            }
          },
          ProductAnalysisBroadcastReq: {
            fields: {}
          },
          ProductAnalysisBroadcastResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ErpTimelinessBoardData: {
            fields: {
              type: {
                type: "int32",
                id: 1
              },
              data: {
                type: "string",
                id: 2
              },
              change: {
                type: "string",
                id: 3
              },
              standard: {
                type: "string",
                id: 4
              }
            }
          },
          ErpTimelinessGraph: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              isVisible: {
                type: "bool",
                id: 2
              },
              points: {
                rule: "repeated",
                type: "ErpTimelinessPointData",
                id: 3
              }
            }
          },
          ErpTimelinessPointData: {
            fields: {
              tag: {
                type: "string",
                id: 1
              },
              volume: {
                type: "double",
                id: 2
              },
              onTargetNum: {
                type: "string",
                id: 3
              },
              paidOrderNum: {
                type: "string",
                id: 4
              }
            }
          },
          ErpSoCriticalIndicatorReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              standardType: {
                type: "int32",
                id: 4
              },
              countryName: {
                type: "string",
                id: 5
              },
              areaName: {
                type: "string",
                id: 6
              },
              warehouseName: {
                type: "string",
                id: 7
              }
            }
          },
          ErpSoCriticalIndicatorResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              board: {
                rule: "repeated",
                type: "ErpTimelinessBoardData",
                id: 2
              },
              graph: {
                rule: "repeated",
                type: "ErpTimelinessGraph",
                id: 3
              },
              totalOrderNum: {
                type: "int32",
                id: 4
              },
              areaNames: {
                rule: "repeated",
                type: "string",
                id: 5
              }
            }
          },
          ErpPoCriticalIndicatorReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              standardType: {
                type: "int32",
                id: 4
              },
              warehouseName: {
                type: "string",
                id: 5
              },
              tapType: {
                type: "string",
                id: 6
              }
            }
          },
          ErpPoCriticalIndicatorResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              board: {
                rule: "repeated",
                type: "ErpTimelinessBoardData",
                id: 2
              },
              graph: {
                rule: "repeated",
                type: "ErpTimelinessGraph",
                id: 3
              },
              totalOrderNum: {
                type: "int32",
                id: 4
              }
            }
          },
          ErpSoAbnormalDataGraphReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              countryName: {
                type: "string",
                id: 4
              },
              areaName: {
                type: "string",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              },
              warehouseName: {
                type: "string",
                id: 7
              },
              standardType: {
                type: "int32",
                id: 8
              }
            }
          },
          ErpSoAbnormalDataGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              graph: {
                rule: "repeated",
                type: "ErpTimelinessGraph",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "ErpTimelinessSoErrorList",
                id: 3
              },
              total: {
                type: "int32",
                id: 4
              }
            }
          },
          ErpSoAbnormalDetailToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              countryName: {
                type: "string",
                id: 4
              },
              areaName: {
                type: "string",
                id: 5
              },
              warehouseName: {
                type: "string",
                id: 6
              },
              standardType: {
                type: "int32",
                id: 7
              }
            }
          },
          ErpSoAbnormalDetailToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          ErpTimelinessSoErrorList: {
            fields: {
              date: {
                type: "string",
                id: 1
              },
              outErrorNum: {
                type: "string",
                id: 2
              },
              outErrorGmv: {
                type: "string",
                id: 3
              },
              overseaErrorNum: {
                type: "string",
                id: 4
              },
              overseaErrorGmv: {
                type: "string",
                id: 5
              },
              deliveryErrorNum: {
                type: "string",
                id: 6
              },
              deliveryErrorGmv: {
                type: "string",
                id: 7
              }
            }
          },
          ErpPoAbnormalDataGraphReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              warehouseName: {
                type: "string",
                id: 4
              },
              cateOneId: {
                type: "string",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              },
              standardType: {
                type: "int32",
                id: 7
              }
            }
          },
          ErpPoAbnormalDataGraphResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              graph: {
                rule: "repeated",
                type: "ErpTimelinessGraph",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "ErpTimelinessPoErrorList",
                id: 3
              },
              total: {
                type: "int32",
                id: 4
              }
            }
          },
          ErpTimelinessPoErrorList: {
            fields: {
              date: {
                type: "string",
                id: 1
              },
              purchaseOrderNo: {
                type: "string",
                id: 2
              },
              errorType: {
                type: "string",
                id: 3
              }
            }
          },
          ErpPoAbnormalDetailToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              warehouseName: {
                type: "string",
                id: 4
              },
              cateOneId: {
                type: "string",
                id: 5
              },
              standardType: {
                type: "int32",
                id: 6
              }
            }
          },
          ErpPoAbnormalDetailToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          ErpDeliveryTimelinessReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              countryName: {
                type: "string",
                id: 4
              },
              areaName: {
                type: "string",
                id: 5
              },
              logiCompany: {
                type: "string",
                id: 6
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              },
              warehouseName: {
                type: "string",
                id: 8
              },
              standardType: {
                type: "int32",
                id: 9
              }
            }
          },
          ErpDeliveryTimelinessResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              graph: {
                rule: "repeated",
                type: "ErpTimelinessGraph",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "ErpTimelinessDeliveryErrorList",
                id: 3
              },
              total: {
                type: "int32",
                id: 4
              },
              logiNames: {
                rule: "repeated",
                type: "string",
                id: 5
              }
            }
          },
          ErpTimelinessDeliveryErrorList: {
            fields: {
              date: {
                type: "string",
                id: 1
              },
              deliveryStartTime: {
                type: "string",
                id: 2
              },
              deliveryEndTime: {
                type: "string",
                id: 3
              },
              timeTaken: {
                type: "string",
                id: 4
              },
              outNo: {
                type: "string",
                id: 5
              }
            }
          },
          ErpDeliveryAbnormalOrderToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              orderType: {
                type: "int32",
                id: 3
              },
              countryName: {
                type: "string",
                id: 4
              },
              areaName: {
                type: "string",
                id: 5
              },
              logiCompany: {
                type: "string",
                id: 6
              },
              warehouseName: {
                type: "string",
                id: 7
              },
              standardType: {
                type: "int32",
                id: 8
              }
            }
          },
          ErpDeliveryAbnormalOrderToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          PoCompletionRateReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              cateOneId: {
                type: "string",
                id: 4
              },
              status: {
                type: "string",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              }
            }
          },
          PoCompletionRateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              graph: {
                rule: "repeated",
                type: "ErpPoCompletionGraph",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "ErpPoCompletionList",
                id: 3
              },
              totalNum: {
                type: "int32",
                id: 4
              }
            }
          },
          ErpPoCompletionGraph: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              point: {
                rule: "repeated",
                type: "ErpPoCompletionPoint",
                id: 2
              }
            }
          },
          ErpPoCompletionPoint: {
            fields: {
              tag: {
                type: "string",
                id: 1
              },
              completionRate: {
                type: "double",
                id: 2
              },
              purchaseTotalNum: {
                type: "string",
                id: 3
              },
              cancelNum: {
                type: "string",
                id: 4
              },
              yet2PurchaseData: {
                type: "string",
                id: 5
              },
              yet2ShipData: {
                type: "string",
                id: 6
              },
              yet2IncomeData: {
                type: "string",
                id: 7
              },
              errorData: {
                type: "string",
                id: 8
              }
            }
          },
          ErpPoCompletionList: {
            fields: {
              purchaseDate: {
                type: "string",
                id: 1
              },
              purchaseTotalNum: {
                type: "string",
                id: 2
              },
              cancelNum: {
                type: "string",
                id: 3
              },
              validNum: {
                type: "string",
                id: 4
              },
              yet2PurchaseData: {
                type: "string",
                id: 5
              },
              yet2ShipData: {
                type: "string",
                id: 6
              },
              yet2SignData: {
                type: "string",
                id: 7
              },
              yet2IncomeData: {
                type: "string",
                id: 8
              },
              errorData: {
                type: "string",
                id: 9
              },
              completeData: {
                type: "string",
                id: 10
              },
              state: {
                type: "string",
                id: 11
              }
            }
          },
          PoCompletionRateToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              cateOneId: {
                type: "string",
                id: 4
              },
              status: {
                type: "string",
                id: 5
              }
            }
          },
          PoCompletionRateToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          PoIncompleteOrderDetailReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              cateOneId: {
                type: "string",
                id: 4
              },
              state: {
                type: "int32",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              }
            }
          },
          PoIncompleteOrderDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              list: {
                rule: "repeated",
                type: "ErpPoIncompleteDataList",
                id: 2
              },
              totalNum: {
                type: "int32",
                id: 3
              }
            }
          },
          ErpPoIncompleteDataList: {
            fields: {
              purchaseOrderId: {
                type: "string",
                id: 1
              },
              purchaseNum: {
                type: "string",
                id: 2
              },
              shipNum: {
                type: "string",
                id: 3
              },
              incomeNum: {
                type: "string",
                id: 4
              }
            }
          },
          PoIncompleteOrderDetailToExcelReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              cateOneId: {
                type: "string",
                id: 4
              },
              state: {
                type: "int32",
                id: 5
              }
            }
          },
          PoIncompleteOrderDetailToExcelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              excelUrl: {
                type: "string",
                id: 2
              }
            }
          },
          CoreIndicatorBossService: {
            methods: {
              CoreIndicatorDataList: {
                requestType: "CoreIndicatorDataListReq",
                responseType: "CoreIndicatorDataListResp"
              },
              CoreIndicatorPlatformGMVPieChart: {
                requestType: "CoreIndicatorPlatformGMVPieChartReq",
                responseType: "CoreIndicatorPlatformGMVPieChartResp"
              },
              CoreIndicatorNormalGMVPieChart: {
                requestType: "CoreIndicatorNormalGMVPieChartReq",
                responseType: "CoreIndicatorNormalGMVPieChartResp"
              },
              CoreIndicatorPSIncreaseMap: {
                requestType: "CoreIndicatorPSIncreaseMapReq",
                responseType: "CoreIndicatorPSIncreaseMapResp"
              }
            }
          },
          MemberTeamBossService: {
            methods: {
              MemberIncreaseNumber: {
                requestType: "MemberIncreaseNumberReq",
                responseType: "MemberIncreaseNumberResp"
              },
              MemberMiscellaneousData: {
                requestType: "MemberMiscellaneousDataReq",
                responseType: "MemberMiscellaneousDataResp"
              },
              MemberBrokenLineGraph: {
                requestType: "MemberBrokenLineGraphReq",
                responseType: "MemberBrokenLineGraphResp"
              },
              MemberPsIncreaseRankingList: {
                requestType: "MemberPsIncreaseRankingListReq",
                responseType: "MemberPsIncreaseRankingListResp"
              },
              MemberPsIncreaseRiseRankingList: {
                requestType: "MemberPsIncreaseRiseRankingListReq",
                responseType: "MemberPsIncreaseRiseRankingListResp"
              },
              MemberPsIncreaseDropRankingList: {
                requestType: "MemberPsIncreaseDropRankingListReq",
                responseType: "MemberPsIncreaseDropRankingListResp"
              }
            }
          },
          OrderSalesBossService: {
            methods: {
              SimpleDataDisplay: {
                requestType: "SimpleDataDisplayReq",
                responseType: "SimpleDataDisplayResp"
              },
              OrderBrokenLineGraph: {
                requestType: "OrderBrokenLineGraphReq",
                responseType: "OrderBrokenLineGraphResp"
              },
              OrderProductTypeProportion: {
                requestType: "OrderProductTypeProportionReq",
                responseType: "OrderProductTypeProportionResp"
              },
              OrderFrequency: {
                requestType: "OrderFrequencyReq",
                responseType: "OrderFrequencyResp"
              },
              OrderAmountDistribution: {
                requestType: "OrderAmountDistributionReq",
                responseType: "OrderAmountDistributionResp"
              },
              ProductGMVPercentGraph: {
                requestType: "ProductGMVPercentGraphReq",
                responseType: "ProductGMVPercentGraphResp"
              },
              SiteGMVPercentGraph: {
                requestType: "SiteGMVPercentGraphReq",
                responseType: "SiteGMVPercentGraphResp"
              },
              OrderActivityProductData: {
                requestType: "OrderActivityProductDataReq",
                responseType: "OrderActivityProductDataResp"
              }
            }
          },
          StatisticsCategoryProductBossService: {
            methods: {
              StatisticsTodayCategory: {
                requestType: "StatisticsTodayCategoryReq",
                responseType: "StatisticsTodayCategoryResp"
              },
              ShowCategorySaleDetail: {
                requestType: "ShowCategorySaleDetailReq",
                responseType: "ShowCategorySaleDetailResp"
              },
              GetMovableUserDetail: {
                requestType: "GetMovableUserDetailReq",
                responseType: "GetMovableUserDetailResp"
              },
              GetCancelCategoryRate: {
                requestType: "GetCancelCategoryRateReq",
                responseType: "GetCancelCategoryRateResp"
              },
              GetReturnCategoryRate: {
                requestType: "GetReturnCategoryRateReq",
                responseType: "GetReturnCategoryRateResp"
              },
              GetMovableCategoryDetail: {
                requestType: "GetMovableCategoryDetailReq",
                responseType: "GetMovableCategoryDetailResp"
              },
              GetCateVisitDetail: {
                requestType: "GetCateVisitDetailReq",
                responseType: "GetCateVisitDetailResp"
              },
              GetRepeatedBuyCateDetail: {
                requestType: "GetRepeatedBuyCateDetailReq",
                responseType: "GetRepeatedBuyCateDetailResp"
              },
              GetAllCategoryDetailToExcel: {
                requestType: "GetAllCategoryDetailToExcelReq",
                responseType: "GetAllCategoryDetailToExcelResp"
              }
            }
          },
          DataCenterFunnelService: {
            methods: {
              GetProductFunnelViewData: {
                requestType: "GetProductFunnelViewDataReq",
                responseType: "GetProductFunnelViewDataResp"
              },
              GetProductFunnelViewTradeData: {
                requestType: "GetProductFunnelViewTradeDataReq",
                responseType: "GetProductFunnelViewTradeDataResp"
              },
              GetProductViewDataDetail: {
                requestType: "GetProductViewDataDetailReq",
                responseType: "GetProductViewDataDetailResp"
              }
            }
          },
          DataCenterTypeService: {
            methods: {
              GetDataCenterTypeData: {
                requestType: "GetDataCenterTypeDataReq",
                responseType: "GetDataCenterTypeDataResp"
              }
            }
          },
          DataHouseTargetService: {
            methods: {
              AddTargetData: {
                requestType: "AddTargetDataReq",
                responseType: "AddTargetDataResp"
              },
              GetTargetPageByParam: {
                requestType: "GetTargetPageByParamReq",
                responseType: "GetTargetPageByParamResp"
              },
              EditTargetData: {
                requestType: "EditTargetDataReq",
                responseType: "EditTargetDataResp"
              },
              DeleteTargetData: {
                requestType: "DeleteTargetDataReq",
                responseType: "DeleteTargetDataResp"
              },
              AddTargetDataByExcel: {
                requestType: "AddTargetDataByExcelReq",
                responseType: "AddTargetDataByExcelResp"
              }
            }
          },
          DataHouseGroupDataService: {
            methods: {
              GetGroupImportantData: {
                requestType: "GetGroupImportantDataReq",
                responseType: "GetGroupImportantDataResp"
              },
              GetGroupProductData: {
                requestType: "GetGroupProductDataReq",
                responseType: "GetGroupProductDataResp"
              },
              GetGroupBuyProductInfo: {
                requestType: "GetGroupBuyProductInfoReq",
                responseType: "GetGroupBuyProductInfoResp"
              }
            }
          },
          CustomerServiceDataService: {
            methods: {
              RealTimeCsStaffOnLineInfo: {
                requestType: "RealTimeCsStaffOnLineInfoReq",
                responseType: "RealTimeCsStaffOnLineInfoResp"
              },
              UserRealTimeOnLineInfo: {
                requestType: "UserRealTimeOnLineInfoReq",
                responseType: "UserRealTimeOnLineInfoResp"
              },
              CsStaffPersonalData: {
                requestType: "CsStaffPersonalDataReq",
                responseType: "CsStaffPersonalDataResp"
              },
              CsStaffList: {
                requestType: "CsStaffListReq",
                responseType: "CsStaffListResp"
              },
              DayConsultationVolume: {
                requestType: "DayConsultationVolumeReq",
                responseType: "DayConsultationVolumeResp"
              },
              CustomerServiceUserOnLineData: {
                requestType: "CustomerServiceUserOnLineDataReq",
                responseType: "CustomerServiceUserOnLineDataResp"
              },
              CustomerServiceEachDetailData: {
                requestType: "CustomerServiceEachDetailDataReq",
                responseType: "CustomerServiceEachDetailDataResp"
              },
              CustomerServiceChatDetailData: {
                requestType: "CustomerServiceChatDetailDataReq",
                responseType: "CustomerServiceChatDetailDataResp"
              },
              CustomerServiceUnPickDetailData: {
                requestType: "CustomerServiceUnPickDetailDataReq",
                responseType: "CustomerServiceUnPickDetailDataResp"
              },
              CustomerServiceAllDataDetailToExcel: {
                requestType: "CustomerServiceAllDataDetailToExcelReq",
                responseType: "CustomerServiceAllDataDetailToExcelResp"
              },
              CustomerChatDetailData: {
                requestType: "CustomerChatDetailDataReq",
                responseType: "CustomerChatDetailDataResp"
              }
            }
          },
          UserAcquisitionBossService: {
            methods: {
              UserActivityDataDisplay: {
                requestType: "UserActivityDataDisplayReq",
                responseType: "UserActivityDataDisplayResp"
              },
              UaBrokenLineGraph: {
                requestType: "UaBrokenLineGraphReq",
                responseType: "UaBrokenLineGraphResp"
              },
              UaSourceProportionPieChart: {
                requestType: "UaSourceProportionPieChartReq",
                responseType: "UaSourceProportionPieChartResp"
              },
              UaSiteProportionPieChart: {
                requestType: "UaSiteProportionPieChartReq",
                responseType: "UaSiteProportionPieChartResp"
              }
            }
          },
          BuryingPointSearchService: {
            methods: {
              GetBuryingPointInfo: {
                requestType: "GetBuryingPointInfoReq",
                responseType: "GetBuryingPointInfoResp"
              },
              GetBuryingPointParamInfo: {
                requestType: "GetBuryingPointParamInfoReq",
                responseType: "GetBuryingPointParamInfoResp"
              },
              GetBuryingPointParamValueInfo: {
                requestType: "GetBuryingPointParamValueInfoReq",
                responseType: "GetBuryingPointParamValueInfoResp"
              }
            }
          },
          PushTaskUserGroupService: {
            methods: {
              AddUserGroupBySpe: {
                requestType: "AddUserGroupBySpeRep",
                responseType: "AddUserGroupBySpeResp"
              },
              AddUserGroupByGroup: {
                requestType: "AddUserGroupByGroupReq",
                responseType: "AddUserGroupByGroupResp"
              },
              GetUserGroupInfo: {
                requestType: "GetUserGroupInfoReq",
                responseType: "GetUserGroupInfoResp"
              },
              GetUserGroupDetailInfo: {
                requestType: "GetUserGroupDetailInfoReq",
                responseType: "GetUserGroupDetailInfoResp"
              },
              EditUserGroupInfo: {
                requestType: "EditUserGroupInfoReq",
                responseType: "EditUserGroupInfoResp"
              },
              DeleteUserGroupInfo: {
                requestType: "DeleteUserGroupInfoReq",
                responseType: "DeleteUserGroupInfoResp"
              },
              GetUserPropertyList: {
                requestType: "GetUserPropertyListReq",
                responseType: "GetUserPropertyListResp"
              },
              GetUserGroupIdToExcel: {
                requestType: "GetUserGroupIdToExcelReq",
                responseType: "GetUserGroupIdToExcelResp"
              },
              GetUserGroupIdTotal: {
                requestType: "GetUserGroupIdTotalReq",
                responseType: "GetUserGroupIdTotalResp"
              },
              GetUserIdsExcelOnEditPage: {
                requestType: "GetUserIdsExcelOnEditPageReq",
                responseType: "GetUserIdsExcelOnEditPageResp"
              },
              GetUserIdsCountOnEditPage: {
                requestType: "GetUserIdsCountOnEditPageReq",
                responseType: "GetUserIdsCountOnEditPageResp"
              }
            }
          },
          BigScreenStatisticsService: {
            methods: {
              BigScreenGmvStats: {
                requestType: "BigScreenGmvStatsReq",
                responseType: "BigScreenGmvStatsResp"
              },
              BigScreenDauStats: {
                requestType: "BigScreenDauStatsReq",
                responseType: "BigScreenDauStatsResp"
              },
              BigScreenConversionFunnel: {
                requestType: "BigScreenConversionFunnelReq",
                responseType: "BigScreenConversionFunnelResp"
              },
              BigScreenAcquisitionStats: {
                requestType: "BigScreenAcquisitionStatsReq",
                responseType: "BigScreenAcquisitionStatsResp"
              },
              BigScreenModuleStats: {
                requestType: "BigScreenModuleStatsReq",
                responseType: "BigScreenModuleStatsResp"
              },
              BigScreenProductSale: {
                requestType: "BigScreenProductSaleReq",
                responseType: "BigScreenProductSaleResp"
              },
              BigScreenMemberStats: {
                requestType: "BigScreenMemberStatsReq",
                responseType: "BigScreenMemberStatsResp"
              }
            }
          },
          DataOverviewPageService: {
            methods: {
              OverviewTodayWatchBoard: {
                requestType: "OverviewTodayWatchBoardReq",
                responseType: "OverviewTodayWatchBoardResp"
              },
              OverviewTodayTable: {
                requestType: "OverviewTodayTableReq",
                responseType: "OverviewTodayTableResp"
              },
              OverviewHourlyIncrease: {
                requestType: "OverviewHourlyIncreaseReq",
                responseType: "OverviewHourlyIncreaseResp"
              },
              OverviewOrdinaryGoodsRank: {
                requestType: "OverviewOrdinaryGoodsReq",
                responseType: "OverviewOrdinaryGoodsResp"
              },
              OverviewTrendGraph: {
                requestType: "OverviewTrendGraphReq",
                responseType: "OverviewTrendGraphResp"
              },
              OverviewYearlySales: {
                requestType: "OverviewYearlySalesReq",
                responseType: "OverviewYearlySalesResp"
              },
              OverviewPlatformWideData: {
                requestType: "OverviewPlatformWideDataReq",
                responseType: "OverviewPlatformWideDataResp"
              },
              OverviewLiveDataTable: {
                requestType: "OverviewLiveDataTableReq",
                responseType: "OverviewLiveDataTableResp"
              }
            }
          },
          ProductAnalysisService: {
            methods: {
              GetBackendLevelOneCategory: {
                requestType: "GetBackendLevelOneCategoryReq",
                responseType: "GetBackendLevelOneCategoryResp"
              },
              OrdinaryProductAnalysis: {
                requestType: "OrdinaryProductAnalysisReq",
                responseType: "OrdinaryProductAnalysisResp"
              },
              ProductTrendAnalysis: {
                requestType: "ProductTrendAnalysisReq",
                responseType: "ProductTrendAnalysisResp"
              },
              ProductSalesDetail: {
                requestType: "ProductSalesDetailReq",
                responseType: "ProductSalesDetailResp"
              },
              PriceBrandAnalysis: {
                requestType: "PriceBrandAnalysisReq",
                responseType: "PriceBrandAnalysisResp"
              },
              ProductAnalysisBroadcast: {
                requestType: "ProductAnalysisBroadcastReq",
                responseType: "ProductAnalysisBroadcastResp"
              }
            }
          },
          ErpTimelinessService: {
            methods: {
              ErpSoCriticalIndicator: {
                requestType: "ErpSoCriticalIndicatorReq",
                responseType: "ErpSoCriticalIndicatorResp"
              },
              ErpPoCriticalIndicator: {
                requestType: "ErpPoCriticalIndicatorReq",
                responseType: "ErpPoCriticalIndicatorResp"
              },
              ErpSoAbnormalDataGraph: {
                requestType: "ErpSoAbnormalDataGraphReq",
                responseType: "ErpSoAbnormalDataGraphResp"
              },
              ErpPoAbnormalDataGraph: {
                requestType: "ErpPoAbnormalDataGraphReq",
                responseType: "ErpPoAbnormalDataGraphResp"
              },
              ErpDeliveryTimeliness: {
                requestType: "ErpDeliveryTimelinessReq",
                responseType: "ErpDeliveryTimelinessResp"
              }
            }
          },
          ErpPoCompletionRateService: {
            methods: {
              PoCompletionRate: {
                requestType: "PoCompletionRateReq",
                responseType: "PoCompletionRateResp"
              },
              PoIncompleteOrderDetail: {
                requestType: "PoIncompleteOrderDetailReq",
                responseType: "PoIncompleteOrderDetailResp"
              }
            }
          },
          RecommendProductListReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              cateId: {
                type: "string",
                id: 2
              },
              productTitle: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          RecommendProductListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              list: {
                rule: "repeated",
                type: "RecommendProductInfo",
                id: 2
              },
              totalNum: {
                type: "int32",
                id: 3
              }
            }
          },
          RecommendProductInfo: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              productTitle: {
                type: "string",
                id: 2
              },
              productCover: {
                type: "string",
                id: 3
              },
              manuaInterventionValue: {
                type: "uint32",
                id: 4
              },
              sortValue: {
                type: "string",
                id: 5
              },
              yesterdayData: {
                type: "RecommendProductData",
                id: 6
              },
              cumulativeData: {
                type: "RecommendProductData",
                id: 7
              },
              country: {
                type: "string",
                id: 8
              }
            }
          },
          RecommendProductData: {
            fields: {
              conversionRate: {
                type: "string",
                id: 1
              },
              clickRate: {
                type: "string",
                id: 2
              },
              exposureCount: {
                type: "string",
                id: 3
              },
              salesVolume: {
                type: "string",
                id: 4
              }
            }
          },
          UpdateManuaInterventionValueReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              country: {
                type: "string",
                id: 2
              },
              manuaInterventionValue: {
                type: "uint32",
                id: 3
              }
            }
          },
          UpdateManuaInterventionValueResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          RecommendProductBossService: {
            methods: {
              RecommendProductList: {
                requestType: "RecommendProductListReq",
                responseType: "RecommendProductListResp"
              },
              UpdateManuaInterventionValue: {
                requestType: "UpdateManuaInterventionValueReq",
                responseType: "UpdateManuaInterventionValueResp"
              }
            }
          }
        }
      },
      exchange: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.exchange",
          java_outer_classname: "Exchange"
        },
        nested: {
          ExchangeRate: {
            fields: {
              currencyCode: {
                type: "string",
                id: 1
              },
              rate: {
                type: "string",
                id: 2
              },
              baseCurrencyCode: {
                type: "string",
                id: 3
              },
              nameCn: {
                type: "string",
                id: 4
              },
              templateCode: {
                type: "string",
                id: 5
              },
              snapCode: {
                type: "string",
                id: 6
              }
            }
          },
          ExchangeSaveRateReq: {
            fields: {
              exchangeRate: {
                rule: "repeated",
                type: "ExchangeRate",
                id: 1
              }
            }
          },
          ExchangeSaveRateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ExchangeReviewReq: {
            fields: {
              exchangeRateSaveId: {
                type: "string",
                id: 1
              },
              reviewCode: {
                type: "uint32",
                id: 2
              }
            }
          },
          ExchangeReviewResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          RateHistoryUnit: {
            fields: {
              exchangeRateSaveId: {
                type: "string",
                id: 1
              },
              templateCode: {
                type: "string",
                id: 2
              },
              exchangeRate: {
                rule: "repeated",
                type: "ExchangeRate",
                id: 3
              },
              reviewState: {
                type: "uint32",
                id: 4
              },
              updateTime: {
                type: "string",
                id: 5
              },
              createTime: {
                type: "string",
                id: 6
              }
            }
          },
          ExchangeGetRateSaveHistoryReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              }
            }
          },
          ExchangeGetRateSaveHistoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              rateHistory: {
                rule: "repeated",
                type: "RateHistoryUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          ExchangeGetRecentRateTemplateReq: {
            fields: {
              templateCode: {
                type: "string",
                id: 1
              }
            }
          },
          ExchangeGetRecentRateTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              templateCode: {
                type: "string",
                id: 2
              },
              updateTime: {
                type: "string",
                id: 3
              },
              exchangeRate: {
                rule: "repeated",
                type: "ExchangeRate",
                id: 4
              }
            }
          },
          ExchangeGetReadyConfigTemplateReq: {
            fields: {}
          },
          ExchangeGetReadyConfigTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              exchangeRate: {
                rule: "repeated",
                type: "ExchangeRate",
                id: 2
              }
            }
          },
          ExchangeGetRateReq: {
            fields: {
              fromCurrencyCode: {
                type: "string",
                id: 1
              },
              toCurrencyCode: {
                type: "string",
                id: 2
              },
              templateCode: {
                type: "string",
                id: 3
              }
            }
          },
          ExchangeGetRateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              rate: {
                type: "string",
                id: 2
              }
            }
          },
          ExchangeConvertReq: {
            fields: {
              fromCurrencyCode: {
                type: "string",
                id: 1
              },
              toCurrencyCode: {
                type: "string",
                id: 2
              },
              templateCode: {
                type: "string",
                id: 3
              },
              fromPrice: {
                type: "string",
                id: 4
              }
            }
          },
          ExchangeConvertResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fromCurrencyCode: {
                type: "string",
                id: 2
              },
              toCurrencyCode: {
                type: "string",
                id: 3
              },
              templateCode: {
                type: "string",
                id: 4
              },
              fromPrice: {
                type: "string",
                id: 5
              },
              toPrice: {
                type: "string",
                id: 6
              },
              rate: {
                type: "string",
                id: 7
              }
            }
          },
          ExchangeService: {
            methods: {
              ExchangeSaveRate: {
                requestType: "ExchangeSaveRateReq",
                responseType: "ExchangeSaveRateResp"
              },
              ExchangeReview: {
                requestType: "ExchangeReviewReq",
                responseType: "ExchangeReviewResp"
              },
              ExchangeGetRateSaveHistory: {
                requestType: "ExchangeGetRateSaveHistoryReq",
                responseType: "ExchangeGetRateSaveHistoryResp"
              },
              ExchangeGetRecentRateTemplate: {
                requestType: "ExchangeGetRecentRateTemplateReq",
                responseType: "ExchangeGetRecentRateTemplateResp"
              },
              ExchangeGetReadyConfigTemplate: {
                requestType: "ExchangeGetReadyConfigTemplateReq",
                responseType: "ExchangeGetReadyConfigTemplateResp"
              },
              ExchangeGetRate: {
                requestType: "ExchangeGetRateReq",
                responseType: "ExchangeGetRateResp"
              },
              ExchangeConvert: {
                requestType: "ExchangeConvertReq",
                responseType: "ExchangeConvertResp"
              }
            }
          }
        }
      },
      exportrecord: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.exportrecord",
          java_outer_classname: "ExportRecord"
        },
        nested: {
          BooleanResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              success: {
                type: "bool",
                id: 2
              }
            }
          },
          ExportResultResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              code: {
                type: "int32",
                id: 2
              }
            }
          },
          LongResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              long: {
                type: "int64",
                id: 2
              }
            }
          },
          ExportRecordAddOrUpdateReq: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              exportId: {
                type: "int64",
                id: 2
              },
              operationId: {
                type: "int64",
                id: 3
              },
              type: {
                type: "ExportTypeEnum",
                id: 4
              },
              status: {
                type: "ExportStatusEnum",
                id: 5
              },
              fileAddress: {
                type: "string",
                id: 6
              },
              param: {
                type: "string",
                id: 7
              },
              retry: {
                type: "int32",
                id: 8
              },
              failReason: {
                type: "string",
                id: 9
              }
            }
          },
          ListExportRecordByPageReq: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              exportId: {
                type: "int64",
                id: 2
              },
              type: {
                type: "ExportTypeEnum",
                id: 3
              },
              status: {
                type: "ExportStatusEnum",
                id: 4
              },
              createTimeStart: {
                type: "string",
                id: 6
              },
              createTimeEnd: {
                type: "string",
                id: 7
              },
              updateTimeStart: {
                type: "string",
                id: 8
              },
              updateTimeEnd: {
                type: "string",
                id: 9
              },
              page: {
                type: "common.base.Pagination",
                id: 11
              }
            }
          },
          ListExportRecordForFailReq: {
            fields: {
              status: {
                rule: "repeated",
                type: "ExportStatusEnum",
                id: 3
              }
            }
          },
          ExportRecordPb: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              exportId: {
                type: "int64",
                id: 2
              },
              operationName: {
                type: "string",
                id: 3
              },
              type: {
                type: "string",
                id: 4
              },
              status: {
                type: "ExportStatusEnum",
                id: 5
              },
              fileAddress: {
                type: "string",
                id: 6
              },
              param: {
                type: "string",
                id: 7
              },
              retry: {
                type: "int32",
                id: 8
              },
              failReason: {
                type: "string",
                id: 9
              },
              createTime: {
                type: "string",
                id: 10
              },
              updateTime: {
                type: "string",
                id: 11
              },
              isDelete: {
                type: "int32",
                id: 12
              }
            }
          },
          ExportTypeEnum: {
            values: {
              INVALID_TYPE: 0,
              CATEGORY: 1,
              PRODUCT_ANALYSIS: 2,
              GROUP_BUY: 3,
              STAFF_CHAT: 4,
              ERP_PO_ABNORMAL: 5,
              ERP_DELIVERY_ABNORMAL: 6,
              ERP_SO_ABNORMAL: 7,
              ERP_PO_COMPLETION_RATE: 8,
              ERP_PO_INCOMPLETE_ORDER: 9
            }
          },
          ExportStatusEnum: {
            values: {
              INVALID_STATUS: 0,
              PREPARE: 1,
              EXECUTING: 2,
              SUCCESS: 3,
              FAILED: 4
            }
          },
          ListExportRecordByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              exportRecordPb: {
                rule: "repeated",
                type: "ExportRecordPb",
                id: 3
              }
            }
          },
          CommonExportReq: {
            fields: {
              type: {
                type: "ExportTypeEnum",
                id: 1
              },
              param: {
                type: "string",
                id: 2
              },
              exportRecordId: {
                type: "int64",
                id: 3
              },
              operationId: {
                type: "int64",
                id: 4
              },
              filePath: {
                type: "string",
                id: 5
              }
            }
          },
          EmptyReq: {
            fields: {}
          },
          DeleteExportByIdReq: {
            fields: {
              exportId: {
                rule: "repeated",
                type: "int64",
                id: 1
              }
            }
          },
          ExportRecordBossService: {
            methods: {
              AddExportRecord: {
                requestType: "ExportRecordAddOrUpdateReq",
                responseType: "LongResp"
              },
              UpdateExportRecord: {
                requestType: "ExportRecordAddOrUpdateReq",
                responseType: "BooleanResp"
              },
              ListExportRecordByPage: {
                requestType: "ListExportRecordByPageReq",
                responseType: "ListExportRecordByPageResp"
              },
              ListExportRecordForFail: {
                requestType: "ListExportRecordForFailReq",
                responseType: "ListExportRecordByPageResp"
              },
              DeleteExportTask: {
                requestType: "DeleteExportByIdReq",
                responseType: "BooleanResp"
              }
            }
          },
          CommonExportBossService: {
            methods: {
              RouteAndExport: {
                requestType: "CommonExportReq",
                responseType: "ExportResultResp"
              },
              RetryPreAndExeExportTask: {
                requestType: "EmptyReq",
                responseType: "BooleanResp"
              }
            }
          }
        }
      },
      freight: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.freight",
          java_outer_classname: "Freight"
        },
        nested: {
          FreightTemplateUnit: {
            fields: {
              templateId: {
                type: "string",
                id: 1
              },
              templateName: {
                type: "string",
                id: 2
              },
              templateType: {
                type: "uint32",
                id: 3
              },
              firstAmount: {
                type: "string",
                id: 4
              },
              firstPrice: {
                type: "string",
                id: 5
              },
              continueAmount: {
                type: "string",
                id: 6
              },
              continuePrice: {
                type: "string",
                id: 7
              },
              status: {
                type: "uint32",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 9
              },
              createTime: {
                type: "string",
                id: 10
              },
              updateTime: {
                type: "string",
                id: 11
              },
              item: {
                rule: "repeated",
                type: "FreightTemplateItemUnit",
                id: 12
              }
            }
          },
          FreightTemplateItemUnit: {
            fields: {
              itemId: {
                type: "string",
                id: 1
              },
              templateId: {
                type: "string",
                id: 2
              },
              stateCode: {
                type: "string",
                id: 3
              },
              stateName: {
                type: "string",
                id: 4
              },
              itemType: {
                type: "uint32",
                id: 5
              },
              firstAmount: {
                type: "string",
                id: 6
              },
              firstPrice: {
                type: "string",
                id: 7
              },
              continueAmount: {
                type: "string",
                id: 8
              },
              continuePrice: {
                type: "string",
                id: 9
              },
              createTime: {
                type: "string",
                id: 10
              },
              updateTime: {
                type: "string",
                id: 11
              }
            }
          },
          FreightTemplateAddReq: {
            fields: {
              freightTemplate: {
                type: "FreightTemplateUnit",
                id: 1
              }
            }
          },
          FreightTemplateAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          FreightTemplateUpdateReq: {
            fields: {
              freightTemplate: {
                type: "FreightTemplateUnit",
                id: 1
              }
            }
          },
          FreightTemplateUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          FreightTemplateListPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          FreightTemplateListPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              freightTemplateUnit: {
                rule: "repeated",
                type: "FreightTemplateUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          FreightTemplateGetReq: {
            fields: {
              templateId: {
                type: "string",
                id: 1
              }
            }
          },
          FreightTemplateGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              freightTemplateUnit: {
                type: "FreightTemplateUnit",
                id: 2
              }
            }
          },
          FreightTemplateService: {
            methods: {
              FreightTemplateAdd: {
                requestType: "FreightTemplateAddReq",
                responseType: "FreightTemplateAddResp"
              },
              FreightTemplateUpdate: {
                requestType: "FreightTemplateUpdateReq",
                responseType: "FreightTemplateUpdateResp"
              },
              FreightTemplateListPage: {
                requestType: "FreightTemplateListPageReq",
                responseType: "FreightTemplateListPageResp"
              },
              FreightTemplateGet: {
                requestType: "FreightTemplateGetReq",
                responseType: "FreightTemplateGetResp"
              }
            }
          }
        }
      },
      girdle: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.girdle",
          java_outer_classname: "Girdle"
        },
        nested: {
          GirdleInfo: {
            fields: {
              girdleId: {
                type: "string",
                id: 1
              },
              title: {
                type: "string",
                id: 2
              },
              imgUrl: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              linkUrl: {
                type: "string",
                id: 4
              },
              buyType: {
                type: "common.enum.PromotionEnum.BuyTypeEnum",
                id: 5
              },
              timeType: {
                type: "common.enum.PromotionEnum.TimeTypeEnum",
                id: 6
              },
              startTime: {
                type: "int64",
                id: 7
              },
              endTime: {
                type: "int64",
                id: 8
              },
              sortNo: {
                type: "uint32",
                id: 9
              },
              countryCode: {
                type: "string",
                id: 10
              },
              type: {
                type: "int32",
                id: 11
              },
              clickNum: {
                type: "int32",
                id: 12
              },
              urlType: {
                type: "common.enum.PromotionEnum.PromotionAppUrlType",
                id: 13
              },
              createTime: {
                type: "int64",
                id: 14
              },
              activeCrowdType: {
                type: "common.enum.MarketingEnum.ActiveCrowdType",
                id: 15
              }
            }
          },
          GirdleSaveReq: {
            fields: {
              girdleInfo: {
                type: "GirdleInfo",
                id: 1
              }
            }
          },
          GirdleSaveResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          BatchDeleteGirdleReq: {
            fields: {
              girdleIds: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          BatchDeleteGirdleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteGirdleReq: {
            fields: {
              girdleId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteGirdleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ListGirdleReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              type: {
                type: "int32",
                id: 3
              }
            }
          },
          ListGirdleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              GirdleInfos: {
                rule: "repeated",
                type: "GirdleInfo",
                id: 3
              },
              total: {
                type: "uint32",
                id: 4
              }
            }
          },
          ChangeGirdleSortReq: {
            fields: {
              GirdleId: {
                type: "string",
                id: 1
              },
              sortNo: {
                type: "uint32",
                id: 2
              }
            }
          },
          ChangeGirdleSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          GirdleBossService: {
            methods: {
              SaveGirdle: {
                requestType: "GirdleSaveReq",
                responseType: "GirdleSaveResp"
              },
              BatchDeleteGirdle: {
                requestType: "BatchDeleteGirdleReq",
                responseType: "BatchDeleteGirdleResp"
              },
              DeleteGirdle: {
                requestType: "DeleteGirdleReq",
                responseType: "DeleteGirdleResp"
              },
              ListGirdle: {
                requestType: "ListGirdleReq",
                responseType: "ListGirdleResp"
              },
              ChangeGirdleSort: {
                requestType: "ChangeGirdleSortReq",
                responseType: "ChangeGirdleSortResp"
              }
            }
          }
        }
      },
      i18n: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.i18n",
          java_outer_classname: "I18n"
        },
        nested: {
          CountryInfo: {
            fields: {
              code: {
                type: "string",
                id: 1
              },
              shortCode: {
                type: "string",
                id: 2
              },
              nameCn: {
                type: "string",
                id: 3
              },
              nameEn: {
                type: "string",
                id: 4
              },
              nameLocal: {
                type: "string",
                id: 5
              },
              areaCode: {
                type: "string",
                id: 6
              },
              jetLag: {
                type: "string",
                id: 7
              },
              image: {
                type: "string",
                id: 8
              },
              languageInfo: {
                rule: "repeated",
                type: "LanguageInfo",
                id: 9
              },
              currencyCode: {
                type: "string",
                id: 10
              },
              currencyUnit: {
                type: "string",
                id: 11
              },
              timeZone: {
                type: "string",
                id: 12
              }
            }
          },
          LanguageInfo: {
            fields: {
              code: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              desc: {
                type: "string",
                id: 3
              }
            }
          },
          GetCountryListReq: {
            fields: {
              pageSize: {
                type: "int32",
                id: 1
              },
              pageNum: {
                type: "int32",
                id: 2
              }
            }
          },
          GetCountryListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              countryInfo: {
                rule: "repeated",
                type: "CountryInfo",
                id: 2
              }
            }
          },
          GetLanguageListReq: {
            fields: {}
          },
          GetLanguageListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              languageInfo: {
                rule: "repeated",
                type: "LanguageInfo",
                id: 9
              }
            }
          },
          ModuleAddReq: {
            fields: {
              moduleName: {
                type: "string",
                id: 1
              },
              platform: {
                type: "string",
                id: 2
              }
            }
          },
          ModuleAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ModuleUpdateReq: {
            fields: {
              moduleName: {
                type: "string",
                id: 1
              },
              moduleId: {
                type: "string",
                id: 2
              },
              platform: {
                type: "string",
                id: 3
              }
            }
          },
          ModuleUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ModulePageAddReq: {
            fields: {
              pageName: {
                type: "string",
                id: 1
              },
              moduleId: {
                type: "string",
                id: 2
              }
            }
          },
          ModulePageAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ModulePageUpdateReq: {
            fields: {
              pageName: {
                type: "string",
                id: 1
              },
              pageId: {
                type: "string",
                id: 2
              }
            }
          },
          ModulePageUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ModuleInfo: {
            fields: {
              moduleId: {
                type: "string",
                id: 1
              },
              moduleName: {
                type: "string",
                id: 2
              },
              pageSum: {
                type: "uint32",
                id: 3
              },
              variableItemSum: {
                type: "uint32",
                id: 4
              },
              createTime: {
                type: "string",
                id: 5
              },
              updateTime: {
                type: "string",
                id: 6
              },
              pageInfo: {
                rule: "repeated",
                type: "PageInfo",
                id: 7
              },
              platform: {
                type: "string",
                id: 8
              }
            }
          },
          PageInfo: {
            fields: {
              moduleId: {
                type: "string",
                id: 1
              },
              pageId: {
                type: "string",
                id: 2
              },
              pageName: {
                type: "string",
                id: 3
              },
              createTime: {
                type: "string",
                id: 4
              },
              updateTime: {
                type: "string",
                id: 5
              },
              variableItemCount: {
                type: "uint32",
                id: 6
              }
            }
          },
          GetModulePagesReq: {
            fields: {
              platform: {
                type: "string",
                id: 1
              }
            }
          },
          GetModulePagesResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              moduleInfo: {
                rule: "repeated",
                type: "ModuleInfo",
                id: 2
              }
            }
          },
          PageVariableAddReq: {
            fields: {
              pageId: {
                type: "string",
                id: 1
              },
              nameCn: {
                type: "string",
                id: 2
              },
              nameEn: {
                type: "string",
                id: 3
              },
              variableLength: {
                type: "uint32",
                id: 4
              },
              variableCode: {
                type: "string",
                id: 5
              },
              languageCode: {
                type: "string",
                id: 6
              },
              translation: {
                type: "string",
                id: 7
              },
              platform: {
                type: "string",
                id: 8
              }
            }
          },
          PageVariableAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PageVariableUpdateReq: {
            fields: {
              variableId: {
                type: "string",
                id: 1
              },
              pageId: {
                type: "string",
                id: 2
              },
              nameCn: {
                type: "string",
                id: 3
              },
              nameEn: {
                type: "string",
                id: 4
              },
              variableLength: {
                type: "uint32",
                id: 5
              },
              variableCode: {
                type: "string",
                id: 6
              },
              platform: {
                type: "string",
                id: 8
              }
            }
          },
          PageVariableUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          LanguageTranslationAddReq: {
            fields: {
              variableId: {
                type: "string",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              translation: {
                type: "string",
                id: 3
              },
              platform: {
                type: "string",
                id: 4
              }
            }
          },
          LanguageTranslationAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DisableTranslationReq: {
            fields: {
              variableRefId: {
                type: "string",
                id: 1
              },
              platform: {
                type: "string",
                id: 2
              }
            }
          },
          DisableTranslationResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ReEnableTranslationReq: {
            fields: {
              variableRefId: {
                type: "string",
                id: 1
              },
              platform: {
                type: "string",
                id: 2
              }
            }
          },
          ReEnableTranslationResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          VariableTranslationUnit: {
            fields: {
              variableId: {
                type: "string",
                id: 1
              },
              pageId: {
                type: "string",
                id: 2
              },
              variableCode: {
                type: "string",
                id: 3
              },
              nameCn: {
                type: "string",
                id: 4
              },
              nameEn: {
                type: "string",
                id: 5
              },
              variableLength: {
                type: "uint32",
                id: 6
              },
              translation: {
                type: "string",
                id: 7
              },
              languageCode: {
                type: "string",
                id: 8
              },
              createTime: {
                type: "string",
                id: 9
              },
              updateTime: {
                type: "string",
                id: 10
              },
              variableRefId: {
                type: "string",
                id: 11
              },
              moduleId: {
                type: "string",
                id: 12
              },
              moduleName: {
                type: "string",
                id: 13
              },
              pageName: {
                type: "string",
                id: 14
              },
              platform: {
                type: "string",
                id: 15
              }
            }
          },
          GetVariableListByLanguageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              pageId: {
                type: "string",
                id: 2
              },
              languageCode: {
                type: "string",
                id: 3
              },
              nameCnKey: {
                type: "string",
                id: 4
              },
              nameEnKey: {
                type: "string",
                id: 5
              },
              variableCodeKey: {
                type: "string",
                id: 6
              },
              translationKey: {
                type: "string",
                id: 7
              },
              sortField: {
                type: "string",
                id: 8
              },
              sortType: {
                type: "string",
                id: 9
              },
              platform: {
                type: "string",
                id: 10
              }
            }
          },
          GetVariableListByLanguageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              },
              variableTranslation: {
                rule: "repeated",
                type: "VariableTranslationUnit",
                id: 3
              },
              total: {
                type: "int32",
                id: 4
              }
            }
          },
          ImportVariableTranslationTemplateReq: {
            fields: {
              fileDownloadUrl: {
                type: "string",
                id: 1
              },
              isUpdateAll: {
                type: "bool",
                id: 3
              },
              platform: {
                type: "string",
                id: 4
              }
            }
          },
          ImportVariableTranslationTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetDisabledTranslationListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 3
              },
              platform: {
                type: "string",
                id: 4
              }
            }
          },
          GetDisabledTranslationListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              variableTranslation: {
                rule: "repeated",
                type: "VariableTranslationUnit",
                id: 2
              }
            }
          },
          OneKeyTranslationUnit: {
            fields: {
              fromLanguageCode: {
                type: "string",
                id: 1
              },
              toLanguageCode: {
                type: "string",
                id: 2
              },
              originContent: {
                type: "string",
                id: 3
              },
              translation: {
                type: "string",
                id: 4
              }
            }
          },
          GetOneKeyTranslationReq: {
            fields: {
              oneKeyTranslationUnit: {
                rule: "repeated",
                type: "OneKeyTranslationUnit",
                id: 1
              }
            }
          },
          GetOneKeyTranslationResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              oneKeyTranslationUnit: {
                rule: "repeated",
                type: "OneKeyTranslationUnit",
                id: 2
              }
            }
          },
          GetCountryDivisionReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          GetCountryDivisionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              area: {
                rule: "repeated",
                type: "AreaInfo",
                id: 2
              }
            },
            nested: {
              AreaInfo: {
                fields: {
                  areaName: {
                    type: "string",
                    id: 1
                  },
                  stateName: {
                    rule: "repeated",
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          GetAppCountryDivisionReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              stateName: {
                type: "string",
                id: 2
              }
            }
          },
          GetAppCountryDivisionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              stat: {
                rule: "repeated",
                type: "StateInfo",
                id: 2
              }
            },
            nested: {
              CityInfo: {
                fields: {
                  cityName: {
                    type: "string",
                    id: 1
                  },
                  cityCode: {
                    type: "string",
                    id: 2
                  },
                  postcode: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  }
                }
              },
              StateInfo: {
                fields: {
                  stateName: {
                    type: "string",
                    id: 1
                  },
                  stateCode: {
                    type: "string",
                    id: 2
                  },
                  city: {
                    rule: "repeated",
                    type: "CityInfo",
                    id: 3
                  }
                }
              }
            }
          },
          ExportVariableTranslationTemplateReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              platform: {
                type: "string",
                id: 2
              }
            }
          },
          ExportVariableTranslationTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          ExportSelectedVariableTranslationTemplateReq: {
            fields: {
              variableTranslation: {
                rule: "repeated",
                type: "VariableTranslationUnit",
                id: 1
              }
            }
          },
          ExportSelectedVariableTranslationTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          GetRemoteOneKeyTranslationReq: {
            fields: {
              oneKeyTranslationUnit: {
                rule: "repeated",
                type: "OneKeyTranslationUnit",
                id: 1
              }
            }
          },
          GetRemoteOneKeyTranslationResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              oneKeyTranslationUnit: {
                rule: "repeated",
                type: "OneKeyTranslationUnit",
                id: 2
              }
            }
          },
          I18nCountryLanguageService: {
            methods: {
              GetCountryList: {
                requestType: "GetCountryListReq",
                responseType: "GetCountryListResp"
              },
              GetLanguageList: {
                requestType: "GetLanguageListReq",
                responseType: "GetLanguageListResp"
              },
              GetCountryDivision: {
                requestType: "GetCountryDivisionReq",
                responseType: "GetCountryDivisionResp"
              },
              GetAppCountryDivision: {
                requestType: "GetAppCountryDivisionReq",
                responseType: "GetAppCountryDivisionResp"
              }
            }
          },
          I18nModulePageService: {
            methods: {
              ModuleAdd: {
                requestType: "ModuleAddReq",
                responseType: "ModuleAddResp"
              },
              ModuleUpdate: {
                requestType: "ModuleUpdateReq",
                responseType: "ModuleUpdateResp"
              },
              ModulePageAdd: {
                requestType: "ModulePageAddReq",
                responseType: "ModulePageAddResp"
              },
              ModulePageUpdate: {
                requestType: "ModulePageUpdateReq",
                responseType: "ModulePageUpdateResp"
              },
              GetModulePages: {
                requestType: "GetModulePagesReq",
                responseType: "GetModulePagesResp"
              },
              PageVariableAdd: {
                requestType: "PageVariableAddReq",
                responseType: "PageVariableAddResp"
              },
              PageVariableUpdate: {
                requestType: "PageVariableUpdateReq",
                responseType: "PageVariableUpdateResp"
              }
            }
          },
          I18nTranslationService: {
            methods: {
              LanguageTranslationAdd: {
                requestType: "LanguageTranslationAddReq",
                responseType: "LanguageTranslationAddResp"
              },
              DisableTranslation: {
                requestType: "DisableTranslationReq",
                responseType: "DisableTranslationResp"
              },
              ReEnableTranslation: {
                requestType: "ReEnableTranslationReq",
                responseType: "ReEnableTranslationResp"
              },
              GetVariableListByLanguage: {
                requestType: "GetVariableListByLanguageReq",
                responseType: "GetVariableListByLanguageResp"
              },
              ImportVariableTranslationTemplate: {
                requestType: "ImportVariableTranslationTemplateReq",
                responseType: "ImportVariableTranslationTemplateResp"
              },
              ExportVariableTranslationTemplate: {
                requestType: "ExportVariableTranslationTemplateReq",
                responseType: "ExportVariableTranslationTemplateResp"
              },
              ExportSelectedVariableTranslationTemplate: {
                requestType: "ExportSelectedVariableTranslationTemplateReq",
                responseType: "ExportSelectedVariableTranslationTemplateResp"
              },
              GetDisabledTranslationList: {
                requestType: "GetDisabledTranslationListReq",
                responseType: "GetDisabledTranslationListResp"
              },
              GetOneKeyTranslation: {
                requestType: "GetOneKeyTranslationReq",
                responseType: "GetOneKeyTranslationResp"
              },
              GetRemoteOneKeyTranslation: {
                requestType: "GetRemoteOneKeyTranslationReq",
                responseType: "GetRemoteOneKeyTranslationResp"
              }
            }
          },
          SetDetailPageReq: {
            fields: {
              config: {
                type: "string",
                id: 1
              }
            }
          },
          SetDetailPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          I18nConfigService: {
            methods: {
              SetDetailPage: {
                requestType: "SetDetailPageReq",
                responseType: "SetDetailPageResp"
              }
            }
          },
          TranslationUnit: {
            fields: {
              variableCode: {
                type: "string",
                id: 1
              },
              nameCn: {
                type: "string",
                id: 2
              },
              nameEn: {
                type: "string",
                id: 3
              },
              translation: {
                type: "string",
                id: 4
              }
            }
          },
          GetPlatformVariableListReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              platform: {
                type: "string",
                id: 3
              }
            }
          },
          GetPlatformVariableListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              variableTranslationMap: {
                keyType: "string",
                type: "TranslationUnit",
                id: 2
              },
              languageCode: {
                type: "string",
                id: 4
              },
              updateTime: {
                type: "uint64",
                id: 5
              }
            }
          },
          GetPlatformVariableUpdateFlagReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              lastUpdateTime: {
                type: "uint64",
                id: 2
              },
              platform: {
                type: "string",
                id: 3
              }
            }
          },
          GetPlatformVariableUpdateFlagResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              updateFlag: {
                type: "bool",
                id: 2
              }
            }
          },
          I18nPlatformService: {
            methods: {
              GetPlatformVariableList: {
                requestType: "GetPlatformVariableListReq",
                responseType: "GetPlatformVariableListResp"
              },
              GetPlatformVariableUpdateFlag: {
                requestType: "GetPlatformVariableUpdateFlagReq",
                responseType: "GetPlatformVariableUpdateFlagResp"
              }
            }
          }
        }
      },
      lazada: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.lazada",
          java_outer_classname: "Lazada"
        },
        nested: {
          ListProductReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              status: {
                type: "int32",
                id: 2
              },
              fingoProductId: {
                type: "string",
                id: 3
              },
              fingoSkuId: {
                type: "string",
                id: 4
              },
              fingoSkuCode: {
                type: "string",
                id: 5
              },
              fingoProductName: {
                type: "string",
                id: 6
              },
              fingoCateId: {
                type: "string",
                id: 7
              },
              lazadaCateId: {
                type: "string",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 9
              },
              publishSuccess: {
                type: "int32",
                id: 10
              },
              fingoStatus: {
                type: "int32",
                id: 11
              },
              lazadaStatus: {
                type: "int32",
                id: 12
              },
              createTime: {
                type: "string",
                id: 13
              },
              supplierId: {
                type: "string",
                id: 14
              }
            }
          },
          ListProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productInfo: {
                rule: "repeated",
                type: "ProductInfo",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            },
            nested: {
              ProductInfo: {
                fields: {
                  id: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  title: {
                    type: "string",
                    id: 3
                  },
                  spuCover: {
                    type: "string",
                    id: 4
                  },
                  fingoStatus: {
                    type: "int32",
                    id: 5
                  },
                  status: {
                    type: "int32",
                    id: 6
                  },
                  failReason: {
                    rule: "repeated",
                    type: "string",
                    id: 14
                  },
                  fingoCategory: {
                    type: "string",
                    id: 7
                  },
                  lazadaCategory: {
                    type: "string",
                    id: 8
                  },
                  saleCountry: {
                    type: "string",
                    id: 9
                  },
                  shopInfo: {
                    rule: "repeated",
                    type: "ShopInfo",
                    id: 10
                  },
                  supplierName: {
                    type: "string",
                    id: 11
                  },
                  publishTime: {
                    type: "string",
                    id: 12
                  },
                  updateTime: {
                    type: "string",
                    id: 13
                  }
                },
                nested: {
                  ShopInfo: {
                    fields: {
                      sellerId: {
                        type: "int64",
                        id: 1
                      },
                      name: {
                        type: "string",
                        id: 2
                      }
                    }
                  }
                }
              }
            }
          },
          PublishProductReq: {
            fields: {
              sellerId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              }
            }
          },
          PublishProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateSkuReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              skuInfo: {
                rule: "repeated",
                type: "SkuInfo",
                id: 2
              }
            },
            nested: {
              SkuInfo: {
                fields: {
                  countryCode: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  price: {
                    type: "string",
                    id: 3
                  },
                  activePrice: {
                    type: "string",
                    id: 4
                  },
                  activeStartTime: {
                    type: "int64",
                    id: 5
                  },
                  activeEndTime: {
                    type: "int64",
                    id: 6
                  }
                }
              }
            }
          },
          UpdateSkuResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetPublishInfoReq: {
            fields: {}
          },
          GetPublishInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              sellerInfo: {
                rule: "repeated",
                type: "SellerInfo",
                id: 2
              },
              countryInfo: {
                rule: "repeated",
                type: "CountryInfo",
                id: 3
              }
            },
            nested: {
              SellerInfo: {
                fields: {
                  sellerId: {
                    type: "string",
                    id: 1
                  },
                  sellerName: {
                    type: "string",
                    id: 2
                  }
                }
              },
              CountryInfo: {
                fields: {
                  countryCode: {
                    type: "string",
                    id: 1
                  },
                  countryName: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          GetProductInfoReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              }
            }
          },
          GetProductInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              countryInfo: {
                rule: "repeated",
                type: "CountryInfo",
                id: 4
              }
            },
            nested: {
              CountryInfo: {
                fields: {
                  countryCode: {
                    type: "string",
                    id: 1
                  },
                  countryName: {
                    type: "string",
                    id: 2
                  },
                  skuInfo: {
                    rule: "repeated",
                    type: "SkuInfo",
                    id: 3
                  }
                },
                nested: {
                  SkuInfo: {
                    fields: {
                      skuId: {
                        type: "string",
                        id: 1
                      },
                      spec_1: {
                        type: "string",
                        id: 2
                      },
                      spec_2: {
                        type: "string",
                        id: 3
                      },
                      supplyPrice: {
                        type: "string",
                        id: 4
                      },
                      supplyCurrencyCode: {
                        type: "string",
                        id: 5
                      },
                      price: {
                        type: "string",
                        id: 6
                      },
                      activePrice: {
                        type: "string",
                        id: 7
                      },
                      activeStartTime: {
                        type: "int64",
                        id: 8
                      },
                      activeEndTime: {
                        type: "int64",
                        id: 9
                      }
                    }
                  }
                }
              }
            }
          },
          LazadaProductService: {
            methods: {
              ListProduct: {
                requestType: "ListProductReq",
                responseType: "ListProductResp"
              },
              PublishProduct: {
                requestType: "PublishProductReq",
                responseType: "PublishProductResp"
              },
              GetPublishInfo: {
                requestType: "GetPublishInfoReq",
                responseType: "GetPublishInfoResp"
              },
              GetProductInfo: {
                requestType: "GetProductInfoReq",
                responseType: "GetProductInfoResp"
              },
              UpdateSku: {
                requestType: "UpdateSkuReq",
                responseType: "UpdateSkuResp"
              }
            }
          }
        }
      },
      luckdraw: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.luckDraw",
          java_outer_classname: "LuckDraw"
        },
        nested: {
          LuckPrizeInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              luckDrawId: {
                type: "string",
                id: 2
              },
              luckPrizeId: {
                type: "string",
                id: 3
              },
              luckPrizeType: {
                type: "common.enum.PromotionEnum.PromotionLuckDrawType",
                id: 4
              },
              luckPrizeName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              couponList: {
                type: "string",
                id: 6
              },
              onceNumber: {
                type: "int32",
                id: 7
              },
              winningProbability: {
                type: "string",
                id: 8
              },
              winningTipsType: {
                type: "common.enum.PromotionEnum.PromotionTipsType",
                id: 9
              },
              winningTipsDesc: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 10
              },
              winningTipsUrl: {
                type: "string",
                id: 11
              },
              pointsMin: {
                type: "string",
                id: 12
              },
              pointsMax: {
                type: "string",
                id: 13
              },
              image: {
                type: "string",
                id: 14
              },
              sort: {
                type: "int32",
                id: 15
              }
            }
          },
          LuckDrawInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              luckDrawId: {
                type: "string",
                id: 2
              },
              luckDrawName: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              increaseFrequency: {
                type: "common.enum.PromotionEnum.PromotionIncreaseFrequencyType",
                id: 7
              },
              increaseType: {
                type: "common.enum.PromotionEnum.PromotionIncreaseType",
                id: 8
              },
              increaseValue: {
                type: "string",
                id: 9
              },
              freeNumber: {
                type: "int32",
                id: 10
              },
              freeType: {
                type: "common.enum.PromotionEnum.PromotionFreeType",
                id: 11
              },
              zeroNumTipsType: {
                type: "common.enum.PromotionEnum.PromotionTipsType",
                id: 12
              },
              tipsDesc: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 13
              },
              tipsUrl: {
                type: "string",
                id: 14
              },
              status: {
                type: "int32",
                id: 15
              },
              isDelete: {
                type: "int32",
                id: 16
              },
              operationId: {
                type: "string",
                id: 17
              },
              createTime: {
                type: "int64",
                id: 18
              },
              updateTime: {
                type: "int64",
                id: 19
              },
              luckPrizeInfo: {
                rule: "repeated",
                type: "LuckPrizeInfo",
                id: 20
              },
              operationName: {
                type: "string",
                id: 21
              },
              luckDrawPassword: {
                type: "string",
                id: 22
              }
            }
          },
          LuckDrawTemplateAddReq: {
            fields: {
              luckDrawTemplate: {
                type: "LuckDrawInfo",
                id: 1
              }
            }
          },
          LuckDrawTemplateAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          LuckDrawTemplateUpdateReq: {
            fields: {
              luckDrawTemplate: {
                type: "LuckDrawInfo",
                id: 1
              }
            }
          },
          LuckDrawTemplateUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          LuckDrawTemplateListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              luckDrawId: {
                type: "string",
                id: 2
              },
              luckDrawName: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              luckDrawStatus: {
                type: "common.enum.PromotionEnum.LuckDrawActiveStatus",
                id: 7
              },
              luckDrawPassword: {
                type: "string",
                id: 8
              },
              filterEnded: {
                type: "bool",
                id: 9
              }
            }
          },
          LuckDrawTemplateListResp: {
            fields: {
              luckDrawInfo: {
                rule: "repeated",
                type: "LuckDrawInfo",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          GetLuckDrawTemplateReq: {
            fields: {
              luckDrawId: {
                type: "string",
                id: 1
              }
            }
          },
          GetLuckDrawTemplateResp: {
            fields: {
              luckDrawInfo: {
                type: "LuckDrawInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 3
              }
            }
          },
          UpdateLuckPrizeQuantityReq: {
            fields: {
              luckDrawId: {
                type: "string",
                id: 1
              },
              luckPrizeId: {
                type: "string",
                id: 2
              },
              quantity: {
                type: "int32",
                id: 3
              }
            }
          },
          UpdateLuckPrizeQuantityResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          QueryLuckPrizeInfoReq: {
            fields: {
              luckDrawId: {
                type: "string",
                id: 1
              }
            }
          },
          QueryLuckPrizeInfo: {
            fields: {
              luckPrizeId: {
                type: "string",
                id: 1
              },
              luckPrizeName: {
                type: "string",
                id: 2
              },
              winningRate: {
                type: "string",
                id: 3
              },
              winningTotal: {
                type: "int32",
                id: 4
              },
              putTotal: {
                type: "int32",
                id: 5
              },
              featurePutTotal: {
                type: "int32",
                id: 6
              }
            }
          },
          QueryLuckPrizeInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              queryLuckPrizeInfo: {
                rule: "repeated",
                type: "QueryLuckPrizeInfo",
                id: 3
              },
              luckDrawId: {
                type: "string",
                id: 4
              }
            }
          },
          DownloadWinningUserInfoReq: {
            fields: {
              luckDrawId: {
                type: "string",
                id: 1
              },
              luckPrizeId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              type: {
                type: "int32",
                id: 3
              }
            }
          },
          DownloadWinningUserInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              url: {
                type: "string",
                id: 3
              }
            }
          },
          LuckDrawTemplateBossService: {
            methods: {
              InsertLuckDrawTemplate: {
                requestType: "LuckDrawTemplateAddReq",
                responseType: "LuckDrawTemplateAddResp"
              },
              UpdateLuckDrawTemplate: {
                requestType: "LuckDrawTemplateUpdateReq",
                responseType: "LuckDrawTemplateUpdateResp"
              },
              ListLuckDrawTemplate: {
                requestType: "LuckDrawTemplateListReq",
                responseType: "LuckDrawTemplateListResp"
              },
              GetLuckDrawTemplate: {
                requestType: "GetLuckDrawTemplateReq",
                responseType: "GetLuckDrawTemplateResp"
              },
              UpdateLuckPrizeQuantity: {
                requestType: "UpdateLuckPrizeQuantityReq",
                responseType: "UpdateLuckPrizeQuantityResp"
              },
              QueryLuckPrizeInfo: {
                requestType: "QueryLuckPrizeInfoReq",
                responseType: "QueryLuckPrizeInfoResp"
              },
              DownloadWinningUserInfo: {
                requestType: "DownloadWinningUserInfoReq",
                responseType: "DownloadWinningUserInfoResp"
              }
            }
          }
        }
      },
      market: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.market",
          java_outer_classname: "MarketingSuperLuckyBoss"
        },
        nested: {
          MarketingProduct: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              itemImages: {
                type: "string",
                id: 3
              },
              sort: {
                type: "int32",
                id: 4
              },
              id: {
                type: "string",
                id: 5
              }
            }
          },
          CategoryProductListReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              categorySerialNo: {
                type: "string",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          CategoryProductListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              marketingProduct: {
                rule: "repeated",
                type: "MarketingProduct",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          CategoryProductParam: {
            fields: {
              categorySerialNo: {
                type: "string",
                id: 1
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          BatchDelReq: {
            fields: {
              ids: {
                type: "string",
                id: 1
              }
            }
          },
          SaveSortReq: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              sort: {
                type: "int32",
                id: 2
              }
            }
          },
          CategoryQueryParam: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          CategorySaveOrUpdateParam: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              languageCode: {
                type: "string",
                id: 3
              },
              serialNo: {
                type: "string",
                id: 4
              },
              languageInfo: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              }
            }
          },
          CategoryInfo: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              languageCode: {
                type: "string",
                id: 3
              },
              serialNo: {
                type: "string",
                id: 4
              },
              id: {
                type: "string",
                id: 5
              },
              languageInfo: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 6
              },
              productNum: {
                type: "uint32",
                id: 7
              },
              showStatus: {
                type: "common.enum.MarketingEnum.ItemShowStatus",
                id: 8
              },
              updateTime: {
                type: "string",
                id: 9
              },
              cateSort: {
                type: "uint32",
                id: 10
              }
            }
          },
          CategoryListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              categoryInfos: {
                rule: "repeated",
                type: "CategoryInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          QulityDelReq: {
            fields: {
              serialNo: {
                type: "string",
                id: 1
              }
            }
          },
          MarketingCategoryHideShowReq: {
            fields: {
              serialNo: {
                type: "string",
                id: 1
              },
              showStatus: {
                type: "common.enum.MarketingEnum.ItemShowStatus",
                id: 2
              }
            }
          },
          MarketingCategoryHideShowResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          MarketingCategorySetSortReq: {
            fields: {
              serialNo: {
                type: "string",
                id: 1
              },
              sort: {
                type: "uint32",
                id: 2
              }
            }
          },
          MarketingCategorySetSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SuccessResp: {
            fields: {
              success: {
                type: "int32",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              msg: {
                type: "string",
                id: 3
              }
            }
          },
          MarketingCategoryService: {
            methods: {
              FindQualityPageList: {
                requestType: "CategoryQueryParam",
                responseType: "CategoryListResp"
              },
              SaveQuality: {
                requestType: "CategorySaveOrUpdateParam",
                responseType: "SuccessResp"
              },
              UpdateQuality: {
                requestType: "CategorySaveOrUpdateParam",
                responseType: "SuccessResp"
              },
              DeleteQuality: {
                requestType: "QulityDelReq",
                responseType: "SuccessResp"
              },
              MarketingCategoryHideShow: {
                requestType: "MarketingCategoryHideShowReq",
                responseType: "MarketingCategoryHideShowResp"
              },
              MarketingCategorySetSort: {
                requestType: "MarketingCategorySetSortReq",
                responseType: "MarketingCategorySetSortResp"
              }
            }
          },
          MarketingCategoryProductService: {
            methods: {
              FindPageList: {
                requestType: "CategoryProductListReq",
                responseType: "CategoryProductListResp"
              },
              BatchSave: {
                requestType: "CategoryProductParam",
                responseType: "SuccessResp"
              },
              BatchDel: {
                requestType: "BatchDelReq",
                responseType: "SuccessResp"
              },
              SaveSort: {
                requestType: "SaveSortReq",
                responseType: "SuccessResp"
              }
            }
          },
          ConfigLadder: {
            fields: {
              minInviteNum: {
                type: "int32",
                id: 1
              },
              maxInviteNum: {
                type: "int32",
                id: 2
              },
              minAmount: {
                type: "string",
                id: 3
              },
              maxAmount: {
                type: "string",
                id: 4
              },
              minIndicator: {
                type: "int32",
                id: 5
              },
              maxIndicator: {
                type: "int32",
                id: 6
              }
            }
          },
          ConfigReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              serialId: {
                type: "string",
                id: 2
              },
              maxAmount: {
                type: "string",
                id: 3
              },
              configLadder: {
                rule: "repeated",
                type: "ConfigLadder",
                id: 4
              }
            }
          },
          ConfigResp: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              serialId: {
                type: "string",
                id: 2
              },
              maxAmount: {
                type: "string",
                id: 3
              },
              configLadder: {
                rule: "repeated",
                type: "ConfigLadder",
                id: 4
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 5
              }
            }
          },
          QueryByCountryCodeReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          QueryByCountryCodeResp: {
            fields: {
              success: {
                type: "int32",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          ListBackManageReq: {
            fields: {
              status: {
                type: "int32",
                id: 1
              },
              startCreateTime: {
                type: "string",
                id: 2
              },
              endCreateTime: {
                type: "string",
                id: 3
              },
              startSuccessTime: {
                type: "string",
                id: 4
              },
              endSuccessTime: {
                type: "string",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              userId: {
                type: "string",
                id: 7
              },
              serialId: {
                type: "string",
                id: 8
              },
              page: {
                type: "common.base.Pagination",
                id: 9
              }
            }
          },
          DownloadResp: {
            fields: {
              url: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          BackManageInfo: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              serialId: {
                type: "string",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              },
              amount: {
                type: "string",
                id: 4
              },
              successAmount: {
                type: "string",
                id: 5
              },
              successNum: {
                type: "string",
                id: 6
              },
              inviteNum: {
                type: "string",
                id: 7
              },
              status: {
                type: "int32",
                id: 8
              },
              createTime: {
                type: "string",
                id: 9
              },
              successTime: {
                type: "string",
                id: 10
              },
              incomeTime: {
                type: "string",
                id: 11
              },
              nickName: {
                type: "string",
                id: 12
              },
              oldUserNum: {
                type: "int32",
                id: 13
              },
              newUserNum: {
                type: "int32",
                id: 14
              },
              shareNum: {
                type: "int32",
                id: 15
              },
              thisPlayerHasSuccessedNum: {
                type: "int32",
                id: 16
              }
            }
          },
          ListBackManageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              backManageInfos: {
                rule: "repeated",
                type: "BackManageInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          FindOpenRedbagInfoReq: {
            fields: {
              serialId: {
                type: "string",
                id: 1
              }
            }
          },
          OpenRedbagInfo: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              nickName: {
                type: "string",
                id: 2
              },
              amount: {
                type: "string",
                id: 3
              },
              createTime: {
                type: "string",
                id: 4
              },
              newUser: {
                type: "bool",
                id: 5
              }
            }
          },
          FindOpenRedbagInfoResp: {
            fields: {
              openRedbagInfo: {
                rule: "repeated",
                type: "OpenRedbagInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetRedbagStatisticsListReq: {
            fields: {
              startCreateTime: {
                type: "string",
                id: 1
              },
              endCreateTime: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          StatisticsInfos: {
            fields: {
              amount: {
                type: "string",
                id: 1
              },
              statisticsInfo: {
                rule: "repeated",
                type: "StatisticsInfo",
                id: 2
              }
            },
            nested: {
              StatisticsInfo: {
                fields: {
                  scop: {
                    type: "string",
                    id: 1
                  },
                  oldUserNumAvg: {
                    type: "int32",
                    id: 2
                  },
                  shareNum: {
                    type: "int32",
                    id: 3
                  },
                  count: {
                    type: "int32",
                    id: 4
                  }
                }
              }
            }
          },
          GetRedbagStatisticsListResp: {
            fields: {
              statisticsInfos: {
                rule: "repeated",
                type: "StatisticsInfos",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          RedBagSystemConfig: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              maxAmount: {
                type: "int32",
                id: 3
              },
              redBagAmount: {
                type: "int32",
                id: 4
              },
              addInviteNumber: {
                type: "int32",
                id: 5
              },
              minInviteNumber: {
                type: "int32",
                id: 6
              },
              maxInviteNumber: {
                type: "int32",
                id: 7
              },
              oldUserMaxInvite: {
                type: "int32",
                id: 8
              },
              oldUserMaxRate: {
                type: "string",
                id: 9
              },
              minFirstAmountRate: {
                type: "string",
                id: 10
              },
              maxFirstAmountRate: {
                type: "string",
                id: 11
              },
              newPlayerConfig: {
                type: "NewPlayerConfig",
                id: 12
              },
              oldPlayerConfig: {
                type: "OldPlayerConfig",
                id: 13
              },
              emergencyAStartTime: {
                type: "string",
                id: 14
              },
              emergencyAEndTime: {
                type: "string",
                id: 15
              },
              emergencyBStartTime: {
                type: "string",
                id: 16
              },
              emergencyBEndTime: {
                type: "string",
                id: 17
              }
            },
            nested: {
              ShareOrFirstLevelUnit: {
                fields: {
                  number: {
                    type: "int32",
                    id: 1
                  },
                  rate: {
                    type: "string",
                    id: 2
                  }
                }
              },
              OtherLevelUnit: {
                fields: {
                  minHour: {
                    type: "string",
                    id: 1
                  },
                  maxHour: {
                    type: "string",
                    id: 2
                  },
                  inviteNum: {
                    type: "int32",
                    id: 3
                  }
                }
              },
              LastLevelUnit: {
                fields: {
                  inviteNum: {
                    type: "int32",
                    id: 1
                  },
                  rate: {
                    type: "string",
                    id: 2
                  }
                }
              },
              NewPlayerConfig: {
                fields: {
                  shareLevelUnit: {
                    rule: "repeated",
                    type: "ShareOrFirstLevelUnit",
                    id: 1
                  },
                  firstLevelUnit: {
                    rule: "repeated",
                    type: "ShareOrFirstLevelUnit",
                    id: 2
                  },
                  secondLevelTotalRate: {
                    type: "string",
                    id: 3
                  },
                  secondLevelUnit: {
                    rule: "repeated",
                    type: "OtherLevelUnit",
                    id: 4
                  },
                  thirdLevelTotalRate: {
                    type: "string",
                    id: 5
                  },
                  thirdLevelUnit: {
                    rule: "repeated",
                    type: "OtherLevelUnit",
                    id: 6
                  },
                  fourthLevelTotalRate: {
                    type: "string",
                    id: 7
                  },
                  fourthLevelUnit: {
                    rule: "repeated",
                    type: "OtherLevelUnit",
                    id: 8
                  },
                  complementRate: {
                    type: "string",
                    id: 9
                  },
                  lastLevelUnit: {
                    type: "LastLevelUnit",
                    id: 10
                  }
                }
              },
              OldPlayerConfig: {
                fields: {
                  shareLevelUnit: {
                    rule: "repeated",
                    type: "ShareOrFirstLevelUnit",
                    id: 1
                  },
                  firstLevelUnit: {
                    rule: "repeated",
                    type: "ShareOrFirstLevelUnit",
                    id: 2
                  },
                  secondLevelTotalRate: {
                    type: "string",
                    id: 3
                  },
                  secondLevelUnit: {
                    rule: "repeated",
                    type: "OtherLevelUnit",
                    id: 4
                  },
                  thirdLevelTotalRate: {
                    type: "string",
                    id: 5
                  },
                  thirdLevelUnit: {
                    rule: "repeated",
                    type: "OtherLevelUnit",
                    id: 6
                  },
                  fourthLevelTotalRate: {
                    type: "string",
                    id: 7
                  },
                  fourthLevelUnit: {
                    rule: "repeated",
                    type: "OtherLevelUnit",
                    id: 8
                  },
                  complementRate: {
                    type: "string",
                    id: 9
                  },
                  lastLevelUnit: {
                    type: "LastLevelUnit",
                    id: 10
                  }
                }
              }
            }
          },
          SaveRedBagSystemConfigReq: {
            fields: {
              redBagSystemConfig: {
                type: "RedBagSystemConfig",
                id: 1
              }
            }
          },
          SaveRedBagSystemConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SaveAheadSuccessConfigReq: {
            fields: {
              inviteNumber: {
                type: "int32",
                id: 1
              },
              rate: {
                type: "string",
                id: 2
              },
              maxSuccessNumber: {
                type: "int32",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              }
            }
          },
          SaveAheadSuccessConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetRedBagSystemConfigReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          GetRedBagSystemConfigResp: {
            fields: {
              redBagSystemConfig: {
                type: "RedBagSystemConfig",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetAheadSuccessConfigReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          GetAheadSuccessConfigResp: {
            fields: {
              inviteNumber: {
                type: "int32",
                id: 1
              },
              rate: {
                type: "string",
                id: 2
              },
              maxSuccessNumber: {
                type: "int32",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 5
              }
            }
          },
          OpenRedbagBossService: {
            methods: {
              QueryByCountryCode: {
                requestType: "QueryByCountryCodeReq",
                responseType: "ConfigResp"
              },
              SaveConfig: {
                requestType: "ConfigReq",
                responseType: "SuccessResp"
              },
              FindOpenRedbagInfoList: {
                requestType: "FindOpenRedbagInfoReq",
                responseType: "FindOpenRedbagInfoResp"
              },
              GetRedbagAmount: {
                requestType: "RedbagAmountReq",
                responseType: "RedbagAmountResp"
              },
              GetRedbagStatistics: {
                requestType: "RedbagAmountReq",
                responseType: "GetRedbagStatisticsResp"
              },
              Download: {
                requestType: "ListBackManageReq",
                responseType: "DownloadResp"
              },
              ListManageBack: {
                requestType: "ListBackManageReq",
                responseType: "ListBackManageResp"
              },
              GetRedbagStatisticsList: {
                requestType: "GetRedbagStatisticsListReq",
                responseType: "GetRedbagStatisticsListResp"
              },
              SaveRedBagSystemConfig: {
                requestType: "SaveRedBagSystemConfigReq",
                responseType: "SaveRedBagSystemConfigResp"
              },
              GetRedBagSystemConfig: {
                requestType: "GetRedBagSystemConfigReq",
                responseType: "GetRedBagSystemConfigResp"
              },
              SaveAheadSuccessConfig: {
                requestType: "SaveAheadSuccessConfigReq",
                responseType: "SaveAheadSuccessConfigResp"
              },
              GetAheadSuccessConfig: {
                requestType: "GetAheadSuccessConfigReq",
                responseType: "GetAheadSuccessConfigResp"
              }
            }
          },
          RedbagAmountReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          RedbagAmountResp: {
            fields: {
              amount: {
                type: "string",
                id: 1
              },
              invite: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          GetRedbagStatisticsReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          GetRedbagStatisticsResp: {
            fields: {
              todayNewUserCost: {
                type: "string",
                id: 1
              },
              todayNewUserRate: {
                type: "string",
                id: 2
              },
              todayNewUserCount: {
                type: "int32",
                id: 3
              },
              totalAmount: {
                type: "string",
                id: 4
              },
              totalNewUser: {
                type: "int32",
                id: 5
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 7
              }
            }
          },
          ActiveFloatingInfo: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              url: {
                type: "string",
                id: 3
              },
              switchStatus: {
                type: "int32",
                id: 4
              },
              cover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              startTime: {
                type: "int64",
                id: 7
              },
              endTime: {
                type: "int64",
                id: 8
              },
              createTime: {
                type: "int64",
                id: 9
              },
              updateTime: {
                type: "int64",
                id: 10
              },
              operationName: {
                type: "string",
                id: 11
              }
            }
          },
          AddActiveFloatingReq: {
            fields: {
              activeFloatingInfo: {
                type: "ActiveFloatingInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          AddActiveFloatingResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          UpdateActiveFloatingReq: {
            fields: {
              activeFloatingInfo: {
                type: "ActiveFloatingInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          UpdateActiveFloatingResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          ListActiveFloatingReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          ListActiveFloatingResp: {
            fields: {
              activeFloatingInfo: {
                rule: "repeated",
                type: "ActiveFloatingInfo",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          ChangeActiveFloatingStatusReq: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              switchStatus: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          ChangeActiveFloatingStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          ActiveFloatingBossService: {
            methods: {
              AddActiveFloating: {
                requestType: "AddActiveFloatingReq",
                responseType: "AddActiveFloatingResp"
              },
              UpdateActiveFloating: {
                requestType: "UpdateActiveFloatingReq",
                responseType: "UpdateActiveFloatingResp"
              },
              ListActiveFloating: {
                requestType: "ListActiveFloatingReq",
                responseType: "ListActiveFloatingResp"
              },
              ChangeActiveFloatingStatus: {
                requestType: "ChangeActiveFloatingStatusReq",
                responseType: "ChangeActiveFloatingStatusResp"
              }
            }
          },
          QualityRecommendInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              type: {
                type: "int32",
                id: 3
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              subTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              urlType: {
                type: "int32",
                id: 6
              },
              url: {
                type: "string",
                id: 7
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 8
              },
              cover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 9
              },
              startTime: {
                type: "int64",
                id: 10
              },
              endTime: {
                type: "int64",
                id: 11
              },
              sort: {
                type: "int32",
                id: 12
              },
              updateTime: {
                type: "int64",
                id: 13
              }
            }
          },
          InsertQualityRecommendReq: {
            fields: {
              qualityRecommendInfo: {
                type: "QualityRecommendInfo",
                id: 1
              }
            }
          },
          InsertQualityRecommendResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              id: {
                type: "int32",
                id: 2
              }
            }
          },
          UpdateQualityRecommendReq: {
            fields: {
              qualityRecommendInfo: {
                type: "QualityRecommendInfo",
                id: 1
              }
            }
          },
          UpdateQualityRecommendResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteQualityRecommendReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          DeleteQualityRecommendResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListQualityRecommendReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          ListQualityRecommendResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              qualityRecommendInfo: {
                rule: "repeated",
                type: "QualityRecommendInfo",
                id: 3
              }
            }
          },
          SortQualityRecommendReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              sort: {
                type: "int32",
                id: 2
              }
            }
          },
          SortQualityRecommendResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          QualityRecommendBossService: {
            methods: {
              InsertQualityRecommend: {
                requestType: "InsertQualityRecommendReq",
                responseType: "InsertQualityRecommendResp"
              },
              UpdateQualityRecommend: {
                requestType: "UpdateQualityRecommendReq",
                responseType: "UpdateQualityRecommendResp"
              },
              DeleteQualityRecommend: {
                requestType: "DeleteQualityRecommendReq",
                responseType: "DeleteQualityRecommendResp"
              },
              ListQualityRecommend: {
                requestType: "ListQualityRecommendReq",
                responseType: "ListQualityRecommendResp"
              },
              SortQualityRecommend: {
                requestType: "SortQualityRecommendReq",
                responseType: "SortQualityRecommendResp"
              }
            }
          },
          QueryListReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 10
              },
              subjectSerialId: {
                type: "string",
                id: 1
              },
              serialId: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              groupNum: {
                type: "string",
                id: 4
              },
              createStartTime: {
                type: "string",
                id: 5
              },
              createEndTime: {
                type: "string",
                id: 6
              },
              startTime: {
                type: "string",
                id: 7
              },
              endTime: {
                type: "string",
                id: 8
              },
              page: {
                type: "common.base.Pagination",
                id: 9
              }
            }
          },
          GroupGradeVo: {
            fields: {
              type: {
                type: "int32",
                id: 1
              },
              groupType: {
                type: "int32",
                id: 2
              },
              gdesc: {
                type: "string",
                id: 3
              }
            }
          },
          GroupListVo: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              images: {
                type: "string",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              vipPrice: {
                type: "string",
                id: 4
              },
              activityPrice: {
                type: "string",
                id: 5
              },
              activityStock: {
                type: "int32",
                id: 6
              },
              groupNum: {
                type: "int32",
                id: 7
              },
              leaderDiscount: {
                type: "string",
                id: 8
              },
              followDiscount: {
                type: "string",
                id: 9
              },
              specialDiscount: {
                rule: "repeated",
                type: "SpecialDiscount",
                id: 10
              },
              createGroupGrade: {
                type: "GroupGradeVo",
                id: 11
              },
              joinGroupGrade: {
                type: "GroupGradeVo",
                id: 12
              },
              startTime: {
                type: "string",
                id: 13
              },
              endTime: {
                type: "string",
                id: 14
              },
              validTimeOut: {
                type: "int32",
                id: 15
              },
              payTimeOut: {
                type: "int32",
                id: 16
              },
              createTime: {
                type: "string",
                id: 17
              },
              sort: {
                type: "int32",
                id: 18
              },
              recommend: {
                type: "string",
                id: 19
              },
              serialId: {
                type: "string",
                id: 20
              },
              productId: {
                type: "string",
                id: 21
              },
              subjectName: {
                type: "string",
                id: 22
              },
              price: {
                type: "string",
                id: 23
              }
            }
          },
          QueryListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupListVo: {
                rule: "repeated",
                type: "GroupListVo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          GroupActivityParam: {
            fields: {
              subjectSerialId: {
                type: "string",
                id: 1
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          GroupActivityDeleteParam: {
            fields: {
              itemSerialId: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          SaveSortParam: {
            fields: {
              itemSerialId: {
                type: "string",
                id: 1
              },
              sort: {
                type: "int32",
                id: 2
              }
            }
          },
          SerialIdParam: {
            fields: {
              itemSerialId: {
                type: "string",
                id: 1
              }
            }
          },
          SpecialDiscount: {
            fields: {
              discount: {
                type: "string",
                id: 1
              }
            }
          },
          ProductSkuListVo: {
            fields: {
              skuId: {
                type: "string",
                id: 1
              },
              activityPrice: {
                type: "string",
                id: 2
              },
              activityCommissionRate: {
                type: "string",
                id: 3
              },
              activityStock: {
                type: "int32",
                id: 4
              },
              serialId: {
                type: "string",
                id: 5
              },
              skuCode: {
                type: "string",
                id: 6
              }
            }
          },
          GroupActivityResp: {
            fields: {
              countryName: {
                type: "string",
                id: 1
              },
              subjectName: {
                type: "string",
                id: 2
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              },
              groupNum: {
                type: "int32",
                id: 5
              },
              leaderDiscount: {
                type: "string",
                id: 6
              },
              followDiscount: {
                type: "string",
                id: 7
              },
              specialDiscount: {
                rule: "repeated",
                type: "SpecialDiscount",
                id: 8
              },
              validTimeOut: {
                type: "int32",
                id: 9
              },
              payTimeOut: {
                type: "int32",
                id: 10
              },
              createGroupGrade: {
                type: "GroupGradeVo",
                id: 11
              },
              joinGroupGrade: {
                type: "GroupGradeVo",
                id: 12
              },
              productSkuListVo: {
                rule: "repeated",
                type: "ProductSkuListVo",
                id: 13
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 15
              },
              productId: {
                type: "string",
                id: 16
              },
              countryCode: {
                type: "string",
                id: 17
              },
              groupActivityType: {
                type: "common.enum.MarketingEnum.GroupActivityType",
                id: 18
              },
              numOfWinners: {
                type: "int32",
                id: 19
              },
              numOfNewUsers: {
                type: "int32",
                id: 20
              },
              groupActivityItemType: {
                type: "common.enum.MarketingEnum.GroupActivityByItemType",
                id: 21
              },
              refundType: {
                type: "common.enum.MarketingEnum.RefundType",
                id: 22
              }
            }
          },
          GroupActivityUpdateParam: {
            fields: {
              serialId: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              },
              groupNum: {
                type: "int32",
                id: 5
              },
              leaderDiscount: {
                type: "string",
                id: 6
              },
              followDiscount: {
                type: "string",
                id: 7
              },
              specialDiscount: {
                rule: "repeated",
                type: "SpecialDiscount",
                id: 8
              },
              validTimeOut: {
                type: "int32",
                id: 9
              },
              payTimeOut: {
                type: "int32",
                id: 10
              },
              createGroupGrade: {
                type: "GroupGradeVo",
                id: 11
              },
              joinGroupGrade: {
                type: "GroupGradeVo",
                id: 12
              },
              productSkuListVo: {
                rule: "repeated",
                type: "ProductSkuListVo",
                id: 13
              },
              numOfWinners: {
                type: "int32",
                id: 14
              },
              numOfNewUsers: {
                type: "int32",
                id: 15
              },
              groupActivityItemType: {
                type: "common.enum.MarketingEnum.GroupActivityByItemType",
                id: 16
              },
              refundType: {
                type: "common.enum.MarketingEnum.RefundType",
                id: 19
              }
            }
          },
          GroupActivitySubject: {
            fields: {
              serialId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              groupActivityType: {
                type: "common.enum.MarketingEnum.GroupActivityType",
                id: 4
              }
            }
          },
          GroupActivitySubjectResp: {
            fields: {
              serialId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              cnName: {
                type: "string",
                id: 3
              },
              groupActivityType: {
                type: "common.enum.MarketingEnum.GroupActivityType",
                id: 4
              }
            }
          },
          GroupActivitySubjectsListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupActivitySubjectResp: {
                rule: "repeated",
                type: "GroupActivitySubjectResp",
                id: 2
              }
            }
          },
          CountryCode: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          GroupActivityListParam: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          SerialId: {
            fields: {
              serialId: {
                type: "int64",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              }
            }
          },
          StatusResp: {
            fields: {
              status: {
                type: "int32",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              },
              msg: {
                type: "string",
                id: 4
              }
            }
          },
          MarketingSuccessResp: {
            fields: {
              success: {
                type: "int32",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              msg: {
                type: "string",
                id: 3
              }
            }
          },
          GetSubjectsForPageReq: {
            fields: {
              subjectName: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              }
            }
          },
          GetSubjectsForPageResp: {
            fields: {
              groupSubjectUnit: {
                rule: "repeated",
                type: "GroupSubjectUnit",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              GroupSubjectUnit: {
                fields: {
                  subjectSerialId: {
                    type: "string",
                    id: 1
                  },
                  subjectNameCn: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          GetGroupProductForPageReq: {
            fields: {
              spuId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              }
            }
          },
          GetGroupProductForPageResp: {
            fields: {
              groupProductUnit: {
                rule: "repeated",
                type: "GroupProductUnit",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              GroupProductUnit: {
                fields: {
                  spuId: {
                    type: "string",
                    id: 7
                  },
                  groupItemSerialId: {
                    type: "string",
                    id: 8
                  },
                  groupSpuTitleCn: {
                    type: "string",
                    id: 1
                  },
                  groupSpuCover: {
                    type: "string",
                    id: 2
                  },
                  groupSubjectNameCn: {
                    type: "string",
                    id: 3
                  },
                  groupSpuStartTime: {
                    type: "string",
                    id: 4
                  },
                  groupSpuEndTime: {
                    type: "string",
                    id: 5
                  },
                  groupSpuActivityPrice: {
                    type: "string",
                    id: 6
                  }
                }
              }
            }
          },
          GetGroupSpuBossReq: {
            fields: {
              subjectSerialId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              groupItemSerialId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              productStatus: {
                rule: "repeated",
                type: "int32",
                id: 4
              }
            }
          },
          GetGroupSpuBossResp: {
            fields: {
              groupProductDetailUnit: {
                rule: "repeated",
                type: "GroupProductDetailUnit",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            },
            nested: {
              GroupProductDetailUnit: {
                fields: {
                  groupItemSerialId: {
                    type: "string",
                    id: 11
                  },
                  spuId: {
                    type: "string",
                    id: 10
                  },
                  groupSpuTitleCn: {
                    type: "string",
                    id: 1
                  },
                  groupSpuCover: {
                    type: "string",
                    id: 2
                  },
                  groupSubjectNameCn: {
                    type: "string",
                    id: 3
                  },
                  groupSpuStartTime: {
                    type: "string",
                    id: 4
                  },
                  groupSpuEndTime: {
                    type: "string",
                    id: 5
                  },
                  groupSpuActivityPrice: {
                    type: "string",
                    id: 6
                  },
                  groupSpuPrice: {
                    type: "string",
                    id: 7
                  },
                  groupSpuPriceVip: {
                    type: "string",
                    id: 8
                  },
                  num: {
                    type: "int32",
                    id: 9
                  }
                }
              }
            }
          },
          GroupActivitySubjectStatusService: {
            methods: {
              Check: {
                requestType: "CountryCode",
                responseType: "StatusResp"
              },
              Update: {
                requestType: "CountryCode",
                responseType: "MarketingSuccessResp"
              }
            }
          },
          GroupActivitySubjectBossService: {
            methods: {
              Insert: {
                requestType: "GroupActivitySubject",
                responseType: "MarketingSuccessResp"
              },
              Update: {
                requestType: "GroupActivitySubject",
                responseType: "MarketingSuccessResp"
              },
              FindAllSubjects: {
                requestType: "CountryCode",
                responseType: "GroupActivitySubjectsListResp"
              },
              Delete: {
                requestType: "GroupActivitySubject",
                responseType: "MarketingSuccessResp"
              }
            }
          },
          GroupActivityBossService: {
            methods: {
              FindPageList: {
                requestType: "QueryListReq",
                responseType: "QueryListResp"
              },
              BatchSave: {
                requestType: "GroupActivityParam",
                responseType: "MarketingSuccessResp"
              },
              BatchDelete: {
                requestType: "GroupActivityDeleteParam",
                responseType: "MarketingSuccessResp"
              },
              SaveSort: {
                requestType: "SaveSortParam",
                responseType: "MarketingSuccessResp"
              },
              Recommend: {
                requestType: "SerialIdParam",
                responseType: "MarketingSuccessResp"
              },
              ViewById: {
                requestType: "SerialIdParam",
                responseType: "GroupActivityResp"
              },
              Update: {
                requestType: "GroupActivityUpdateParam",
                responseType: "MarketingSuccessResp"
              }
            }
          },
          GroupActivityForPageBossService: {
            methods: {
              GetSubjectsForPage: {
                requestType: "GetSubjectsForPageReq",
                responseType: "GetSubjectsForPageResp"
              },
              GetGroupProductForPage: {
                requestType: "GetGroupProductForPageReq",
                responseType: "GetGroupProductForPageResp"
              },
              GetGroupSpuBoss: {
                requestType: "GetGroupSpuBossReq",
                responseType: "GetGroupSpuBossResp"
              }
            }
          },
          MarketingPageInfo: {
            fields: {
              pageId: {
                type: "int64",
                id: 1
              },
              serialId: {
                type: "int64",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              invalidTime: {
                type: "string",
                id: 5
              },
              status: {
                type: "int32",
                id: 6
              },
              operatorId: {
                type: "int64",
                id: 8
              },
              operator: {
                type: "string",
                id: 9
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 10
              },
              shareTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 11
              },
              shareDescription: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 12
              },
              shareImg: {
                type: "string",
                id: 13
              },
              background: {
                type: "string",
                id: 14
              },
              share: {
                type: "int32",
                id: 15
              },
              showType: {
                type: "int32",
                id: 16
              },
              updateTime: {
                type: "string",
                id: 17
              },
              historySerialId: {
                type: "int64",
                id: 18
              }
            }
          },
          InsertHistoryInfo: {
            fields: {
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              shareTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              shareDescription: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              shareImg: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 6
              },
              background: {
                type: "string",
                id: 7
              },
              share: {
                type: "int32",
                id: 8
              },
              showType: {
                type: "int32",
                id: 9
              },
              invalidTime: {
                type: "string",
                id: 10
              }
            }
          },
          MarketingPageHistoryInfo: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              serialId: {
                type: "int64",
                id: 2
              },
              operatorId: {
                type: "int64",
                id: 3
              },
              operator: {
                type: "string",
                id: 4
              },
              updateTime: {
                type: "string",
                id: 5
              },
              createTime: {
                type: "string",
                id: 6
              },
              status: {
                type: "int32",
                id: 7
              },
              pageSerialId: {
                type: "int64",
                id: 8
              },
              startTime: {
                type: "int64",
                id: 9
              }
            }
          },
          MarketingPageLayout: {
            fields: {
              basicName: {
                type: "string",
                id: 2
              },
              moduleId: {
                type: "string",
                id: 3
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              sort: {
                type: "int32",
                id: 5
              },
              info: {
                type: "string",
                id: 6
              }
            }
          },
          InsertPageLayoutReq: {
            fields: {
              info: {
                type: "InsertHistoryInfo",
                id: 1
              },
              layout: {
                rule: "repeated",
                type: "MarketingPageLayout",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              serialId: {
                type: "string",
                id: 4
              }
            }
          },
          InsertPageLayoutResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              serialId: {
                type: "string",
                id: 3
              }
            }
          },
          ListPageReq: {
            fields: {
              title: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              }
            }
          },
          ListPageResp: {
            fields: {
              marketingPageInfoList: {
                rule: "repeated",
                type: "MarketingPageInfo",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          GetPageHistoryBySerialIdReq: {
            fields: {
              serialId: {
                type: "int64",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          GetPageHistoryBySerialIdResp: {
            fields: {
              marketingPageHistoryInfoList: {
                rule: "repeated",
                type: "MarketingPageHistoryInfo",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          DeletePageHistoryReq: {
            fields: {
              serialId: {
                type: "int64",
                id: 1
              }
            }
          },
          DeletePageHistoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          HistorySerialIdReq: {
            fields: {
              historySerialId: {
                type: "string",
                id: 1
              }
            }
          },
          PageLayoutPb: {
            fields: {
              moduleId: {
                type: "string",
                id: 1
              },
              info: {
                type: "string",
                id: 2
              },
              sort: {
                type: "int32",
                id: 3
              },
              name: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              basicName: {
                type: "string",
                id: 5
              }
            }
          },
          ViewInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              showType: {
                type: "int32",
                id: 3
              },
              background: {
                type: "string",
                id: 4
              },
              endTime: {
                type: "string",
                id: 5
              },
              share: {
                type: "int32",
                id: 6
              },
              shareTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 7
              },
              shareDescription: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 8
              },
              shareImg: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 9
              },
              serialId: {
                type: "string",
                id: 10
              },
              pageLayoutPb: {
                rule: "repeated",
                type: "PageLayoutPb",
                id: 11
              },
              status: {
                type: "int32",
                id: 12
              },
              countryCode: {
                type: "string",
                id: 13
              }
            }
          },
          PageSuccessResp: {
            fields: {
              success: {
                type: "int32",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              msg: {
                type: "string",
                id: 3
              }
            }
          },
          UpdateVersionPageTimeReq: {
            fields: {
              requestType: {
                type: "int32",
                id: 1
              },
              serialId: {
                type: "string",
                id: 2
              },
              historyPageId: {
                type: "string",
                id: 3
              },
              startTime: {
                type: "int64",
                id: 4
              }
            }
          },
          UpdateVersionPageTimeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          MarketingPageBossService: {
            methods: {
              InsertPageLayout: {
                requestType: "InsertPageLayoutReq",
                responseType: "InsertPageLayoutResp"
              },
              ListPage: {
                requestType: "ListPageReq",
                responseType: "ListPageResp"
              },
              GetPageHistoryBySerialId: {
                requestType: "GetPageHistoryBySerialIdReq",
                responseType: "GetPageHistoryBySerialIdResp"
              },
              DeletePageHistory: {
                requestType: "DeletePageHistoryReq",
                responseType: "DeletePageHistoryResp"
              },
              Activating: {
                requestType: "HistorySerialIdReq",
                responseType: "PageSuccessResp"
              },
              GetPageAndLayouts: {
                requestType: "HistorySerialIdReq",
                responseType: "ViewInfoResp"
              },
              UpdateVersionPageTime: {
                requestType: "UpdateVersionPageTimeReq",
                responseType: "UpdateVersionPageTimeResp"
              }
            }
          },
          BigPrizeSetting: {
            fields: {
              countryCode: {
                type: "string",
                id: 10
              },
              perInviteNewUserNum: {
                type: "int32",
                id: 2
              },
              perInviteOldUserNum: {
                type: "int32",
                id: 1
              },
              inviteNewUserGetCodeNum: {
                type: "int32",
                id: 8
              },
              inviteOldUserGetCodeNum: {
                type: "int32",
                id: 9
              },
              superLuckRefundType: {
                type: "common.enum.MarketingEnum.SuperLuckRefundType",
                id: 6
              }
            }
          },
          FindBigPrizeSettingReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          FindBigPrizeSettingResp: {
            fields: {
              bigPrizeSetting: {
                type: "BigPrizeSetting",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          SaveBigPrizeSettingReq: {
            fields: {
              bigPrizeSetting: {
                type: "BigPrizeSetting",
                id: 1
              }
            }
          },
          SaveBigPrizeSettingResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          FindBigPrizeUserReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          FindBigPrizeUserResp: {
            fields: {
              bigPrizeUser: {
                rule: "repeated",
                type: "BigPrizeUser",
                id: 1
              },
              total: {
                type: "int32",
                id: 3
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 4
              }
            },
            nested: {
              BigPrizeUser: {
                fields: {
                  userId: {
                    type: "string",
                    id: 1
                  },
                  phoneNum: {
                    type: "string",
                    id: 2
                  },
                  status: {
                    type: "common.enum.MarketingEnum.BigPrizeUserStatusType",
                    id: 3
                  },
                  productName: {
                    type: "string",
                    id: 4
                  },
                  operatorId: {
                    type: "string",
                    id: 5
                  },
                  canDisable: {
                    type: "int32",
                    id: 6
                  },
                  operatorName: {
                    type: "string",
                    id: 7
                  }
                }
              }
            }
          },
          AddBigPrizeUserReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              maxAmount: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          AddBigPrizeUserResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 4
              }
            }
          },
          DisableBigPrizeUserReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          DisableBigPrizeUserResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 4
              }
            }
          },
          SuperLuckyBigPrizeSettingBossService: {
            methods: {
              FindBigPrizeSetting: {
                requestType: "FindBigPrizeSettingReq",
                responseType: "FindBigPrizeSettingResp"
              },
              SaveBigPrizeSetting: {
                requestType: "SaveBigPrizeSettingReq",
                responseType: "SaveBigPrizeSettingResp"
              },
              FindBigPrizeUser: {
                requestType: "FindBigPrizeUserReq",
                responseType: "FindBigPrizeUserResp"
              },
              AddBigPrizeUser: {
                requestType: "AddBigPrizeUserReq",
                responseType: "AddBigPrizeUserResp"
              },
              DisableBigPrizeUser: {
                requestType: "DisableBigPrizeUserReq",
                responseType: "DisableBigPrizeUserResp"
              }
            }
          },
          SuperLuckyOrderUnit: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              payStatus: {
                type: "int32",
                id: 2
              },
              productCover: {
                type: "string",
                id: 3
              },
              productPeriod: {
                type: "string",
                id: 4
              },
              code: {
                type: "string",
                id: 5
              },
              inviteNewNum: {
                type: "int32",
                id: 6
              },
              awardCode: {
                type: "string",
                id: 7
              },
              winStatus: {
                type: "int32",
                id: 8
              },
              winCode: {
                type: "string",
                id: 9
              }
            }
          },
          FindOrderReq: {
            fields: {
              productPeriod: {
                type: "string",
                id: 1
              },
              code: {
                type: "string",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              },
              queryStartTime: {
                type: "string",
                id: 4
              },
              queryEndTime: {
                type: "string",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              }
            }
          },
          FindOrderResp: {
            fields: {
              superLuckyOrderUnit: {
                rule: "repeated",
                type: "SuperLuckyOrderUnit",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          SuperLuckyOrderBossService: {
            methods: {
              FindOrder: {
                requestType: "FindOrderReq",
                responseType: "FindOrderResp"
              }
            }
          },
          SuperLuckSubject: {
            fields: {
              serialId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          InsertSuperLuckSubjectReq: {
            fields: {
              superLuckSubject: {
                type: "SuperLuckSubject",
                id: 1
              }
            }
          },
          InsertSuperLuckSubjectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateSuperLuckSubjectReq: {
            fields: {
              superLuckSubject: {
                type: "SuperLuckSubject",
                id: 1
              }
            }
          },
          UpdateSuperLuckSubjectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          FindAllSuperLuckSubjectReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          FindAllSuperLuckSubjectResp: {
            fields: {
              superLuckSubject: {
                rule: "repeated",
                type: "SuperLuckSubject",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          DeleteSuperLuckSubjectReq: {
            fields: {
              serialId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteSuperLuckSubjectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SuperLuckySubjectBossService: {
            methods: {
              InsertSuperLuckSubject: {
                requestType: "InsertSuperLuckSubjectReq",
                responseType: "InsertSuperLuckSubjectResp"
              },
              UpdateSuperLuckSubject: {
                requestType: "UpdateSuperLuckSubjectReq",
                responseType: "UpdateSuperLuckSubjectResp"
              },
              FindAllSuperLuckSubject: {
                requestType: "FindAllSuperLuckSubjectReq",
                responseType: "FindAllSuperLuckSubjectResp"
              },
              DeleteSuperLuckSubject: {
                requestType: "DeleteSuperLuckSubjectReq",
                responseType: "DeleteSuperLuckSubjectResp"
              }
            }
          },
          product: {
            options: {
              java_multiple_files: true,
              java_package: "com.fingo.littlec.proto.boss.market.product",
              java_outer_classname: "MarketingSuperLuckyProductBoss"
            },
            nested: {
              SuperLuckyProductBossService: {
                methods: {
                  ListSuperLuckProductWithPage: {
                    requestType: "ListSuperLuckProductWithPageReq",
                    responseType: "ListSuperLuckProductWithPageResp"
                  },
                  ListSuperLuckProductSkuRule: {
                    requestType: "ListSuperLuckProductSkuRuleReq",
                    responseType: "ListSuperLuckProductSkuRuleResp"
                  },
                  UpdateSuperLuckProductSkuRule: {
                    requestType: "UpdateSuperLuckProductSkuRuleReq",
                    responseType: "UpdateSuperLuckProductSkuRuleResp"
                  },
                  DeleteSuperLuckProduct: {
                    requestType: "DeleteSuperLuckProductReq",
                    responseType: "DeleteSuperLuckProductResp"
                  },
                  AddSuperLuckProduct: {
                    requestType: "AddSuperLuckProductReq",
                    responseType: "AddSuperLuckProductResp"
                  },
                  ChangeSuperLuckProductSort: {
                    requestType: "ChangeSuperLuckProductSortReq",
                    responseType: "ChangeSuperLuckProductSortResp"
                  },
                  BatchAddSuperLuckProduct: {
                    requestType: "BatchAddSuperLuckProductReq",
                    responseType: "BatchAddSuperLuckProductResp"
                  },
                  QueryProductCommonSet: {
                    requestType: "ProductCommonSetReq",
                    responseType: "ProductCommonSetResp"
                  },
                  AddProductCommonSet: {
                    requestType: "AddProductCommonSetReq",
                    responseType: "AddProductCommonSetResp"
                  }
                }
              },
              ListSuperLuckProductWithPageReq: {
                fields: {
                  productId: {
                    type: "string",
                    id: 3
                  },
                  productName: {
                    type: "string",
                    id: 4
                  },
                  countryCode: {
                    type: "string",
                    id: 5
                  },
                  startTime: {
                    type: "int64",
                    id: 6
                  },
                  endTime: {
                    type: "int64",
                    id: 7
                  },
                  page: {
                    type: "common.base.Pagination",
                    id: 8
                  }
                }
              },
              SuperLuckProduct: {
                fields: {
                  id: {
                    type: "int32",
                    id: 1
                  },
                  subjectId: {
                    type: "int32",
                    id: 2
                  },
                  productId: {
                    type: "string",
                    id: 3
                  },
                  productName: {
                    type: "string",
                    id: 4
                  },
                  productCover: {
                    type: "string",
                    id: 5
                  },
                  productSerialId: {
                    type: "string",
                    id: 6
                  },
                  codeNumber: {
                    type: "int32",
                    id: 7
                  },
                  startTime: {
                    type: "string",
                    id: 8
                  },
                  endTime: {
                    type: "string",
                    id: 9
                  },
                  period: {
                    type: "int32",
                    id: 10
                  },
                  inviteTotalNewUser: {
                    type: "string",
                    id: 11
                  },
                  inviteTodayNewUser: {
                    type: "string",
                    id: 12
                  },
                  inewUserPercent: {
                    type: "string",
                    id: 13
                  },
                  sort: {
                    type: "int32",
                    id: 14
                  },
                  price: {
                    type: "string",
                    id: 15
                  },
                  activePrice: {
                    type: "string",
                    id: 16
                  }
                }
              },
              ListSuperLuckProductWithPageResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  superLuckProduct: {
                    rule: "repeated",
                    type: "SuperLuckProduct",
                    id: 2
                  },
                  total: {
                    type: "int32",
                    id: 3
                  }
                }
              },
              ListSuperLuckProductSkuRuleReq: {
                fields: {
                  productSerialId: {
                    type: "string",
                    id: 1
                  }
                }
              },
              SkuInfo: {
                fields: {
                  id: {
                    type: "int32",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  skuId: {
                    type: "string",
                    id: 3
                  },
                  skuName: {
                    type: "string",
                    id: 4
                  },
                  skuCover: {
                    type: "string",
                    id: 5
                  },
                  skuPrice: {
                    type: "string",
                    id: 6
                  },
                  skuActivePrice: {
                    type: "string",
                    id: 7
                  }
                }
              },
              ListSuperLuckProductSkuRuleResp: {
                fields: {
                  startTime: {
                    type: "string",
                    id: 1
                  },
                  endTime: {
                    type: "string",
                    id: 2
                  },
                  productId: {
                    type: "string",
                    id: 3
                  },
                  winType: {
                    type: "int32",
                    id: 8
                  },
                  codeNumber: {
                    type: "int32",
                    id: 9
                  },
                  codeOldUser: {
                    type: "int32",
                    id: 10
                  },
                  codeNewUser: {
                    type: "int32",
                    id: 11
                  },
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 12
                  },
                  skuInfos: {
                    rule: "repeated",
                    type: "SkuInfo",
                    id: 13
                  }
                }
              },
              AddSkuInfo: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  skuCode: {
                    type: "string",
                    id: 3
                  },
                  price: {
                    type: "string",
                    id: 4
                  },
                  activePrice: {
                    type: "string",
                    id: 6
                  }
                }
              },
              AddSuperLuckProductReq: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  startTime: {
                    type: "string",
                    id: 2
                  },
                  endTime: {
                    type: "string",
                    id: 3
                  },
                  winType: {
                    type: "int32",
                    id: 4
                  },
                  codeNumber: {
                    type: "int32",
                    id: 5
                  },
                  codeOldUser: {
                    type: "int32",
                    id: 6
                  },
                  codeNewUser: {
                    type: "int32",
                    id: 7
                  },
                  skuInfo: {
                    rule: "repeated",
                    type: "AddSkuInfo",
                    id: 8
                  },
                  countryCode: {
                    type: "string",
                    id: 9
                  }
                }
              },
              AddSuperLuckProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              ChangeSuperLuckProductSortReq: {
                fields: {
                  id: {
                    type: "string",
                    id: 1
                  },
                  sortNo: {
                    type: "uint32",
                    id: 2
                  }
                }
              },
              ChangeSuperLuckProductSortResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              UpdateSkuInfo: {
                fields: {
                  id: {
                    type: "int32",
                    id: 1
                  },
                  skuActivePrice: {
                    type: "string",
                    id: 2
                  },
                  skuPrice: {
                    type: "string",
                    id: 3
                  },
                  skuId: {
                    type: "string",
                    id: 4
                  },
                  skuCode: {
                    type: "string",
                    id: 5
                  }
                }
              },
              UpdateSuperLuckProductSkuRuleReq: {
                fields: {
                  productSerialId: {
                    type: "string",
                    id: 1
                  },
                  updateSkuInfo: {
                    rule: "repeated",
                    type: "UpdateSkuInfo",
                    id: 2
                  },
                  winType: {
                    type: "int32",
                    id: 8
                  },
                  codeNumber: {
                    type: "int32",
                    id: 9
                  },
                  codeOldUser: {
                    type: "int32",
                    id: 10
                  },
                  codeNewUser: {
                    type: "int32",
                    id: 11
                  },
                  startTime: {
                    type: "string",
                    id: 12
                  },
                  endTime: {
                    type: "string",
                    id: 13
                  }
                }
              },
              UpdateSuperLuckProductSkuRuleResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              DeleteSuperLuckProductReq: {
                fields: {
                  id: {
                    rule: "repeated",
                    type: "int32",
                    id: 1
                  }
                }
              },
              DeleteSuperLuckProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              BatchAddSuperLuckProductReq: {
                fields: {
                  countryCode: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    rule: "repeated",
                    type: "string",
                    id: 2
                  }
                }
              },
              BatchAddSuperLuckProductResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              ProductCommonSetReq: {
                fields: {
                  countryCode: {
                    type: "string",
                    id: 1
                  }
                }
              },
              AddProductCommonSetReq: {
                fields: {
                  countryCode: {
                    type: "string",
                    id: 1
                  },
                  startTime: {
                    type: "string",
                    id: 2
                  },
                  endTime: {
                    type: "string",
                    id: 3
                  },
                  activePrice: {
                    type: "string",
                    id: 4
                  },
                  invitationNew: {
                    type: "int32",
                    id: 5
                  },
                  invitationOld: {
                    type: "int32",
                    id: 6
                  }
                }
              },
              AddProductCommonSetResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  }
                }
              },
              ProductCommonSetResp: {
                fields: {
                  ret: {
                    type: "common.base.ErrorMessage",
                    id: 1
                  },
                  startTime: {
                    type: "string",
                    id: 2
                  },
                  endTime: {
                    type: "string",
                    id: 3
                  },
                  activePrice: {
                    type: "string",
                    id: 4
                  },
                  invitationNew: {
                    type: "int32",
                    id: 5
                  },
                  invitationOld: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          }
        }
      },
      member: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.member",
          java_outer_classname: "Member"
        },
        nested: {
          UserIdReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              }
            }
          },
          BooleanResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              success: {
                type: "bool",
                id: 2
              }
            }
          },
          StringResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              str: {
                type: "string",
                id: 2
              }
            }
          },
          TeamMemberCountPb: {
            fields: {
              teamTotalNum: {
                type: "int32",
                id: 1
              },
              teamV2Num: {
                type: "int32",
                id: 2
              },
              teamV3Num: {
                type: "int32",
                id: 3
              },
              teamV4Num: {
                type: "int32",
                id: 4
              },
              teamV5Num: {
                type: "int32",
                id: 5
              }
            }
          },
          LowerUserPb: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              nickname: {
                type: "string",
                id: 2
              },
              bindingTime: {
                type: "string",
                id: 3
              },
              memberTime: {
                type: "string",
                id: 4
              },
              memberType: {
                type: "int32",
                id: 5
              },
              upgradeAtTime: {
                type: "string",
                id: 6
              },
              lowerCount: {
                type: "int32",
                id: 7
              },
              relation: {
                type: "int32",
                id: 8
              },
              headPicture: {
                type: "string",
                id: 9
              },
              memberLevel: {
                type: "int32",
                id: 10
              },
              mobile: {
                type: "string",
                id: 11
              },
              countryAreaCode: {
                type: "int32",
                id: 12
              },
              email: {
                type: "string",
                id: 13
              },
              inviteTime: {
                type: "string",
                id: 14
              },
              teamMemberCount: {
                type: "TeamMemberCountPb",
                id: 15
              },
              upgradeAmTime: {
                type: "string",
                id: 16
              }
            }
          },
          ListTeamMemberByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              lowerUserPb: {
                rule: "repeated",
                type: "LowerUserPb",
                id: 3
              }
            }
          },
          ListTeamMemberByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              relation: {
                type: "int32",
                id: 3
              },
              memberLevel: {
                type: "int32",
                id: 4
              },
              memberId: {
                type: "string",
                id: 5
              },
              mobile: {
                type: "string",
                id: 6
              },
              nickName: {
                type: "string",
                id: 7
              }
            }
          },
          ListUserOrderByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              }
            }
          },
          ListUserOrderByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              data: {
                rule: "repeated",
                type: "UserOrdersRespPb",
                id: 3
              }
            }
          },
          UserOrdersRespPb: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              createOrderTime: {
                type: "string",
                id: 3
              },
              status: {
                type: "int32",
                id: 4
              },
              ordersProduct: {
                rule: "repeated",
                type: "OrdersProductsPb",
                id: 5
              }
            }
          },
          OrdersProductsPb: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              productsId: {
                type: "string",
                id: 3
              },
              price: {
                type: "int32",
                id: 4
              },
              skuId: {
                type: "string",
                id: 5
              },
              count: {
                type: "int32",
                id: 6
              },
              productsNameCn: {
                type: "string",
                id: 7
              },
              productsCoverCn: {
                type: "string",
                id: 8
              },
              productNameEn: {
                type: "string",
                id: 9
              },
              productCoverEn: {
                type: "string",
                id: 10
              },
              skuDescCn: {
                type: "string",
                id: 11
              },
              skuDescEn: {
                type: "string",
                id: 12
              },
              createTime: {
                type: "string",
                id: 13
              },
              productsCode: {
                type: "string",
                id: 14
              },
              productsIdentificationCode: {
                type: "string",
                id: 15
              },
              thirdOrderNo: {
                type: "string",
                id: 16
              },
              thirdLogisticsNo: {
                type: "string",
                id: 17
              },
              priceSupply: {
                type: "int32",
                id: 18
              },
              productType: {
                type: "string",
                id: 19
              },
              fingoSkuCode: {
                type: "string",
                id: 20
              }
            }
          },
          UserManagePb: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              countryAreaCode: {
                type: "int32",
                id: 2
              },
              nickName: {
                type: "string",
                id: 3
              },
              mobile: {
                type: "string",
                id: 4
              },
              headImg: {
                type: "string",
                id: 5
              },
              email: {
                type: "string",
                id: 6
              },
              createTime: {
                type: "string",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              },
              inviteTime: {
                type: "string",
                id: 10
              },
              memberTime: {
                type: "string",
                id: 11
              },
              upgradeAtTime: {
                type: "string",
                id: 12
              },
              memberType: {
                type: "int32",
                id: 13
              },
              inviteCode: {
                type: "string",
                id: 14
              },
              commissionAmount: {
                type: "string",
                id: 15
              },
              cashOutAmount: {
                type: "string",
                id: 16
              },
              memberLevel: {
                type: "int32",
                id: 17
              },
              lastBuyTime: {
                type: "string",
                id: 18
              },
              parentInviteCode: {
                type: "string",
                id: 19
              },
              parentNickName: {
                type: "string",
                id: 20
              },
              parentMobile: {
                type: "string",
                id: 21
              },
              parentEmail: {
                type: "string",
                id: 22
              },
              parentId: {
                type: "string",
                id: 23
              },
              operatingContent: {
                type: "string",
                id: 24
              },
              wechatId: {
                type: "string",
                id: 25
              },
              wechatQr: {
                type: "string",
                id: 26
              },
              lastLoginTime: {
                type: "string",
                id: 27
              },
              upgradeAmTime: {
                type: "string",
                id: 28
              },
              facebook: {
                type: "string",
                id: 29
              },
              googleplay: {
                type: "string",
                id: 30
              },
              lineKey: {
                type: "string",
                id: 31
              },
              signingAgreementTime: {
                type: "string",
                id: 32
              },
              brandLevel: {
                type: "int32",
                id: 33
              }
            }
          },
          ListUserByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              userManagePb: {
                rule: "repeated",
                type: "UserManagePb",
                id: 3
              }
            }
          },
          ListUserByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              mobile: {
                type: "string",
                id: 3
              },
              inviteCode: {
                type: "string",
                id: 4
              },
              nickName: {
                type: "string",
                id: 5
              },
              email: {
                type: "string",
                id: 6
              },
              memberLevel: {
                type: "int32",
                id: 7
              },
              parentId: {
                type: "string",
                id: 8
              },
              parentMobile: {
                type: "string",
                id: 9
              },
              parentNickName: {
                type: "string",
                id: 10
              },
              startTime: {
                type: "string",
                id: 11
              },
              endTime: {
                type: "string",
                id: 12
              },
              countryCode: {
                type: "string",
                id: 13
              }
            }
          },
          UserManageInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              userManagePb: {
                type: "UserManagePb",
                id: 2
              }
            }
          },
          SaveUserOperatingContentReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              operatingContent: {
                type: "string",
                id: 2
              }
            }
          },
          SaveUserOperatingContentResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AddressDoPb: {
            fields: {
              addressId: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              mobile: {
                type: "string",
                id: 4
              },
              detailAddress: {
                type: "string",
                id: 5
              },
              cityCode: {
                type: "string",
                id: 6
              },
              cityName: {
                type: "string",
                id: 7
              },
              stateCode: {
                type: "string",
                id: 8
              },
              stateName: {
                type: "string",
                id: 9
              },
              isDefault: {
                type: "int32",
                id: 10
              },
              status: {
                type: "int32",
                id: 11
              },
              createTime: {
                type: "string",
                id: 12
              },
              updateTime: {
                type: "string",
                id: 13
              },
              postcode: {
                type: "string",
                id: 14
              },
              countryAreaCode: {
                type: "int32",
                id: 15
              },
              countryCode: {
                type: "string",
                id: 16
              }
            }
          },
          ListAddressResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              addressDo: {
                rule: "repeated",
                type: "AddressDoPb",
                id: 2
              }
            }
          },
          MemberInformationDoPb: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              memberLevel: {
                type: "int32",
                id: 3
              },
              mobile: {
                type: "string",
                id: 4
              },
              inviteNumber: {
                type: "int32",
                id: 5
              },
              totalCommission: {
                type: "string",
                id: 6
              },
              cashAmount: {
                type: "string",
                id: 7
              },
              inviteCode: {
                type: "string",
                id: 8
              },
              parentInviteCode: {
                type: "string",
                id: 9
              },
              inviteTime: {
                type: "string",
                id: 10
              },
              memberTime: {
                type: "string",
                id: 11
              },
              status: {
                type: "int32",
                id: 12
              },
              createTime: {
                type: "string",
                id: 13
              },
              updateTime: {
                type: "string",
                id: 14
              },
              superiorId: {
                type: "string",
                id: 15
              },
              bindType: {
                type: "int32",
                id: 16
              },
              inviterId: {
                type: "string",
                id: 17
              },
              memberType: {
                type: "int32",
                id: 18
              },
              upgradeAtTime: {
                type: "string",
                id: 19
              }
            }
          },
          UserFatherPb: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              memberLevel: {
                type: "int32",
                id: 3
              },
              mobile: {
                type: "string",
                id: 4
              },
              inviteNumber: {
                type: "int32",
                id: 5
              },
              totalCommission: {
                type: "string",
                id: 6
              },
              cashAmount: {
                type: "string",
                id: 7
              },
              inviteCode: {
                type: "string",
                id: 8
              },
              parentInviteCode: {
                type: "string",
                id: 9
              },
              inviteTime: {
                type: "string",
                id: 10
              },
              memberTime: {
                type: "string",
                id: 11
              },
              status: {
                type: "int32",
                id: 12
              },
              createTime: {
                type: "string",
                id: 13
              },
              updateTime: {
                type: "string",
                id: 14
              },
              superiorId: {
                type: "string",
                id: 15
              },
              bindType: {
                type: "int32",
                id: 16
              },
              inviterId: {
                type: "string",
                id: 17
              },
              memberType: {
                type: "int32",
                id: 18
              },
              upgradeAtTime: {
                type: "string",
                id: 19
              },
              nickName: {
                type: "string",
                id: 20
              },
              headImg: {
                type: "string",
                id: 21
              }
            }
          },
          GetFatherChainResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              userFatherPb: {
                rule: "repeated",
                type: "UserFatherPb",
                id: 2
              }
            }
          },
          UserTeamMemberInfoPb: {
            fields: {
              oneMonthEarnings: {
                type: "string",
                id: 1
              },
              totalEarnings: {
                type: "string",
                id: 2
              },
              accountBalance: {
                type: "string",
                id: 3
              },
              oneMonthInviteNum: {
                type: "int32",
                id: 4
              },
              directInviteNum: {
                type: "int32",
                id: 5
              },
              teamMemberTotalCount: {
                type: "int32",
                id: 6
              },
              teamMemberCount: {
                type: "TeamMemberCountPb",
                id: 7
              }
            }
          },
          TeamMemberInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              userTeamMemberInfo: {
                type: "UserTeamMemberInfoPb",
                id: 2
              }
            }
          },
          UserConsumeInfoPb: {
            fields: {
              oneWeekConsumeAmount: {
                type: "string",
                id: 1
              },
              oneMonthConsumeAmount: {
                type: "string",
                id: 2
              },
              totalConsumeAmount: {
                type: "string",
                id: 3
              },
              oneWeekOrderCount: {
                type: "int32",
                id: 4
              },
              oneMonthOrderCount: {
                type: "int32",
                id: 5
              },
              totalOrderCount: {
                type: "int32",
                id: 6
              },
              payAmount: {
                rule: "repeated",
                type: "string",
                id: 7
              }
            }
          },
          UserConsumeInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              userConsumeInfo: {
                type: "UserConsumeInfoPb",
                id: 2
              }
            }
          },
          UserConsumeInfoReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              }
            }
          },
          SetMsgCodeReq: {
            fields: {
              mobile: {
                type: "string",
                id: 1
              },
              countryAreaCode: {
                type: "int32",
                id: 2
              },
              type: {
                type: "int32",
                id: 3
              },
              bizCode: {
                type: "string",
                id: 4
              }
            }
          },
          UserQuestionDoPb: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              type: {
                type: "int32",
                id: 2
              },
              questionDesc: {
                type: "string",
                id: 3
              },
              connectMode: {
                type: "string",
                id: 4
              },
              status: {
                type: "int32",
                id: 5
              },
              createTime: {
                type: "string",
                id: 6
              },
              updateTime: {
                type: "string",
                id: 7
              },
              userId: {
                type: "string",
                id: 8
              }
            }
          },
          ListQuestionByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              userQuestionDo: {
                rule: "repeated",
                type: "UserQuestionDoPb",
                id: 3
              }
            }
          },
          ListQuestionByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              type: {
                type: "int32",
                id: 3
              },
              startTime: {
                type: "string",
                id: 4
              },
              endTime: {
                type: "string",
                id: 5
              }
            }
          },
          AddMoneyReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              amount: {
                type: "string",
                id: 2
              },
              memo: {
                type: "string",
                id: 3
              },
              operator: {
                type: "string",
                id: 4
              },
              countryCode: {
                type: "string",
                id: 5
              },
              sourceType: {
                type: "int32",
                id: 6
              }
            }
          },
          PublishUpgradeEventReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              operator: {
                type: "string",
                id: 2
              }
            }
          },
          BindDisconnectReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              operator: {
                type: "string",
                id: 2
              }
            }
          },
          BindChangeReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              parentCode: {
                type: "string",
                id: 2
              },
              operator: {
                type: "string",
                id: 3
              }
            }
          },
          TestCreateOrderCommissionReq: {
            fields: {
              orderNo: {
                type: "string",
                id: 1
              },
              operator: {
                type: "string",
                id: 2
              }
            }
          },
          OrderCommissionRespPb: {
            fields: {
              memberLevelDesc: {
                type: "string",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 3
              },
              userId: {
                type: "string",
                id: 4
              },
              memberLevel: {
                type: "int32",
                id: 5
              },
              commissionStatus: {
                type: "int32",
                id: 8
              },
              createTime: {
                type: "string",
                id: 9
              },
              buyerId: {
                type: "string",
                id: 10
              },
              commissionType: {
                type: "int32",
                id: 11
              },
              commissionStatusDesc: {
                type: "string",
                id: 12
              },
              commissionTypeDesc: {
                type: "string",
                id: 13
              },
              orderSumYuan: {
                type: "string",
                id: 14
              },
              commissionAmountYuan: {
                type: "string",
                id: 15
              }
            }
          },
          TestCreateOrderCommissionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderCommissionResp: {
                rule: "repeated",
                type: "OrderCommissionRespPb",
                id: 2
              }
            }
          },
          AddMoneyByOrderNoReq: {
            fields: {
              orderNo: {
                type: "string",
                id: 1
              },
              commissionStatus: {
                type: "int32",
                id: 2
              },
              commissionType: {
                type: "int32",
                id: 3
              },
              operator: {
                type: "string",
                id: 4
              }
            }
          },
          UpdateFingoMasterInfoReq: {
            fields: {
              fingoMasterInfo: {
                type: "common.base.FingoMasterInfoPb",
                id: 1
              },
              operator: {
                type: "string",
                id: 2
              }
            }
          },
          ListFingoMasterInfoReq: {
            fields: {
              code: {
                type: "string",
                id: 1
              },
              nickName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          ListFingoMasterInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fingoMasterInfo: {
                rule: "repeated",
                type: "common.base.FingoMasterInfoPb",
                id: 2
              }
            }
          },
          ListOrderCommissionByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              userId: {
                type: "int32",
                id: 3
              },
              commissionType: {
                type: "int32",
                id: 4
              },
              commissionStatus: {
                type: "int32",
                id: 5
              },
              buyerId: {
                type: "int32",
                id: 6
              },
              startTime: {
                type: "string",
                id: 7
              },
              endTime: {
                type: "string",
                id: 8
              }
            }
          },
          ListOrderCommissionByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              orderCommissionResp: {
                rule: "repeated",
                type: "OrderCommissionRespPb",
                id: 3
              }
            }
          },
          UpdateUserMobileReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              mobile: {
                type: "string",
                id: 2
              },
              countryAreaCode: {
                type: "int32",
                id: 3
              },
              operator: {
                type: "string",
                id: 4
              }
            }
          },
          RemoveUserMobileReq: {
            fields: {
              mobile: {
                type: "string",
                id: 1
              },
              countryAreaCode: {
                type: "int32",
                id: 2
              }
            }
          },
          UplevelReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              memberType: {
                type: "int32",
                id: 2
              },
              source: {
                type: "int32",
                id: 3
              },
              target: {
                type: "int32",
                id: 4
              },
              operator: {
                type: "string",
                id: 5
              }
            }
          },
          BatchAddMoneyReq: {
            fields: {
              url: {
                type: "string",
                id: 1
              }
            }
          },
          BatchAddMoneyResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          BatchRegisterReq: {
            fields: {
              url: {
                type: "string",
                id: 1
              }
            }
          },
          BatchRegisterResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          ChangeUserCountryReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              orgCountryCode: {
                type: "string",
                id: 2
              },
              newCountryCode: {
                type: "string",
                id: 3
              }
            }
          },
          ChangeUserCountryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetBrandSalesInfoReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              }
            }
          },
          GetBrandSalesInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              selfBuying: {
                type: "string",
                id: 2
              },
              selfSales: {
                type: "string",
                id: 3
              },
              effTeamSales: {
                type: "string",
                id: 4
              },
              totalTeamSales: {
                type: "string",
                id: 5
              },
              effTeamUsd: {
                type: "string",
                id: 6
              }
            }
          },
          AddFakeUserReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              nickName: {
                type: "string",
                id: 2
              },
              headImg: {
                type: "string",
                id: 3
              },
              presetData: {
                type: "int32",
                id: 4
              },
              presetDate: {
                type: "string",
                id: 5
              },
              channel: {
                type: "int32",
                id: 6
              }
            }
          },
          EditFakeUserReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              nickName: {
                type: "string",
                id: 3
              },
              headImg: {
                type: "string",
                id: 4
              },
              presetData: {
                type: "int32",
                id: 5
              },
              presetDate: {
                type: "string",
                id: 6
              },
              channel: {
                type: "int32",
                id: 8
              }
            }
          },
          DeleteFakeUserReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          ListPageFakeUserReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              presetDateStart: {
                type: "string",
                id: 2
              },
              presetDateEnd: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              },
              channel: {
                type: "int32",
                id: 5
              },
              id: {
                type: "int32",
                id: 6
              }
            }
          },
          FakeUserInfo: {
            fields: {
              headImg: {
                type: "string",
                id: 1
              },
              nickName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              presetData: {
                type: "int32",
                id: 4
              },
              presetDate: {
                type: "string",
                id: 5
              },
              operatorName: {
                type: "string",
                id: 6
              },
              operatorId: {
                type: "string",
                id: 7
              },
              updateTime: {
                type: "string",
                id: 8
              },
              channel: {
                type: "int32",
                id: 9
              },
              id: {
                type: "int32",
                id: 10
              }
            }
          },
          ListPageFakeUserResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fakeUserInfo: {
                rule: "repeated",
                type: "FakeUserInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          UserBossService: {
            methods: {
              ListTeamMemberByPage: {
                requestType: "ListTeamMemberByPageReq",
                responseType: "ListTeamMemberByPageResp"
              },
              ListUserOrderByPage: {
                requestType: "ListUserOrderByPageReq",
                responseType: "ListUserOrderByPageResp"
              },
              ListUserByPage: {
                requestType: "ListUserByPageReq",
                responseType: "ListUserByPageResp"
              },
              GetUserManageInfo: {
                requestType: "UserIdReq",
                responseType: "UserManageInfoResp"
              },
              SaveUserOperatingContent: {
                requestType: "SaveUserOperatingContentReq",
                responseType: "SaveUserOperatingContentResp"
              },
              ListAddress: {
                requestType: "UserIdReq",
                responseType: "ListAddressResp"
              },
              GetFatherChain: {
                requestType: "UserIdReq",
                responseType: "GetFatherChainResp"
              },
              TeamMemberInfo: {
                requestType: "UserIdReq",
                responseType: "TeamMemberInfoResp"
              },
              UserConsumeInfo: {
                requestType: "UserConsumeInfoReq",
                responseType: "UserConsumeInfoResp"
              },
              SetMsgCode: {
                requestType: "SetMsgCodeReq",
                responseType: "StringResp"
              },
              ListQuestionByPage: {
                requestType: "ListQuestionByPageReq",
                responseType: "ListQuestionByPageResp"
              }
            }
          },
          UserExtendBossService: {
            methods: {
              AddMoney: {
                requestType: "AddMoneyReq",
                responseType: "BooleanResp"
              },
              PublishUpgradeEvent: {
                requestType: "PublishUpgradeEventReq",
                responseType: "BooleanResp"
              },
              BindDisconnect: {
                requestType: "BindDisconnectReq",
                responseType: "BooleanResp"
              },
              BindChange: {
                requestType: "BindChangeReq",
                responseType: "BooleanResp"
              },
              TestCreateOrderCommission: {
                requestType: "TestCreateOrderCommissionReq",
                responseType: "TestCreateOrderCommissionResp"
              },
              AddMoneyByOrderNo: {
                requestType: "AddMoneyByOrderNoReq",
                responseType: "BooleanResp"
              },
              UpdateFingoMasterInfo: {
                requestType: "UpdateFingoMasterInfoReq",
                responseType: "BooleanResp"
              },
              ListFingoMasterInfo: {
                requestType: "ListFingoMasterInfoReq",
                responseType: "ListFingoMasterInfoResp"
              },
              ListOrderCommissionByPage: {
                requestType: "ListOrderCommissionByPageReq",
                responseType: "ListOrderCommissionByPageResp"
              },
              Uplevel: {
                requestType: "UplevelReq",
                responseType: "BooleanResp"
              },
              RemoveUserMobile: {
                requestType: "RemoveUserMobileReq",
                responseType: "BooleanResp"
              },
              UpdateUserMobile: {
                requestType: "UpdateUserMobileReq",
                responseType: "BooleanResp"
              },
              BatchAddMoney: {
                requestType: "BatchAddMoneyReq",
                responseType: "BatchAddMoneyResp"
              },
              BatchRegister: {
                requestType: "BatchRegisterReq",
                responseType: "BatchRegisterResp"
              },
              ChangeUserCountry: {
                requestType: "ChangeUserCountryReq",
                responseType: "ChangeUserCountryResp"
              },
              GetBrandSalesInfo: {
                requestType: "GetBrandSalesInfoReq",
                responseType: "GetBrandSalesInfoResp"
              }
            }
          },
          FakeUserService: {
            methods: {
              AddFakeUser: {
                requestType: "AddFakeUserReq",
                responseType: "BooleanResp"
              },
              EditFakeUser: {
                requestType: "EditFakeUserReq",
                responseType: "BooleanResp"
              },
              DeleteFakeUser: {
                requestType: "DeleteFakeUserReq",
                responseType: "BooleanResp"
              },
              ListPageFakeUser: {
                requestType: "ListPageFakeUserReq",
                responseType: "ListPageFakeUserResp"
              }
            }
          }
        }
      },
      order: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.order",
          java_outer_classname: "Order"
        },
        nested: {
          TimeType: {
            values: {
              CREATE_TIME: 0,
              PAY_TIME: 1
            }
          },
          ProductSnapshot: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              skuId: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              afterPledge: {
                rule: "repeated",
                type: "AfterSalePledge",
                id: 4
              },
              arrivalPledge: {
                rule: "repeated",
                type: "ArrivalPledge",
                id: 5
              },
              activity: {
                rule: "repeated",
                type: "Activity",
                id: 6
              },
              promotion: {
                rule: "repeated",
                type: "Promotion",
                id: 7
              },
              coupon: {
                rule: "repeated",
                type: "Coupon",
                id: 8
              },
              attr: {
                rule: "repeated",
                type: "Attribute",
                id: 9
              },
              freightTemplate: {
                type: "FreightTemplate",
                id: 10
              },
              num: {
                type: "int32",
                id: 11
              },
              returnNum: {
                type: "int32",
                id: 12
              },
              price: {
                type: "string",
                id: 13
              },
              skuCover: {
                type: "string",
                id: 14
              },
              couponDiscount: {
                type: "string",
                id: 15
              },
              promotionDiscount: {
                type: "string",
                id: 16
              },
              payable: {
                type: "string",
                id: 17
              },
              afterStatus: {
                type: "common.enum.OrderEnum.AfterStatus",
                id: 18
              },
              afterId: {
                type: "string",
                id: 19
              },
              dataVersion: {
                type: "int32",
                id: 20
              }
            },
            nested: {
              Activity: {
                fields: {
                  activityId: {
                    type: "string",
                    id: 1
                  },
                  icon: {
                    type: "string",
                    id: 2
                  }
                }
              },
              Promotion: {
                fields: {
                  promotionId: {
                    type: "string",
                    id: 1
                  },
                  type: {
                    type: "common.enum.PromotionEnum.PromotionType",
                    id: 2
                  },
                  label: {
                    type: "string",
                    id: 3
                  }
                }
              },
              Coupon: {
                fields: {
                  couponId: {
                    type: "string",
                    id: 1
                  },
                  label: {
                    type: "string",
                    id: 2
                  }
                }
              },
              Attribute: {
                fields: {
                  attrId: {
                    type: "string",
                    id: 1
                  },
                  attrLabel: {
                    type: "string",
                    id: 2
                  },
                  valueId: {
                    type: "string",
                    id: 3
                  },
                  valueLabel: {
                    type: "string",
                    id: 4
                  }
                }
              },
              AfterSalePledge: {
                fields: {
                  pledgeId: {
                    type: "uint64",
                    id: 1
                  },
                  label: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ArrivalPledge: {
                fields: {
                  pledgeId: {
                    type: "uint64",
                    id: 1
                  },
                  label: {
                    type: "string",
                    id: 2
                  }
                }
              },
              FreightTemplate: {
                fields: {
                  templateId: {
                    type: "string",
                    id: 1
                  },
                  templateName: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          SuborderItem: {
            fields: {
              suborderId: {
                type: "string",
                id: 1
              },
              status: {
                type: "common.enum.OrderEnum.OrderStatus",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              warehouseNo: {
                type: "string",
                id: 4
              },
              splitType: {
                type: "string",
                id: 5
              }
            }
          },
          OrderProductItem: {
            fields: {
              productSnap: {
                type: "ProductSnapshot",
                id: 1
              },
              suborderItem: {
                rule: "repeated",
                type: "SuborderItem",
                id: 2
              },
              deliveryDeadline: {
                type: "string",
                id: 3
              }
            }
          },
          OrderListFilterCond: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "uint64",
                id: 2
              },
              endTime: {
                type: "uint64",
                id: 3
              },
              timeType: {
                type: "TimeType",
                id: 4
              },
              orderType: {
                rule: "repeated",
                type: "common.enum.OrderEnum.OrderType",
                id: 5
              },
              orderStatus: {
                rule: "repeated",
                type: "common.enum.OrderEnum.OrderStatus",
                id: 6
              },
              suborderStatus: {
                rule: "repeated",
                type: "common.enum.OrderEnum.OrderStatus",
                id: 7
              },
              productId: {
                type: "string",
                id: 8
              },
              skuId: {
                type: "string",
                id: 9
              },
              productName: {
                type: "string",
                id: 10
              },
              countryCode: {
                type: "string",
                id: 11
              },
              userId: {
                type: "string",
                id: 12
              },
              parentId: {
                type: "string",
                id: 13
              },
              deliveryWay: {
                type: "common.enum.ProductEnum.DeliveryWay",
                id: 14
              },
              payWay: {
                type: "common.enum.PolyPayEnum.PayWay",
                id: 15
              },
              chargeAccountNo: {
                type: "string",
                id: 22
              }
            }
          },
          GetOrderListRequest: {
            fields: {
              cond: {
                type: "OrderListFilterCond",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          GetOrderListResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              item: {
                rule: "repeated",
                type: "OrderItem",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              ActivityInfo: {
                fields: {
                  activityId: {
                    type: "string",
                    id: 1
                  },
                  icon: {
                    type: "string",
                    id: 2
                  },
                  activityPrice: {
                    type: "string",
                    id: 3
                  }
                }
              },
              PromotionInfo: {
                fields: {
                  promotionId: {
                    type: "string",
                    id: 1
                  },
                  type: {
                    type: "common.enum.PromotionEnum.PromotionType",
                    id: 2
                  },
                  discountAmount: {
                    type: "string",
                    id: 3
                  },
                  label: {
                    type: "string",
                    id: 4
                  }
                }
              },
              CouponInfo: {
                fields: {
                  couponId: {
                    type: "string",
                    id: 1
                  },
                  discountAmount: {
                    type: "string",
                    id: 2
                  },
                  label: {
                    type: "string",
                    id: 3
                  }
                }
              },
              OrderItem: {
                fields: {
                  orderId: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  },
                  currency: {
                    type: "string",
                    id: 3
                  },
                  status: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 4
                  },
                  createTime: {
                    type: "string",
                    id: 5
                  },
                  payTime: {
                    type: "string",
                    id: 6
                  },
                  userId: {
                    type: "string",
                    id: 7
                  },
                  username: {
                    type: "string",
                    id: 8
                  },
                  userLevel: {
                    type: "int32",
                    id: 9
                  },
                  userParentId: {
                    type: "string",
                    id: 10
                  },
                  userParentName: {
                    type: "string",
                    id: 11
                  },
                  userParentLevel: {
                    type: "int32",
                    id: 12
                  },
                  receiverName: {
                    type: "string",
                    id: 13
                  },
                  receiverPhone: {
                    type: "string",
                    id: 14
                  },
                  receiverAddress: {
                    type: "string",
                    id: 15
                  },
                  remark: {
                    type: "string",
                    id: 16
                  },
                  remarkBack: {
                    type: "string",
                    id: 17
                  },
                  activityInfo: {
                    rule: "repeated",
                    type: "ActivityInfo",
                    id: 18
                  },
                  promotionInfo: {
                    rule: "repeated",
                    type: "PromotionInfo",
                    id: 19
                  },
                  couponInfo: {
                    rule: "repeated",
                    type: "CouponInfo",
                    id: 20
                  },
                  usePoints: {
                    type: "string",
                    id: 21
                  },
                  productCount: {
                    type: "int32",
                    id: 22
                  },
                  paied: {
                    type: "string",
                    id: 23
                  },
                  freight: {
                    type: "string",
                    id: 24
                  },
                  payCurrency: {
                    type: "string",
                    id: 25
                  },
                  productItem: {
                    rule: "repeated",
                    type: "OrderProductItem",
                    id: 26
                  },
                  logicType: {
                    type: "int32",
                    id: 27
                  },
                  cityCode: {
                    type: "string",
                    id: 28
                  },
                  stateCode: {
                    type: "string",
                    id: 29
                  },
                  postcode: {
                    type: "string",
                    id: 30
                  },
                  orderType: {
                    type: "common.enum.OrderEnum.OrderType",
                    id: 31
                  },
                  chargeAccountNo: {
                    type: "string",
                    id: 32
                  }
                }
              }
            }
          },
          GetOrderDetailRequest: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              }
            }
          },
          GetOrderDetailResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderInfo: {
                type: "OrderInfo",
                id: 2
              },
              productInfo: {
                type: "ProductInfo",
                id: 3
              },
              receiverInfo: {
                type: "ReceiverInfo",
                id: 4
              },
              pointsInfo: {
                type: "PointsInfo",
                id: 5
              }
            },
            nested: {
              OrderInfo: {
                fields: {
                  countryCode: {
                    type: "string",
                    id: 1
                  },
                  orderStatus: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 2
                  },
                  orderType: {
                    type: "common.enum.OrderEnum.OrderType",
                    id: 3
                  },
                  totalAmount: {
                    type: "string",
                    id: 4
                  },
                  createTime: {
                    type: "string",
                    id: 5
                  },
                  payTime: {
                    type: "string",
                    id: 6
                  },
                  receiveTime: {
                    type: "string",
                    id: 7
                  },
                  usePoints: {
                    type: "string",
                    id: 8
                  },
                  paied: {
                    type: "string",
                    id: 9
                  },
                  transCode: {
                    type: "string",
                    id: 10
                  },
                  payWay: {
                    type: "common.enum.PolyPayEnum.PayWay",
                    id: 11
                  },
                  paySupplier: {
                    type: "string",
                    id: 12
                  },
                  userId: {
                    type: "string",
                    id: 13
                  },
                  nickname: {
                    type: "string",
                    id: 14
                  },
                  userLevel: {
                    type: "int32",
                    id: 15
                  },
                  parentId: {
                    type: "string",
                    id: 16
                  },
                  parentNick: {
                    type: "string",
                    id: 17
                  },
                  parentLevel: {
                    type: "int32",
                    id: 18
                  },
                  currency: {
                    type: "string",
                    id: 19
                  },
                  paiedCurrency: {
                    type: "string",
                    id: 20
                  },
                  logicType: {
                    type: "int32",
                    id: 21
                  },
                  chargeAccountNo: {
                    type: "string",
                    id: 22
                  }
                }
              },
              ProductInfo: {
                fields: {
                  totalPrice: {
                    type: "string",
                    id: 1
                  },
                  coupon: {
                    type: "string",
                    id: 2
                  },
                  promotion: {
                    type: "string",
                    id: 3
                  },
                  payable: {
                    type: "string",
                    id: 4
                  },
                  refund: {
                    type: "string",
                    id: 5
                  },
                  couponId: {
                    type: "string",
                    id: 6
                  },
                  couponLable: {
                    type: "string",
                    id: 7
                  },
                  freight: {
                    type: "string",
                    id: 8
                  },
                  productItem: {
                    rule: "repeated",
                    type: "OrderProductItem",
                    id: 9
                  }
                }
              },
              ReceiverInfo: {
                fields: {
                  receiverName: {
                    type: "string",
                    id: 1
                  },
                  receiverPhone: {
                    type: "string",
                    id: 2
                  },
                  receiverAddress: {
                    type: "string",
                    id: 3
                  },
                  remark: {
                    type: "string",
                    id: 4
                  },
                  cityCode: {
                    type: "string",
                    id: 5
                  },
                  stateCode: {
                    type: "string",
                    id: 6
                  },
                  postcode: {
                    type: "string",
                    id: 7
                  }
                }
              },
              SkuPointsInfo: {
                fields: {
                  skuCover: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  points: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  }
                }
              },
              PointsTitle: {
                fields: {
                  userId: {
                    type: "string",
                    id: 1
                  },
                  userLevel: {
                    type: "int32",
                    id: 2
                  },
                  nickname: {
                    type: "string",
                    id: 3
                  },
                  currency: {
                    type: "string",
                    id: 4
                  },
                  pointType: {
                    type: "int32",
                    id: 5
                  }
                }
              },
              PointsInfo: {
                fields: {
                  title: {
                    rule: "repeated",
                    type: "PointsTitle",
                    id: 1
                  },
                  skuPointsInfo: {
                    rule: "repeated",
                    type: "SkuPointsInfo",
                    id: 2
                  },
                  pointsVerticalSum: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  },
                  pointsHorizontalSum: {
                    rule: "repeated",
                    type: "string",
                    id: 4
                  }
                }
              }
            }
          },
          ExportOrderRequest: {
            fields: {
              cond: {
                type: "OrderListFilterCond",
                id: 1
              }
            }
          },
          ExportOrderResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          ViewAfterFilterCond: {
            fields: {}
          },
          ViewAfterListRequest: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              productName: {
                type: "string",
                id: 2
              },
              userPhone: {
                type: "string",
                id: 3
              },
              receiverPhone: {
                type: "string",
                id: 4
              },
              prarentPhone: {
                type: "string",
                id: 5
              },
              afterStatus: {
                type: "common.enum.OrderEnum.AfterStatus",
                id: 6
              },
              startTime: {
                type: "string",
                id: 7
              },
              endTime: {
                type: "string",
                id: 8
              },
              page: {
                type: "common.base.Pagination",
                id: 9
              }
            }
          },
          ViewAfterListResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              afterItem: {
                rule: "repeated",
                type: "OrderAfterItem",
                id: 3
              }
            },
            nested: {
              ProductItem: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  skuCover: {
                    type: "string",
                    id: 3
                  },
                  snapCode: {
                    type: "string",
                    id: 4
                  },
                  productName: {
                    type: "string",
                    id: 5
                  },
                  num: {
                    type: "int32",
                    id: 6
                  },
                  attr: {
                    rule: "repeated",
                    type: "string",
                    id: 7
                  },
                  paied: {
                    type: "string",
                    id: 8
                  },
                  orderTime: {
                    type: "string",
                    id: 9
                  }
                }
              },
              RefundInfo: {
                fields: {
                  applyRefund: {
                    type: "string",
                    id: 1
                  },
                  finalRefund: {
                    type: "string",
                    id: 2
                  },
                  reason: {
                    type: "string",
                    id: 3
                  },
                  remark: {
                    type: "string",
                    id: 4
                  }
                }
              },
              BankInfo: {
                fields: {
                  cardholder: {
                    type: "string",
                    id: 1
                  },
                  cardNo: {
                    type: "string",
                    id: 2
                  },
                  bankName: {
                    type: "string",
                    id: 3
                  }
                }
              },
              OrderAfterItem: {
                fields: {
                  orderId: {
                    type: "string",
                    id: 1
                  },
                  afterId: {
                    type: "string",
                    id: 2
                  },
                  isReceived: {
                    type: "bool",
                    id: 3
                  },
                  refundType: {
                    type: "common.enum.OrderEnum.RefundType",
                    id: 4
                  },
                  pictures: {
                    rule: "repeated",
                    type: "string",
                    id: 5
                  },
                  bankInfo: {
                    type: "BankInfo",
                    id: 6
                  },
                  userId: {
                    type: "string",
                    id: 7
                  },
                  expressNo: {
                    type: "string",
                    id: 8
                  },
                  afterStatus: {
                    type: "common.enum.OrderEnum.AfterStatus",
                    id: 9
                  },
                  applyTime: {
                    type: "string",
                    id: 10
                  },
                  productItem: {
                    rule: "repeated",
                    type: "ProductItem",
                    id: 11
                  },
                  refundInfo: {
                    type: "RefundInfo",
                    id: 12
                  },
                  freight: {
                    type: "string",
                    id: 13
                  },
                  currency: {
                    type: "string",
                    id: 14
                  }
                }
              }
            }
          },
          ExportAfterRequest: {
            fields: {
              cond: {
                type: "ViewAfterFilterCond",
                id: 1
              }
            }
          },
          ExportAfterResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          AddOrderRemarkRequest: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              remark: {
                type: "string",
                id: 2
              }
            }
          },
          AddOrderRemarkRespone: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          MemberOrderListReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              orderId: {
                type: "string",
                id: 2
              },
              returnType: {
                rule: "repeated",
                type: "ReturnType",
                id: 3
              },
              status: {
                rule: "repeated",
                type: "common.enum.OrderEnum.OrderStatus",
                id: 4
              },
              page: {
                type: "common.base.Pagination",
                id: 5
              }
            },
            nested: {
              ReturnType: {
                values: {
                  RETURNED: 0,
                  NOT_RETURNED: 1
                }
              }
            }
          },
          MemberOrderListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderItem: {
                rule: "repeated",
                type: "OrderItem",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              OrderItem: {
                fields: {
                  orderId: {
                    type: "string",
                    id: 1
                  },
                  orderTime: {
                    type: "string",
                    id: 2
                  },
                  orderAmount: {
                    type: "string",
                    id: 3
                  },
                  address: {
                    type: "string",
                    id: 4
                  },
                  status: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 5
                  }
                }
              }
            }
          },
          MemberOrderDetailReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              }
            }
          },
          MemberOrderDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productItem: {
                rule: "repeated",
                type: "ProductItem",
                id: 2
              },
              receiverName: {
                type: "string",
                id: 3
              },
              receiverPhone: {
                type: "string",
                id: 4
              },
              receiverAddress: {
                type: "string",
                id: 5
              }
            },
            nested: {
              ProductItem: {
                fields: {
                  productName: {
                    type: "string",
                    id: 1
                  },
                  attr: {
                    type: "string",
                    id: 2
                  },
                  num: {
                    type: "int32",
                    id: 3
                  },
                  price: {
                    type: "string",
                    id: 4
                  },
                  pointsReturn: {
                    type: "string",
                    id: 5
                  }
                }
              }
            }
          },
          UpdateReceiverAddressReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              stateCode: {
                type: "string",
                id: 2
              },
              cityCode: {
                type: "string",
                id: 3
              },
              postcode: {
                type: "string",
                id: 4
              },
              detail: {
                type: "string",
                id: 5
              },
              receiverName: {
                type: "string",
                id: 7
              },
              receiverPhone: {
                type: "string",
                id: 8
              }
            }
          },
          UpdateReceiverAddressResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CreateAfterRequest: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              bankCardId: {
                type: "string",
                id: 2
              },
              afterType: {
                type: "common.enum.OrderEnum.AfterSaleType",
                id: 3
              },
              remark: {
                type: "string",
                id: 4
              },
              refundType: {
                type: "common.enum.OrderEnum.RefundType",
                id: 5
              },
              isReceived: {
                type: "bool",
                id: 6
              },
              isReturnFreight: {
                type: "bool",
                id: 7
              },
              product: {
                rule: "repeated",
                type: "AfterProduct",
                id: 8
              }
            },
            nested: {
              OutOrder: {
                fields: {
                  outId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  cancelCount: {
                    type: "int32",
                    id: 3
                  },
                  outStatus: {
                    type: "common.enum.ErpEnum.OutOrderStatus",
                    id: 4
                  }
                }
              },
              AfterProduct: {
                fields: {
                  skuId: {
                    type: "string",
                    id: 1
                  },
                  totalCount: {
                    type: "int32",
                    id: 2
                  },
                  reason: {
                    type: "string",
                    id: 3
                  },
                  out: {
                    rule: "repeated",
                    type: "OutOrder",
                    id: 4
                  }
                }
              }
            }
          },
          CreateAfterResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          CustomerOrderListReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              phone: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          CustomerOrderListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderItem: {
                rule: "repeated",
                type: "OrderItem",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              OrderProductItem: {
                fields: {
                  skuCode: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  skuCover: {
                    type: "string",
                    id: 3
                  },
                  productName: {
                    type: "string",
                    id: 4
                  },
                  attribute: {
                    type: "string",
                    id: 5
                  },
                  count: {
                    type: "string",
                    id: 6
                  },
                  realPrice: {
                    type: "string",
                    id: 7
                  },
                  afterCount: {
                    type: "int32",
                    id: 8
                  },
                  reviewCount: {
                    type: "int32",
                    id: 9
                  },
                  orderId: {
                    type: "string",
                    id: 10
                  }
                }
              },
              OrderItem: {
                fields: {
                  orderId: {
                    type: "string",
                    id: 1
                  },
                  userId: {
                    type: "string",
                    id: 2
                  },
                  orderStatus: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 3
                  },
                  orderAmount: {
                    type: "string",
                    id: 4
                  },
                  freight: {
                    type: "string",
                    id: 5
                  },
                  currency: {
                    type: "string",
                    id: 6
                  },
                  payWay: {
                    type: "common.enum.PolyPayEnum.PayWay",
                    id: 7
                  },
                  products: {
                    rule: "repeated",
                    type: "OrderProductItem",
                    id: 8
                  }
                }
              }
            }
          },
          OutOrderListReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              skuId: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          OutOrderListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              item: {
                rule: "repeated",
                type: "OutOrderItem",
                id: 2
              }
            },
            nested: {
              OutOrder: {
                fields: {
                  outId: {
                    type: "string",
                    id: 1
                  },
                  count: {
                    type: "int32",
                    id: 2
                  },
                  outStatus: {
                    type: "common.enum.ErpEnum.OutOrderStatus",
                    id: 3
                  }
                }
              },
              SkuCodeItem: {
                fields: {
                  skuId: {
                    type: "string",
                    id: 1
                  },
                  skuCount: {
                    type: "int32",
                    id: 2
                  },
                  outOrder: {
                    rule: "repeated",
                    type: "OutOrder",
                    id: 3
                  }
                }
              },
              OutOrderItem: {
                fields: {
                  superSkuId: {
                    type: "string",
                    id: 1
                  },
                  sku: {
                    rule: "repeated",
                    type: "SkuCodeItem",
                    id: 4
                  }
                }
              }
            }
          },
          AfterReasonReq: {
            fields: {}
          },
          AfterReasonResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              statusReason: {
                keyType: "int32",
                type: "ReasonList",
                id: 2
              }
            },
            nested: {
              Reason: {
                fields: {
                  code: {
                    type: "int32",
                    id: 1
                  },
                  desc: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ReasonList: {
                fields: {
                  reason: {
                    rule: "repeated",
                    type: "Reason",
                    id: 1
                  }
                }
              }
            }
          },
          ShipOrderListReq: {
            fields: {
              orderId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              suborderId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              supplierId: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              subStatus: {
                rule: "repeated",
                type: "common.enum.OrderEnum.OrderStatus",
                id: 4
              },
              receiveName: {
                type: "string",
                id: 5
              },
              receiverPhone: {
                type: "string",
                id: 6
              },
              orderTimeStart: {
                type: "string",
                id: 7
              },
              orderTimeEnd: {
                type: "string",
                id: 8
              },
              page: {
                type: "common.base.Pagination",
                id: 9
              },
              shipType: {
                type: "int32",
                id: 10
              }
            }
          },
          ShipOrderListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderItem: {
                rule: "repeated",
                type: "ShipOrderItem",
                id: 2
              },
              totalCount: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              ExpressInfo: {
                fields: {
                  expressNo: {
                    type: "string",
                    id: 1
                  },
                  expressCompany: {
                    type: "string",
                    id: 2
                  }
                }
              },
              ProductInfo: {
                fields: {
                  productName: {
                    type: "string",
                    id: 1
                  },
                  attribute: {
                    type: "string",
                    id: 2
                  },
                  count: {
                    type: "int32",
                    id: 3
                  },
                  skuCode: {
                    type: "string",
                    id: 4
                  },
                  skuCover: {
                    type: "string",
                    id: 5
                  }
                }
              },
              ShipOrderItem: {
                fields: {
                  orderId: {
                    type: "string",
                    id: 1
                  },
                  orderStatus: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 2
                  },
                  suborderId: {
                    type: "string",
                    id: 3
                  },
                  orderTime: {
                    type: "string",
                    id: 4
                  },
                  subStatus: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 5
                  },
                  receiverName: {
                    type: "string",
                    id: 6
                  },
                  receiverPhone: {
                    type: "string",
                    id: 7
                  },
                  address: {
                    type: "string",
                    id: 8
                  },
                  expressInfo: {
                    rule: "repeated",
                    type: "ExpressInfo",
                    id: 9
                  },
                  productInfo: {
                    rule: "repeated",
                    type: "ProductInfo",
                    id: 10
                  },
                  shipType: {
                    type: "int32",
                    id: 11
                  }
                }
              }
            }
          },
          AddExpressNoRequest: {
            fields: {
              suborderId: {
                type: "string",
                id: 1
              },
              orderId: {
                type: "string",
                id: 2
              },
              expressInfo: {
                rule: "repeated",
                type: "ExpressInfo",
                id: 3
              }
            },
            nested: {
              ExpressInfo: {
                fields: {
                  expressNo: {
                    type: "string",
                    id: 1
                  },
                  expressCompany: {
                    type: "string",
                    id: 2
                  },
                  expressCode: {
                    type: "string",
                    id: 3
                  }
                }
              }
            }
          },
          AddExpressNoResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UploadExpressNoRequest: {
            fields: {
              url: {
                type: "string",
                id: 1
              }
            }
          },
          UploadExpressNoResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          HandlerAfterRequest: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              afterId: {
                type: "string",
                id: 2
              },
              handlerType: {
                type: "HandlerType",
                id: 3
              },
              amount: {
                type: "string",
                id: 4
              }
            },
            nested: {
              HandlerType: {
                values: {
                  REFUND_SUCCESS: 0,
                  REFUND_FAILED: 1,
                  REFUSE: 2,
                  REJECT: 3
                }
              }
            }
          },
          HandlerAfterResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetAfterSaleProductRequest: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              }
            }
          },
          GetAfterSaleProductResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              afterSaleOrderProduct: {
                rule: "repeated",
                type: "AfterSaleOrderProduct",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              }
            },
            nested: {
              AfterSaleOrderProduct: {
                fields: {
                  productItem: {
                    type: "OrderProductItem",
                    id: 1
                  },
                  calAfterSalesAmount: {
                    type: "CalAfterSalesAmount",
                    id: 2
                  },
                  gift: {
                    type: "int32",
                    id: 3
                  },
                  outOrderCount: {
                    type: "int32",
                    id: 4
                  }
                }
              }
            }
          },
          ModifyAfterSaleRequest: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              },
              refundProductAmount: {
                type: "string",
                id: 2
              },
              refundFreight: {
                type: "string",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              },
              refundType: {
                type: "int32",
                id: 5
              },
              refundCardNo: {
                type: "string",
                id: 6
              },
              refundCardholder: {
                type: "string",
                id: 7
              },
              refundBankName: {
                type: "string",
                id: 8
              },
              refundTel: {
                type: "string",
                id: 9
              },
              refundMail: {
                type: "string",
                id: 10
              }
            }
          },
          ModifyAfterSaleResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          RejectApplyRequest: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          RejectApplyResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DelayProcessingRequest: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DelayProcessingResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BatchApprovedRequest: {
            fields: {
              refundId: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          BatchApprovedResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AuditPassRequest: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          AuditPassResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          RefundSuccessRequest: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              }
            }
          },
          RefundSuccessResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AfterSaleInfoRequest: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              }
            }
          },
          AfterSaleInfoResponse: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              },
              afterSaleProduct: {
                type: "AfterSaleProduct",
                id: 2
              },
              refundAmount: {
                type: "string",
                id: 3
              },
              refundFreight: {
                type: "string",
                id: 4
              },
              refundReason: {
                type: "string",
                id: 5
              },
              refundStatus: {
                type: "int32",
                id: 6
              },
              applyTime: {
                type: "string",
                id: 7
              },
              suborderStatus: {
                type: "int32",
                id: 8
              },
              suborderId: {
                type: "string",
                id: 9
              },
              orderId: {
                type: "string",
                id: 10
              },
              payTime: {
                type: "string",
                id: 11
              },
              deliveryTime: {
                type: "string",
                id: 12
              },
              expressName: {
                type: "string",
                id: 13
              },
              expressNo: {
                type: "string",
                id: 14
              },
              refundType: {
                type: "int32",
                id: 15
              },
              refundCardNo: {
                type: "string",
                id: 16
              },
              refundCardholder: {
                type: "string",
                id: 17
              },
              refundBankName: {
                type: "string",
                id: 18
              },
              historyItem: {
                rule: "repeated",
                type: "HistoryItem",
                id: 19
              },
              afterType: {
                type: "int32",
                id: 20
              },
              orderStatus: {
                type: "int32",
                id: 21
              },
              currency: {
                type: "string",
                id: 22
              },
              userId: {
                type: "string",
                id: 23
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 24
              },
              message: {
                type: "string",
                id: 25
              },
              refundProductAmount: {
                type: "string",
                id: 26
              },
              mobile: {
                type: "string",
                id: 27
              },
              email: {
                type: "string",
                id: 28
              }
            }
          },
          HistoryItem: {
            fields: {
              title: {
                type: "string",
                id: 1
              },
              operateTime: {
                type: "string",
                id: 2
              },
              subtitle: {
                type: "string",
                id: 3
              },
              historyEntry: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              picture: {
                rule: "repeated",
                type: "string",
                id: 5
              }
            }
          },
          AfterSaleProduct: {
            fields: {
              productId: {
                type: "string",
                id: 3
              },
              skuId: {
                type: "string",
                id: 4
              },
              picture: {
                type: "string",
                id: 5
              },
              title: {
                type: "string",
                id: 6
              },
              num: {
                type: "int32",
                id: 7
              },
              attr: {
                rule: "repeated",
                type: "Attribute",
                id: 8
              },
              price: {
                type: "string",
                id: 9
              },
              refundNum: {
                type: "int32",
                id: 10
              },
              type: {
                type: "int32",
                id: 11
              },
              salePrice: {
                type: "string",
                id: 12
              },
              paidCurrency: {
                type: "string",
                id: 13
              },
              saleCurrency: {
                type: "string",
                id: 14
              }
            }
          },
          AfterSalePageRequest: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "uint64",
                id: 2
              },
              endTime: {
                type: "uint64",
                id: 3
              },
              refundStatus: {
                type: "int32",
                id: 4
              },
              orderType: {
                type: "common.enum.OrderEnum.OrderType",
                id: 5
              },
              productId: {
                type: "string",
                id: 6
              },
              skuId: {
                type: "string",
                id: 7
              },
              productName: {
                type: "string",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 9
              },
              userId: {
                type: "string",
                id: 10
              },
              refundId: {
                type: "string",
                id: 11
              },
              page: {
                type: "common.base.Pagination",
                id: 12
              },
              orderBy: {
                type: "string",
                id: 13
              }
            }
          },
          AfterSalePageResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              afterSale: {
                rule: "repeated",
                type: "AfterSale",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              AfterSale: {
                fields: {
                  refundId: {
                    type: "string",
                    id: 2
                  },
                  orderId: {
                    type: "string",
                    id: 3
                  },
                  afterSaleProduct: {
                    type: "AfterSaleProduct",
                    id: 4
                  },
                  refundAmount: {
                    type: "string",
                    id: 10
                  },
                  refundReason: {
                    type: "string",
                    id: 11
                  },
                  refundStatus: {
                    type: "int32",
                    id: 12
                  },
                  waitTime: {
                    type: "int64",
                    id: 13
                  },
                  operateTime: {
                    type: "string",
                    id: 14
                  },
                  operate: {
                    type: "string",
                    id: 15
                  },
                  operatorName: {
                    type: "string",
                    id: 16
                  },
                  operatorType: {
                    type: "int32",
                    id: 17
                  },
                  refundFreight: {
                    type: "string",
                    id: 18
                  },
                  message: {
                    type: "string",
                    id: 19
                  },
                  refundCardNo: {
                    type: "string",
                    id: 21
                  },
                  refundCardholder: {
                    type: "string",
                    id: 22
                  },
                  refundBankName: {
                    type: "string",
                    id: 23
                  },
                  orderStatus: {
                    type: "int32",
                    id: 24
                  },
                  refundCurrency: {
                    type: "string",
                    id: 25
                  },
                  refundTime: {
                    type: "string",
                    id: 26
                  },
                  createTime: {
                    type: "string",
                    id: 27
                  },
                  mobile: {
                    type: "string",
                    id: 28
                  },
                  email: {
                    type: "string",
                    id: 29
                  },
                  countryCode: {
                    type: "string",
                    id: 30
                  },
                  cancelTime: {
                    type: "string",
                    id: 31
                  },
                  cancelOperator: {
                    type: "string",
                    id: 32
                  }
                }
              }
            }
          },
          DownloadAfterSalePageResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          BatchRefundSuccessRequest: {
            fields: {
              refundId: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          BatchRefundSuccessResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ExAfterSaleListRequest: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "uint64",
                id: 2
              },
              endTime: {
                type: "uint64",
                id: 3
              },
              refundStatus: {
                type: "int32",
                id: 4
              },
              orderType: {
                type: "common.enum.OrderEnum.OrderType",
                id: 5
              },
              productId: {
                type: "string",
                id: 6
              },
              skuId: {
                type: "string",
                id: 7
              },
              productName: {
                type: "string",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 9
              },
              userId: {
                type: "string",
                id: 10
              },
              refundId: {
                type: "string",
                id: 11
              }
            }
          },
          ExAfterSaleListResponse: {
            fields: {
              refundId: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              bankName: {
                type: "string",
                id: 3
              },
              cardNo: {
                type: "string",
                id: 4
              },
              currency: {
                type: "string",
                id: 5
              },
              refundAmount: {
                type: "string",
                id: 6
              },
              createTime: {
                type: "string",
                id: 7
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 8
              }
            }
          },
          Attribute: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              attrLabel: {
                type: "string",
                id: 2
              },
              valueId: {
                type: "string",
                id: 3
              },
              valueLabel: {
                type: "string",
                id: 4
              }
            }
          },
          CalAfterSalesAmount: {
            fields: {
              refundProductAmount: {
                type: "string",
                id: 1
              },
              refundNum: {
                type: "int32",
                id: 2
              },
              refundFreight: {
                type: "string",
                id: 3
              },
              refundAmount: {
                type: "string",
                id: 4
              },
              current: {
                type: "string",
                id: 5
              }
            }
          },
          ChangeToBuyersReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              }
            }
          },
          ChangeToBuyersResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          LogisticStatus: {
            values: {
              NO_LOGISTIC_INFO: 0,
              IN_TRANSIT: 1,
              DELIVERING: 2
            }
          },
          GetLogisticsInfoReq: {
            fields: {
              suborderId: {
                type: "string",
                id: 1
              },
              expressNo: {
                type: "string",
                id: 2
              }
            }
          },
          GetLogisticsInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              status: {
                type: "LogisticStatus",
                id: 2
              },
              expressName: {
                type: "string",
                id: 3
              },
              expressNo: {
                type: "string",
                id: 4
              },
              jump: {
                type: "bool",
                id: 5
              },
              url: {
                type: "string",
                id: 6
              },
              logiInfo: {
                rule: "repeated",
                type: "LogisticsInfo",
                id: 7
              }
            },
            nested: {
              LogisticsInfo: {
                fields: {
                  time: {
                    type: "string",
                    id: 1
                  },
                  detail: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          QueryOrderInfoBySubReq: {
            fields: {
              suborderId: {
                type: "string",
                id: 1
              }
            }
          },
          QueryOrderInfoBySubResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderId: {
                type: "string",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              },
              username: {
                type: "string",
                id: 4
              },
              phone: {
                type: "string",
                id: 5
              }
            }
          },
          GroupListRequest: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              groupId: {
                type: "string",
                id: 3
              },
              groupStatus: {
                rule: "repeated",
                type: "common.enum.OrderEnum.GroupStatus",
                id: 4
              },
              groupType: {
                rule: "repeated",
                type: "common.enum.OrderEnum.GroupMemberRole",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              }
            }
          },
          OrderItem: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              orderId: {
                type: "string",
                id: 2
              },
              payStatus: {
                type: "common.enum.OrderEnum.GroupMemberStatus",
                id: 4
              },
              groupMemberRole: {
                type: "common.enum.OrderEnum.GroupMemberRole",
                id: 5
              },
              orderStatus: {
                type: "common.enum.OrderEnum.OrderStatus",
                id: 6
              },
              jionTime: {
                type: "string",
                id: 8
              },
              memberPhone: {
                type: "string",
                id: 10
              },
              countryCode: {
                type: "string",
                id: 11
              },
              productItem: {
                type: "ProductItem",
                id: 12
              },
              ship: {
                type: "OrderShip",
                id: 13
              }
            },
            nested: {
              ProductItem: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  skuCode: {
                    type: "string",
                    id: 3
                  },
                  name: {
                    type: "string",
                    id: 4
                  },
                  snapCode: {
                    type: "string",
                    id: 5
                  },
                  skuCover: {
                    type: "string",
                    id: 6
                  },
                  prive: {
                    type: "string",
                    id: 7
                  },
                  attr: {
                    type: "string",
                    id: 8
                  },
                  discountRate: {
                    type: "string",
                    id: 9
                  },
                  totalDiscount: {
                    type: "string",
                    id: 10
                  },
                  returnPoint: {
                    type: "string",
                    id: 11
                  },
                  freigh: {
                    type: "string",
                    id: 12
                  }
                }
              },
              OrderShip: {
                fields: {
                  receiverName: {
                    type: "string",
                    id: 1
                  },
                  receiverAddress: {
                    type: "string",
                    id: 2
                  },
                  receiverPhone: {
                    type: "string",
                    id: 3
                  },
                  expressNo: {
                    rule: "repeated",
                    type: "string",
                    id: 4
                  }
                }
              }
            }
          },
          GroupItem: {
            fields: {
              groupId: {
                type: "string",
                id: 1
              },
              groupStatus: {
                type: "common.enum.OrderEnum.GroupStatus",
                id: 2
              },
              createTime: {
                type: "string",
                id: 3
              },
              successTime: {
                type: "string",
                id: 4
              },
              orderItem: {
                rule: "repeated",
                type: "OrderItem",
                id: 5
              }
            }
          },
          GroupListResponse: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupItem: {
                rule: "repeated",
                type: "GroupItem",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          ExportShipOrderReq: {
            fields: {
              orderId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              suborderId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              supplierId: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              subStatus: {
                rule: "repeated",
                type: "common.enum.OrderEnum.OrderStatus",
                id: 4
              },
              receiveName: {
                type: "string",
                id: 5
              },
              receiverPhone: {
                type: "string",
                id: 6
              },
              orderTimeStart: {
                type: "string",
                id: 7
              },
              orderTimeEnd: {
                type: "string",
                id: 8
              },
              page: {
                type: "common.base.Pagination",
                id: 9
              },
              shipType: {
                type: "int32",
                id: 10
              }
            }
          },
          ExportShipOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          OrderStatusFlowReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              }
            }
          },
          OrderStatusFlowResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              flowInfo: {
                rule: "repeated",
                type: "FlowInfo",
                id: 2
              }
            },
            nested: {
              FlowInfo: {
                fields: {
                  status: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 1
                  },
                  sort: {
                    type: "int32",
                    id: 2
                  },
                  time: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  }
                }
              }
            }
          },
          SubOrdersReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              }
            }
          },
          SubOrdersResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              subOrder: {
                rule: "repeated",
                type: "SubOrder",
                id: 2
              }
            },
            nested: {
              OurOrder: {
                fields: {
                  oon: {
                    type: "string",
                    id: 1
                  },
                  outStatus: {
                    type: "common.enum.ErpEnum.OutOrderStatus",
                    id: 2
                  },
                  time: {
                    type: "string",
                    id: 3
                  },
                  label: {
                    type: "string",
                    id: 4
                  }
                }
              },
              PurchaseOrder: {
                fields: {
                  pon: {
                    type: "string",
                    id: 1
                  },
                  ponStatus: {
                    type: "string",
                    id: 2
                  },
                  time: {
                    type: "string",
                    id: 3
                  },
                  label: {
                    type: "string",
                    id: 4
                  },
                  exceptioned: {
                    type: "string",
                    id: 5
                  }
                }
              },
              SkuInfo: {
                fields: {
                  skuCode: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  skuName: {
                    type: "string",
                    id: 3
                  },
                  skuCover: {
                    type: "string",
                    id: 4
                  },
                  attr: {
                    type: "string",
                    id: 5
                  },
                  num: {
                    type: "int32",
                    id: 6
                  },
                  shipNum: {
                    type: "int32",
                    id: 7
                  },
                  purchasedNum: {
                    type: "int32",
                    id: 8
                  },
                  outOrder: {
                    rule: "repeated",
                    type: "OurOrder",
                    id: 9
                  },
                  purOrder: {
                    rule: "repeated",
                    type: "PurchaseOrder",
                    id: 10
                  }
                }
              },
              SubOrder: {
                fields: {
                  orderId: {
                    type: "string",
                    id: 1
                  },
                  suborderId: {
                    type: "string",
                    id: 2
                  },
                  warehouseNo: {
                    type: "string",
                    id: 3
                  },
                  warehouseName: {
                    type: "string",
                    id: 4
                  },
                  subStatus: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 5
                  },
                  time: {
                    type: "string",
                    id: 6
                  },
                  label: {
                    type: "string",
                    id: 7
                  },
                  skuInfo: {
                    rule: "repeated",
                    type: "SkuInfo",
                    id: 8
                  }
                }
              }
            }
          },
          OutStockReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              orderStatus: {
                type: "common.enum.OrderEnum.OrderStatus",
                id: 3
              },
              outStockSource: {
                type: "common.enum.OrderEnum.OutStockSource",
                id: 4
              },
              counrtyCode: {
                type: "string",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              }
            }
          },
          OutStockResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderInfo: {
                rule: "repeated",
                type: "OrderInfo",
                id: 2
              },
              totalCount: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              ProductInfo: {
                fields: {
                  skuCode: {
                    type: "string",
                    id: 2
                  },
                  skuCover: {
                    type: "string",
                    id: 3
                  },
                  skuName: {
                    type: "string",
                    id: 4
                  },
                  skuAttr: {
                    type: "string",
                    id: 5
                  },
                  purUserId: {
                    type: "string",
                    id: 6
                  },
                  purUserName: {
                    type: "string",
                    id: 7
                  },
                  needNum: {
                    type: "int32",
                    id: 8
                  },
                  outstockNum: {
                    type: "int32",
                    id: 9
                  },
                  outstockTime: {
                    type: "string",
                    id: 10
                  }
                }
              },
              OrderInfo: {
                fields: {
                  orderId: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  },
                  country: {
                    type: "string",
                    id: 3
                  },
                  orderTime: {
                    type: "string",
                    id: 4
                  },
                  payTime: {
                    type: "string",
                    id: 5
                  },
                  orderStatus: {
                    type: "common.enum.OrderEnum.OrderStatus",
                    id: 6
                  },
                  durationTime: {
                    type: "string",
                    id: 7
                  },
                  timeout: {
                    type: "bool",
                    id: 8
                  },
                  outStockSource: {
                    type: "common.enum.OrderEnum.OutStockSource",
                    id: 9
                  },
                  outStockTime: {
                    type: "string",
                    id: 10
                  },
                  productInfo: {
                    rule: "repeated",
                    type: "ProductInfo",
                    id: 11
                  }
                }
              }
            }
          },
          OrderService: {
            methods: {
              GetOrderList: {
                requestType: "GetOrderListRequest",
                responseType: "GetOrderListResponse"
              },
              GetOrderDetail: {
                requestType: "GetOrderDetailRequest",
                responseType: "GetOrderDetailResponse"
              },
              ExportOrder: {
                requestType: "ExportOrderRequest",
                responseType: "ExportOrderResponse"
              },
              AddOrderRemark: {
                requestType: "AddOrderRemarkRequest",
                responseType: "AddOrderRemarkRespone"
              },
              MemberOrderList: {
                requestType: "MemberOrderListReq",
                responseType: "MemberOrderListResp"
              },
              MemberOrderDetail: {
                requestType: "MemberOrderDetailReq",
                responseType: "MemberOrderDetailResp"
              },
              UpdateReceiverAddress: {
                requestType: "UpdateReceiverAddressReq",
                responseType: "UpdateReceiverAddressResp"
              },
              CustomerOrderList: {
                requestType: "CustomerOrderListReq",
                responseType: "CustomerOrderListResp"
              },
              OutOrderList: {
                requestType: "OutOrderListReq",
                responseType: "OutOrderListResp"
              },
              AfterReason: {
                requestType: "AfterReasonReq",
                responseType: "AfterReasonResp"
              },
              ShipOrderList: {
                requestType: "ShipOrderListReq",
                responseType: "ShipOrderListResp"
              },
              ExportShipOrderList: {
                requestType: "ExportShipOrderReq",
                responseType: "ExportShipOrderResp"
              },
              AddExpressNo: {
                requestType: "AddExpressNoRequest",
                responseType: "AddExpressNoResponse"
              },
              UploadExpressNo: {
                requestType: "UploadExpressNoRequest",
                responseType: "UploadExpressNoResponse"
              },
              ChangeToBuyers: {
                requestType: "ChangeToBuyersReq",
                responseType: "ChangeToBuyersResp"
              },
              GetLogisticsInfo: {
                requestType: "GetLogisticsInfoReq",
                responseType: "GetLogisticsInfoResp"
              },
              QueryOrderInfoBySub: {
                requestType: "QueryOrderInfoBySubReq",
                responseType: "QueryOrderInfoBySubResp"
              },
              OrderStatusFlow: {
                requestType: "OrderStatusFlowReq",
                responseType: "OrderStatusFlowResp"
              },
              SubOrders: {
                requestType: "SubOrdersReq",
                responseType: "SubOrdersResp"
              },
              OutStock: {
                requestType: "OutStockReq",
                responseType: "OutStockResp"
              }
            }
          },
          BossApplyForRefundProduct: {
            fields: {
              skuId: {
                type: "string",
                id: 1
              },
              applyNum: {
                type: "int32",
                id: 2
              },
              returnFreight: {
                type: "bool",
                id: 3
              },
              out: {
                rule: "repeated",
                type: "OutOrderForRefund",
                id: 4
              }
            },
            nested: {
              OutOrderForRefund: {
                fields: {
                  outId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  cancelCount: {
                    type: "int32",
                    id: 3
                  },
                  outStatus: {
                    type: "common.enum.ErpEnum.OutOrderStatus",
                    id: 4
                  }
                }
              }
            }
          },
          ApplyForRefundV1Req: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              reason: {
                type: "string",
                id: 2
              },
              refundAmount: {
                type: "string",
                id: 3
              },
              bankId: {
                type: "string",
                id: 4
              },
              refundType: {
                type: "int32",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              afterType: {
                type: "int32",
                id: 7
              },
              product: {
                rule: "repeated",
                type: "BossApplyForRefundProduct",
                id: 8
              },
              remark: {
                type: "string",
                id: 9
              },
              pic: {
                rule: "repeated",
                type: "string",
                id: 10
              },
              mobile: {
                type: "string",
                id: 11
              },
              email: {
                type: "string",
                id: 12
              },
              reasonCode: {
                type: "string",
                id: 13
              },
              refundCurrency: {
                type: "string",
                id: 14
              }
            }
          },
          ApplyForRefundV1Resp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ReturnOperValidReq: {
            fields: {
              operType: {
                type: "int32",
                id: 1
              },
              orderId: {
                type: "string",
                id: 2
              },
              product: {
                rule: "repeated",
                type: "OperValidProduct",
                id: 3
              }
            },
            nested: {
              OperValidProduct: {
                fields: {
                  skuId: {
                    type: "string",
                    id: 1
                  },
                  suborderId: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          ReturnOperValidResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              popContent: {
                type: "PopContent",
                id: 2
              }
            },
            nested: {
              PopContent: {
                fields: {
                  warnContent: {
                    type: "string",
                    id: 1
                  },
                  detailContent: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          ComputeReturnAmountReq: {
            fields: {
              orderId: {
                type: "string",
                id: 1
              },
              product: {
                rule: "repeated",
                type: "ReturnProduct",
                id: 2
              }
            },
            nested: {
              ReturnProduct: {
                fields: {
                  skuId: {
                    type: "string",
                    id: 1
                  },
                  num: {
                    type: "int32",
                    id: 2
                  },
                  returnFreight: {
                    type: "bool",
                    id: 3
                  },
                  returnAmount: {
                    type: "string",
                    id: 4
                  }
                }
              }
            }
          },
          ComputeReturnAmountResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              returnAmount: {
                type: "string",
                id: 2
              },
              returnFreight: {
                type: "string",
                id: 3
              },
              currency: {
                type: "string",
                id: 4
              }
            }
          },
          ReturnReasonReq: {
            fields: {}
          },
          EnumEntry: {
            fields: {
              code: {
                type: "int32",
                id: 1
              },
              value: {
                type: "string",
                id: 2
              }
            }
          },
          ReturnReasonResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              refundReason: {
                rule: "repeated",
                type: "EnumEntry",
                id: 2
              }
            }
          },
          AfterService: {
            methods: {
              ViewAfterList: {
                requestType: "ViewAfterListRequest",
                responseType: "ViewAfterListResponse"
              },
              ExportAfter: {
                requestType: "ExportAfterRequest",
                responseType: "ExportAfterResponse"
              },
              CreateAfter: {
                requestType: "CreateAfterRequest",
                responseType: "CreateAfterResponse"
              },
              HandlerAfter: {
                requestType: "HandlerAfterRequest",
                responseType: "HandlerAfterResponse"
              },
              GetAfterSaleProduct: {
                requestType: "GetAfterSaleProductRequest",
                responseType: "GetAfterSaleProductResponse"
              },
              ApplyForRefundV1: {
                requestType: "ApplyForRefundV1Req",
                responseType: "ApplyForRefundV1Resp"
              },
              ReturnOperValid: {
                requestType: "ReturnOperValidReq",
                responseType: "ReturnOperValidResp"
              },
              ComputeReturnAmount: {
                requestType: "ComputeReturnAmountReq",
                responseType: "ComputeReturnAmountResp"
              },
              RejectApply: {
                requestType: "RejectApplyRequest",
                responseType: "RejectApplyResponse"
              },
              DelayProcessing: {
                requestType: "DelayProcessingRequest",
                responseType: "DelayProcessingResponse"
              },
              BatchApproved: {
                requestType: "BatchApprovedRequest",
                responseType: "BatchApprovedResponse"
              },
              AuditPass: {
                requestType: "AuditPassRequest",
                responseType: "AuditPassResponse"
              },
              RefundSuccess: {
                requestType: "RefundSuccessRequest",
                responseType: "RefundSuccessResponse"
              },
              ModifyAfterSale: {
                requestType: "ModifyAfterSaleRequest",
                responseType: "ModifyAfterSaleResponse"
              },
              AfterSaleInfo: {
                requestType: "AfterSaleInfoRequest",
                responseType: "AfterSaleInfoResponse"
              },
              AfterSalePage: {
                requestType: "AfterSalePageRequest",
                responseType: "AfterSalePageResponse"
              },
              BatchRefundSuccess: {
                requestType: "BatchRefundSuccessRequest",
                responseType: "BatchRefundSuccessResponse"
              },
              DownloadAfterSalePage: {
                requestType: "AfterSalePageRequest",
                responseType: "DownloadAfterSalePageResponse"
              },
              AllReturnReason: {
                requestType: "ReturnReasonReq",
                responseType: "ReturnReasonResp"
              }
            }
          },
          GroupService: {
            methods: {
              GroupList: {
                requestType: "GroupListRequest",
                responseType: "GroupListResponse"
              }
            }
          }
        }
      },
      pledge: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.pledge",
          java_outer_classname: "Pledge"
        },
        nested: {
          PledgeLanguage: {
            fields: {
              type: {
                type: "int32",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              translation: {
                type: "string",
                id: 3
              }
            }
          },
          AfterSalePledgeUnit: {
            fields: {
              afterSaleId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              afterSaleRestrict: {
                type: "uint32",
                id: 6
              },
              rangeType: {
                type: "common.enum.PledgeEnum.RangeType",
                id: 7
              },
              productType: {
                rule: "repeated",
                type: "common.enum.ProductEnum.ProductType",
                id: 8
              },
              afterSaleCate: {
                rule: "repeated",
                type: "AfterSaleCategory",
                id: 9
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 10
              },
              operatorId: {
                type: "string",
                id: 11
              },
              status: {
                type: "uint32",
                id: 12
              },
              operatorName: {
                type: "string",
                id: 13
              },
              updateTime: {
                type: "string",
                id: 14
              }
            }
          },
          AfterSaleCategory: {
            fields: {
              cateId: {
                type: "string",
                id: 1
              },
              cateName: {
                type: "string",
                id: 2
              },
              level: {
                type: "int32",
                id: 3
              }
            }
          },
          AddAfterSaleReq: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              afterSaleRestrict: {
                type: "int32",
                id: 5
              },
              rangeType: {
                type: "common.enum.PledgeEnum.RangeType",
                id: 6
              },
              productType: {
                rule: "repeated",
                type: "common.enum.ProductEnum.ProductType",
                id: 7
              },
              afterSaleCate: {
                rule: "repeated",
                type: "AfterSaleCategory",
                id: 8
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 9
              }
            }
          },
          AddAfterSaleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateAfterSaleReq: {
            fields: {
              afterSaleId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              afterSaleRestrict: {
                type: "int32",
                id: 6
              },
              rangeType: {
                type: "common.enum.PledgeEnum.RangeType",
                id: 7
              },
              productType: {
                rule: "repeated",
                type: "common.enum.ProductEnum.ProductType",
                id: 8
              },
              afterSaleCate: {
                rule: "repeated",
                type: "AfterSaleCategory",
                id: 9
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 10
              }
            }
          },
          UpdateAfterSaleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetAfterSaleReq: {
            fields: {
              afterSaleId: {
                type: "string",
                id: 1
              }
            }
          },
          GetAfterSaleResp: {
            fields: {
              afterSaleId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              afterSaleRestrict: {
                type: "int32",
                id: 6
              },
              rangeType: {
                type: "int32",
                id: 7
              },
              productType: {
                rule: "repeated",
                type: "common.enum.ProductEnum.ProductType",
                id: 8
              },
              afterSaleCate: {
                rule: "repeated",
                type: "AfterSaleCategory",
                id: 9
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 10
              },
              operatorId: {
                type: "string",
                id: 11
              },
              status: {
                type: "int32",
                id: 12
              },
              createTime: {
                type: "string",
                id: 13
              },
              updateTime: {
                type: "string",
                id: 14
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 15
              }
            }
          },
          StartAfterSaleReq: {
            fields: {
              afterSaleId: {
                type: "string",
                id: 1
              }
            }
          },
          StartAfterSaleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          StopAfterSaleReq: {
            fields: {
              afterSaleId: {
                type: "string",
                id: 1
              }
            }
          },
          StopAfterSaleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListAfterSaleReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              }
            }
          },
          ListAfterSaleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              afterSalePledge: {
                rule: "repeated",
                type: "AfterSalePledgeUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          AfterSalePledgeService: {
            methods: {
              AddAfterSale: {
                requestType: "AddAfterSaleReq",
                responseType: "AddAfterSaleResp"
              },
              UpdateAfterSale: {
                requestType: "UpdateAfterSaleReq",
                responseType: "UpdateAfterSaleResp"
              },
              GetAfterSale: {
                requestType: "GetAfterSaleReq",
                responseType: "GetAfterSaleResp"
              },
              StartAfterSale: {
                requestType: "StartAfterSaleReq",
                responseType: "StartAfterSaleResp"
              },
              StopAfterSale: {
                requestType: "StopAfterSaleReq",
                responseType: "StopAfterSaleResp"
              },
              ListAfterSale: {
                requestType: "ListAfterSaleReq",
                responseType: "ListAfterSaleResp"
              }
            }
          },
          ArrivalPromiseLan: {
            fields: {
              type: {
                type: "int32",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              translation: {
                type: "string",
                id: 3
              }
            }
          },
          ArrivalDistribution: {
            fields: {
              areaCode: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              timeLimitMin: {
                type: "int32",
                id: 2
              },
              timeLimitMax: {
                type: "int32",
                id: 3
              }
            }
          },
          ArrivalPledgeUnit: {
            fields: {
              arrivalId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              arrivalDistribution: {
                rule: "repeated",
                type: "ArrivalDistribution",
                id: 7
              },
              payment: {
                type: "common.enum.PledgeEnum.PaymentType",
                id: 8
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 9
              },
              operatorId: {
                type: "string",
                id: 10
              },
              status: {
                type: "uint32",
                id: 11
              },
              operatorName: {
                type: "string",
                id: 12
              },
              updateTime: {
                type: "string",
                id: 13
              }
            }
          },
          AddArrivalReq: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              countryCode: {
                type: "string",
                id: 5
              },
              arrivalDistribution: {
                rule: "repeated",
                type: "ArrivalDistribution",
                id: 6
              },
              payment: {
                type: "common.enum.PledgeEnum.PaymentType",
                id: 7
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 8
              }
            }
          },
          AddArrivalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateArrivalReq: {
            fields: {
              arrivalId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              arrivalDistribution: {
                rule: "repeated",
                type: "ArrivalDistribution",
                id: 7
              },
              payment: {
                type: "common.enum.PledgeEnum.PaymentType",
                id: 8
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 9
              }
            }
          },
          UpdateArrivalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetArrivalReq: {
            fields: {
              arrivalId: {
                type: "string",
                id: 1
              }
            }
          },
          GetArrivalResp: {
            fields: {
              arrivalId: {
                type: "string",
                id: 1
              },
              name: {
                type: "string",
                id: 2
              },
              label: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              document: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              detailPicture: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              arrivalDistribution: {
                rule: "repeated",
                type: "ArrivalDistribution",
                id: 7
              },
              payment: {
                type: "common.enum.PledgeEnum.PaymentType",
                id: 8
              },
              showType: {
                type: "common.enum.PledgeEnum.ShowType",
                id: 9
              },
              status: {
                type: "int32",
                id: 10
              },
              createTime: {
                type: "string",
                id: 11
              },
              updateTime: {
                type: "string",
                id: 12
              },
              operatorId: {
                type: "string",
                id: 13
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 14
              }
            }
          },
          StartArrivalReq: {
            fields: {
              arrivalId: {
                type: "string",
                id: 1
              }
            }
          },
          StartArrivalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          StopArrivalReq: {
            fields: {
              arrivalId: {
                type: "string",
                id: 1
              }
            }
          },
          StopArrivalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListArrivalReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              type: {
                type: "int32",
                id: 3
              }
            }
          },
          ListArrivalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              arrivalPledge: {
                rule: "repeated",
                type: "ArrivalPledgeUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          ArrivalPledgeService: {
            methods: {
              AddArrival: {
                requestType: "AddArrivalReq",
                responseType: "AddArrivalResp"
              },
              UpdateArrival: {
                requestType: "UpdateArrivalReq",
                responseType: "UpdateArrivalResp"
              },
              GetArrival: {
                requestType: "GetArrivalReq",
                responseType: "GetArrivalResp"
              },
              StartArrival: {
                requestType: "StartArrivalReq",
                responseType: "StartArrivalResp"
              },
              StopArrival: {
                requestType: "StopArrivalReq",
                responseType: "StopArrivalResp"
              },
              ListArrival: {
                requestType: "ListArrivalReq",
                responseType: "ListArrivalResp"
              }
            }
          },
          AreaUnit: {
            fields: {
              areaCode: {
                type: "string",
                id: 1
              },
              areaName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              areaId: {
                type: "string",
                id: 4
              }
            }
          },
          AddAreaReq: {
            fields: {
              areaCode: {
                type: "string",
                id: 1
              },
              areaName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              areaId: {
                type: "string",
                id: 4
              }
            }
          },
          AddAreaResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteAreaReq: {
            fields: {
              areaCode: {
                type: "string",
                id: 1
              },
              areaId: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteAreaResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateAreaReq: {
            fields: {
              areaCode: {
                type: "string",
                id: 1
              },
              areaName: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              areaId: {
                type: "string",
                id: 4
              }
            }
          },
          UpdateAreaResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetAreaReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          GetAreaResp: {
            fields: {
              areaUnit: {
                rule: "repeated",
                type: "AreaUnit",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          AreaService: {
            methods: {
              AddArea: {
                requestType: "AddAreaReq",
                responseType: "AddAreaResp"
              },
              DeleteArea: {
                requestType: "DeleteAreaReq",
                responseType: "DeleteAreaResp"
              },
              UpdateArea: {
                requestType: "UpdateAreaReq",
                responseType: "UpdateAreaResp"
              },
              GetArea: {
                requestType: "GetAreaReq",
                responseType: "GetAreaResp"
              }
            }
          }
        }
      },
      polypay: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.polypay",
          java_outer_classname: "Polypay"
        },
        nested: {
          BooleanResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              success: {
                type: "bool",
                id: 2
              }
            }
          },
          CashOutRecordDoPb: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              cashOutCode: {
                type: "string",
                id: 2
              },
              userName: {
                type: "string",
                id: 3
              },
              bankNo: {
                type: "string",
                id: 4
              },
              bankName: {
                type: "string",
                id: 5
              },
              email: {
                type: "string",
                id: 6
              },
              userId: {
                type: "string",
                id: 7
              },
              telNo: {
                type: "string",
                id: 8
              },
              cashAmount: {
                type: "string",
                id: 9
              },
              fee: {
                type: "string",
                id: 10
              },
              cashAccountAmount: {
                type: "string",
                id: 11
              },
              cashStatus: {
                type: "int32",
                id: 12
              },
              status: {
                type: "int32",
                id: 13
              },
              remark: {
                type: "string",
                id: 14
              },
              createTime: {
                type: "string",
                id: 15
              },
              updateTime: {
                type: "string",
                id: 16
              },
              bankCode: {
                type: "string",
                id: 17
              },
              countryCode: {
                type: "string",
                id: 18
              }
            }
          },
          ListUserWithdrawalByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              cashOutRecordDo: {
                rule: "repeated",
                type: "CashOutRecordDoPb",
                id: 3
              }
            }
          },
          ListUserWithdrawalByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              userName: {
                type: "string",
                id: 3
              },
              bankNo: {
                type: "string",
                id: 4
              },
              bankName: {
                type: "string",
                id: 5
              },
              email: {
                type: "string",
                id: 6
              },
              telNo: {
                type: "string",
                id: 7
              },
              cashStatus: {
                type: "int32",
                id: 8
              },
              startTime: {
                type: "string",
                id: 9
              },
              endTime: {
                type: "string",
                id: 10
              },
              countryCode: {
                type: "string",
                id: 11
              }
            }
          },
          ListUserWithdrawalExportReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              userName: {
                type: "string",
                id: 3
              },
              bankNo: {
                type: "string",
                id: 4
              },
              bankName: {
                type: "string",
                id: 5
              },
              email: {
                type: "string",
                id: 6
              },
              telNo: {
                type: "string",
                id: 7
              },
              cashStatus: {
                type: "int32",
                id: 8
              },
              startTime: {
                type: "string",
                id: 9
              },
              endTime: {
                type: "string",
                id: 10
              },
              countryCode: {
                type: "string",
                id: 11
              }
            }
          },
          ListUserWithdrawalExportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          ListBanksByCountryReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          BankSimplePb: {
            fields: {
              bankCode: {
                type: "string",
                id: 1
              },
              bankName: {
                type: "string",
                id: 2
              }
            }
          },
          ListBanksByCountryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              bankSimple: {
                rule: "repeated",
                type: "BankSimplePb",
                id: 2
              }
            }
          },
          ConfirmUserWithdrawalApplyReq: {
            fields: {
              cashOutCode: {
                type: "string",
                id: 1
              },
              cashStatus: {
                type: "int32",
                id: 2
              },
              remark: {
                type: "string",
                id: 3
              },
              withdrawalCode: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          ListAccountDetailByPageReq: {
            fields: {
              detailType: {
                type: "string",
                id: 1
              },
              sourceId: {
                type: "string",
                id: 2
              },
              sourceType: {
                type: "int32",
                id: 3
              },
              userId: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "string",
                id: 5
              },
              endTime: {
                type: "string",
                id: 6
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              }
            }
          },
          AccountDetailPb: {
            fields: {
              accountId: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              accountDetailNo: {
                type: "string",
                id: 3
              },
              amount: {
                type: "string",
                id: 4
              },
              detailType: {
                type: "string",
                id: 5
              },
              sourceType: {
                type: "string",
                id: 6
              },
              sourceId: {
                type: "string",
                id: 7
              },
              createTime: {
                type: "string",
                id: 8
              },
              isDelete: {
                type: "int32",
                id: 9
              },
              memo: {
                type: "string",
                id: 10
              },
              sourceDesc: {
                type: "string",
                id: 11
              }
            }
          },
          ListAccountDetailByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              data: {
                rule: "repeated",
                type: "AccountDetailPb",
                id: 3
              }
            }
          },
          AccountDetailRollBackReq: {
            fields: {
              accountDetailNo: {
                type: "string",
                id: 1
              }
            }
          },
          AccountDetailRollBackResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetUserBankListReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              }
            }
          },
          UserBankAccountPb: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              userId: {
                type: "string",
                id: 2
              },
              accountName: {
                type: "string",
                id: 3
              },
              accountNo: {
                type: "string",
                id: 4
              },
              mobile: {
                type: "string",
                id: 5
              },
              email: {
                type: "string",
                id: 6
              },
              bankId: {
                type: "string",
                id: 7
              },
              bankName: {
                type: "string",
                id: 8
              },
              status: {
                type: "int32",
                id: 9
              },
              isDefault: {
                type: "int32",
                id: 10
              },
              isDelete: {
                type: "int32",
                id: 11
              },
              bankCode: {
                type: "string",
                id: 12
              },
              countryCode: {
                type: "string",
                id: 14
              }
            }
          },
          GetUserBankListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "UserBankAccountPb",
                id: 2
              }
            }
          },
          AddUserBankReq: {
            fields: {
              accountName: {
                type: "string",
                id: 1
              },
              accountNo: {
                type: "string",
                id: 2
              },
              mobile: {
                type: "string",
                id: 4
              },
              email: {
                type: "string",
                id: 5
              },
              bankName: {
                type: "string",
                id: 6
              },
              userId: {
                type: "string",
                id: 7
              },
              userName: {
                type: "string",
                id: 8
              },
              bankCode: {
                type: "string",
                id: 9
              }
            }
          },
          AddUserBankResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SearchPayInfoReq: {
            fields: {
              bnsOrderNo: {
                type: "string",
                id: 1
              },
              transOrderNo: {
                type: "string",
                id: 2
              },
              txnId: {
                type: "string",
                id: 3
              },
              payWay: {
                type: "string",
                id: 4
              },
              payStatus: {
                type: "string",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              }
            }
          },
          SearchPayInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              searchPayInfos: {
                rule: "repeated",
                type: "SearchPayInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          SearchPayInfo: {
            fields: {
              bnsOrderNo: {
                type: "string",
                id: 1
              },
              transOrderNo: {
                type: "string",
                id: 2
              },
              payWay: {
                type: "uint32",
                id: 3
              },
              payStatus: {
                type: "uint32",
                id: 4
              },
              countryCode: {
                type: "string",
                id: 5
              },
              txnId: {
                type: "string",
                id: 6
              },
              createTime: {
                type: "uint64",
                id: 8
              },
              updateTime: {
                type: "uint64",
                id: 9
              },
              remark: {
                type: "string",
                id: 10
              },
              bnsType: {
                type: "uint32",
                id: 11
              },
              amount: {
                type: "string",
                id: 12
              },
              paymentVoucherPicture: {
                type: "string",
                id: 13
              }
            }
          },
          SynPayInfoReq: {
            fields: {
              bnsOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          SynPayInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              searchPayInfos: {
                rule: "repeated",
                type: "SearchPayInfo",
                id: 2
              }
            }
          },
          ManualPaySuccessReq: {
            fields: {
              bnsOrderNo: {
                type: "string",
                id: 1
              },
              transOrderNo: {
                type: "string",
                id: 2
              },
              paymentVoucherPicture: {
                type: "string",
                id: 3
              },
              txnId: {
                type: "string",
                id: 4
              }
            }
          },
          ManualPaySuccessResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PayRelatedInfoReq: {
            fields: {}
          },
          PayRelatedInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              payStatusInfo: {
                rule: "repeated",
                type: "PayStatusInfo",
                id: 2
              },
              payWayInfo: {
                rule: "repeated",
                type: "PayWayInfo",
                id: 3
              }
            },
            nested: {
              PayStatusInfo: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  code: {
                    type: "int32",
                    id: 2
                  }
                }
              },
              PayWayInfo: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  code: {
                    type: "int32",
                    id: 2
                  }
                }
              }
            }
          },
          ManualPayFailReq: {
            fields: {
              bnsOrderNo: {
                type: "string",
                id: 1
              },
              transOrderNo: {
                type: "string",
                id: 2
              },
              remark: {
                type: "string",
                id: 3
              }
            }
          },
          ManualPayFailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AuditFlowCheckListReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              operationId: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          AuditFlowCheckListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              checkInfo: {
                rule: "repeated",
                type: "AuditFlowCheckInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              AuditFlowCheckInfo: {
                fields: {
                  operationId: {
                    type: "int64",
                    id: 1
                  },
                  nickName: {
                    type: "string",
                    id: 2
                  },
                  realName: {
                    type: "string",
                    id: 3
                  },
                  checkNum: {
                    type: "int32",
                    id: 4
                  },
                  day: {
                    type: "string",
                    id: 5
                  }
                }
              }
            }
          },
          DownloadAuditFlowCheckListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              url: {
                type: "string",
                id: 2
              }
            }
          },
          WithdrawalBossService: {
            methods: {
              ListUserWithdrawalByPage: {
                requestType: "ListUserWithdrawalByPageReq",
                responseType: "ListUserWithdrawalByPageResp"
              },
              ListUserWithdrawalExport: {
                requestType: "ListUserWithdrawalExportReq",
                responseType: "ListUserWithdrawalExportResp"
              },
              ListBanksByCountry: {
                requestType: "ListBanksByCountryReq",
                responseType: "ListBanksByCountryResp"
              },
              ConfirmUserWithdrawalApply: {
                requestType: "ConfirmUserWithdrawalApplyReq",
                responseType: "BooleanResp"
              },
              GetUserBankList: {
                requestType: "GetUserBankListReq",
                responseType: "GetUserBankListResp"
              },
              AddUserBank: {
                requestType: "AddUserBankReq",
                responseType: "AddUserBankResp"
              }
            }
          },
          UserAccountBossService: {
            methods: {
              ListAccountDetailByPage: {
                requestType: "ListAccountDetailByPageReq",
                responseType: "ListAccountDetailByPageResp"
              },
              AccountDetailRollBack: {
                requestType: "AccountDetailRollBackReq",
                responseType: "AccountDetailRollBackResp"
              }
            }
          },
          PayInfoService: {
            methods: {
              SearchPayInfo: {
                requestType: "SearchPayInfoReq",
                responseType: "SearchPayInfoResp"
              },
              SynPayInfo: {
                requestType: "SynPayInfoReq",
                responseType: "SynPayInfoResp"
              },
              ManualPaySuccess: {
                requestType: "ManualPaySuccessReq",
                responseType: "ManualPaySuccessResp"
              },
              ManualPayFail: {
                requestType: "ManualPayFailReq",
                responseType: "ManualPayFailResp"
              },
              PayRelatedInfo: {
                requestType: "PayRelatedInfoReq",
                responseType: "PayRelatedInfoResp"
              },
              AuditFlowCheckList: {
                requestType: "AuditFlowCheckListReq",
                responseType: "AuditFlowCheckListResp"
              },
              DownloadAuditFlowCheckList: {
                requestType: "AuditFlowCheckListReq",
                responseType: "DownloadAuditFlowCheckListResp"
              }
            }
          },
          GetChargeListReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              },
              orderId: {
                type: "string",
                id: 4
              },
              status: {
                type: "string",
                id: 5
              },
              page: {
                type: "common.base.Pagination",
                id: 6
              }
            }
          },
          GetChargeListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              chargeInfo: {
                rule: "repeated",
                type: "ChargeInfo",
                id: 3
              }
            },
            nested: {
              ChargeInfo: {
                fields: {
                  id: {
                    type: "int64",
                    id: 1
                  },
                  userId: {
                    type: "int64",
                    id: 2
                  },
                  orderNo: {
                    type: "string",
                    id: 3
                  },
                  orderPayId: {
                    type: "string",
                    id: 4
                  },
                  prodId: {
                    type: "int32",
                    id: 5
                  },
                  prodName: {
                    type: "string",
                    id: 6
                  },
                  orderType: {
                    type: "string",
                    id: 7
                  },
                  orderAmount: {
                    type: "string",
                    id: 8
                  },
                  faceValue: {
                    type: "string",
                    id: 9
                  },
                  status: {
                    type: "int32",
                    id: 10
                  },
                  account: {
                    type: "string",
                    id: 11
                  },
                  reloadId: {
                    type: "string",
                    id: 12
                  },
                  sendTime: {
                    type: "string",
                    id: 13
                  },
                  msg: {
                    type: "string",
                    id: 14
                  }
                }
              }
            }
          },
          ReChargeForOrderReq: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              faceValue: {
                type: "string",
                id: 3
              },
              prodName: {
                type: "string",
                id: 4
              },
              account: {
                type: "string",
                id: 5
              }
            }
          },
          RefundForChargeReq: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              }
            }
          },
          ManualChargeInfoRecordReq: {
            fields: {
              orderNo: {
                type: "string",
                id: 1
              },
              faceAmount: {
                type: "string",
                id: 2
              },
              prodId: {
                type: "string",
                id: 3
              },
              prodName: {
                type: "string",
                id: 4
              },
              account: {
                type: "string",
                id: 5
              },
              reloadId: {
                type: "string",
                id: 6
              },
              msg: {
                type: "string",
                id: 7
              }
            }
          },
          GetChargeProdListReq: {
            fields: {
              prodName: {
                type: "string",
                id: 1
              },
              refresh: {
                type: "bool",
                id: 2
              }
            }
          },
          GetChargeProdListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              prodInfo: {
                rule: "repeated",
                type: "ProdInfo",
                id: 2
              }
            },
            nested: {
              ProdInfo: {
                fields: {
                  prodName: {
                    type: "string",
                    id: 1
                  },
                  prodId: {
                    type: "int32",
                    id: 2
                  },
                  maxAcceptAmount: {
                    type: "string",
                    id: 3
                  },
                  minAcceptAmount: {
                    type: "string",
                    id: 4
                  },
                  prodType: {
                    type: "string",
                    id: 5
                  },
                  allChargeFaceAmount: {
                    type: "string",
                    id: 6
                  },
                  image: {
                    type: "string",
                    id: 7
                  }
                }
              }
            }
          },
          ChargeService: {
            methods: {
              GetChargeRecordList: {
                requestType: "GetChargeListReq",
                responseType: "GetChargeListResp"
              },
              ReChargeForOrder: {
                requestType: "ReChargeForOrderReq",
                responseType: "BooleanResp"
              },
              RefundForCharge: {
                requestType: "RefundForChargeReq",
                responseType: "BooleanResp"
              },
              ManualChargeInfoRecord: {
                requestType: "ManualChargeInfoRecordReq",
                responseType: "BooleanResp"
              },
              GetChargeProdList: {
                requestType: "GetChargeProdListReq",
                responseType: "GetChargeProdListResp"
              }
            }
          }
        }
      },
      price: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.price",
          java_outer_classname: "Price"
        },
        nested: {
          ProductPriceTemplate: {
            fields: {
              templateId: {
                type: "int32",
                id: 1
              },
              templateNameCn: {
                type: "string",
                id: 2
              },
              exchangeRateTemplateId: {
                type: "int32",
                id: 20
              },
              domesticExpressFee: {
                type: "string",
                id: 3
              },
              domesticWarehousingFee: {
                type: "string",
                id: 4
              },
              airVolumeUnit: {
                type: "string",
                id: 5
              },
              airVolumePrice: {
                type: "string",
                id: 6
              },
              airWeightUnit: {
                type: "string",
                id: 7
              },
              airWeightPrice: {
                type: "string",
                id: 8
              },
              oceanVolumeUnit: {
                type: "string",
                id: 9
              },
              oceanVolumePrice: {
                type: "string",
                id: 10
              },
              internationalWarehousingFee: {
                type: "string",
                id: 11
              },
              paymentPassageFee: {
                type: "string",
                id: 12
              },
              cashServiceFee: {
                type: "string",
                id: 13
              },
              operatingFee: {
                type: "string",
                id: 14
              },
              grossInterestRate: {
                type: "string",
                id: 15
              },
              vipGrossInterestRate: {
                type: "string",
                id: 16
              },
              activeGrossInterestRate: {
                type: "string",
                id: 17
              },
              countryCode: {
                type: "string",
                id: 19
              },
              category: {
                rule: "repeated",
                type: "common.base.IdAndName",
                id: 21
              },
              status: {
                type: "int32",
                id: 22
              },
              isDelete: {
                type: "int32",
                id: 23
              },
              createTime: {
                type: "string",
                id: 24
              },
              updateTime: {
                type: "string",
                id: 25
              },
              operationName: {
                type: "string",
                id: 26
              }
            }
          },
          AddNewProductPriceTemplateReq: {
            fields: {
              templateNameCn: {
                type: "string",
                id: 1
              },
              exchangeRateTemplateId: {
                type: "int32",
                id: 19
              },
              domesticExpressFee: {
                type: "string",
                id: 2
              },
              domesticWarehousingFee: {
                type: "string",
                id: 3
              },
              airVolumeUnit: {
                type: "string",
                id: 4
              },
              airVolumePrice: {
                type: "string",
                id: 5
              },
              airWeightUnit: {
                type: "string",
                id: 6
              },
              airWeightPrice: {
                type: "string",
                id: 7
              },
              oceanVolumeUnit: {
                type: "string",
                id: 8
              },
              oceanVolumePrice: {
                type: "string",
                id: 9
              },
              internationalWarehousingFee: {
                type: "string",
                id: 10
              },
              paymentPassageFee: {
                type: "string",
                id: 11
              },
              cashServiceFee: {
                type: "string",
                id: 12
              },
              operatingFee: {
                type: "string",
                id: 13
              },
              grossInterestRate: {
                type: "string",
                id: 14
              },
              vipGrossInterestRate: {
                type: "string",
                id: 15
              },
              activeGrossInterestRate: {
                type: "string",
                id: 16
              },
              countryCode: {
                type: "string",
                id: 18
              },
              categoryId: {
                rule: "repeated",
                type: "int32",
                id: 20
              },
              status: {
                type: "int32",
                id: 21
              },
              isDelete: {
                type: "int32",
                id: 22
              }
            }
          },
          AddNewProductPriceTemplateResp: {
            fields: {
              templateId: {
                type: "int32",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              },
              message: {
                type: "string",
                id: 3
              }
            }
          },
          UpdateProductPriceTemplateReq: {
            fields: {
              templateId: {
                type: "int32",
                id: 1
              },
              templateNameCn: {
                type: "string",
                id: 2
              },
              exchangeRateTemplateId: {
                type: "int32",
                id: 20
              },
              domesticExpressFee: {
                type: "string",
                id: 3
              },
              domesticWarehousingFee: {
                type: "string",
                id: 4
              },
              airVolumeUnit: {
                type: "string",
                id: 5
              },
              airVolumePrice: {
                type: "string",
                id: 6
              },
              airWeightUnit: {
                type: "string",
                id: 7
              },
              airWeightPrice: {
                type: "string",
                id: 8
              },
              oceanVolumeUnit: {
                type: "string",
                id: 9
              },
              oceanVolumePrice: {
                type: "string",
                id: 10
              },
              internationalWarehousingFee: {
                type: "string",
                id: 11
              },
              paymentPassageFee: {
                type: "string",
                id: 12
              },
              cashServiceFee: {
                type: "string",
                id: 13
              },
              operatingFee: {
                type: "string",
                id: 14
              },
              grossInterestRate: {
                type: "string",
                id: 15
              },
              vipGrossInterestRate: {
                type: "string",
                id: 16
              },
              activeGrossInterestRate: {
                type: "string",
                id: 17
              },
              countryCode: {
                type: "string",
                id: 19
              },
              categoryId: {
                rule: "repeated",
                type: "int32",
                id: 21
              },
              effectStatus: {
                type: "common.enum.PriceTemplateEnum.EffectStatus",
                id: 22
              },
              isDelete: {
                type: "int32",
                id: 23
              }
            }
          },
          UpdateProductPriceTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ListProductPriceTemplateReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              }
            }
          },
          ListProductPriceTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "ProductPriceTemplate",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          GetTemplateByIdReq: {
            fields: {
              templateId: {
                type: "int32",
                id: 1
              }
            }
          },
          GetTemplateByIdListReq: {
            fields: {
              templateId: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          GetTemplateByIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                type: "ProductPriceTemplate",
                id: 2
              }
            }
          },
          GetTemplateByIdListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "ProductPriceTemplate",
                id: 2
              }
            }
          },
          GetTemplateByCategoryIdReq: {
            fields: {
              categoryId: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          GetTemplateByCategoryIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "ProductPriceTemplate",
                id: 2
              }
            }
          },
          ProductPriceAccountData: {
            fields: {
              price: {
                type: "double",
                id: 2
              },
              priceVip: {
                type: "double",
                id: 1
              },
              activePrice: {
                type: "double",
                id: 3
              },
              resultCurrencyCode: {
                type: "string",
                id: 4
              }
            }
          },
          GetProductPriceAccountingReq: {
            fields: {
              priceFromSupplier: {
                type: "string",
                id: 1
              },
              currencyCode: {
                type: "string",
                id: 2
              },
              resultCurrencyCode: {
                type: "string",
                id: 8
              },
              weight: {
                type: "string",
                id: 3
              },
              boxSpecification: {
                type: "string",
                id: 4
              },
              internationalLogisticsMode: {
                type: "int32",
                id: 5
              },
              templateId: {
                type: "int32",
                id: 6
              },
              commissionRate: {
                type: "double",
                id: 7
              }
            }
          },
          GetProductPriceAccountingResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                type: "ProductPriceAccountData",
                id: 2
              }
            }
          },
          ChangePriceTemplateEffectStatusReq: {
            fields: {
              templateId: {
                type: "int32",
                id: 1
              },
              effectStatus: {
                type: "common.enum.PriceTemplateEnum.EffectStatus",
                id: 2
              }
            }
          },
          ChangePriceTemplateEffectStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ProductPriceTemplateService: {
            methods: {
              AddNewProductPriceTemplate: {
                requestType: "AddNewProductPriceTemplateReq",
                responseType: "AddNewProductPriceTemplateResp"
              },
              UpdateProductPriceTemplate: {
                requestType: "UpdateProductPriceTemplateReq",
                responseType: "UpdateProductPriceTemplateResp"
              },
              ListProductPriceTemplate: {
                requestType: "ListProductPriceTemplateReq",
                responseType: "ListProductPriceTemplateResp"
              },
              GetTemplateById: {
                requestType: "GetTemplateByIdReq",
                responseType: "GetTemplateByIdResp"
              },
              GetTemplateByCategoryId: {
                requestType: "GetTemplateByCategoryIdReq",
                responseType: "GetTemplateByCategoryIdResp"
              },
              GetProductPriceAccounting: {
                requestType: "GetProductPriceAccountingReq",
                responseType: "GetProductPriceAccountingResp"
              },
              ChangePriceTemplateEffectStatus: {
                requestType: "ChangePriceTemplateEffectStatusReq",
                responseType: "ChangePriceTemplateEffectStatusResp"
              },
              GetTemplateByIdList: {
                requestType: "GetTemplateByIdListReq",
                responseType: "GetTemplateByIdListResp"
              }
            }
          }
        }
      },
      product: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.product",
          java_outer_classname: "Product"
        },
        nested: {
          ProductSaleCountry: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              shelveStatus: {
                type: "common.enum.ProductEnum.ShelveStatus",
                id: 2
              }
            }
          },
          ProductCountryInfo: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              sales: {
                type: "uint32",
                id: 3
              },
              stock: {
                type: "uint32",
                id: 4
              },
              freightType: {
                type: "common.enum.ProductEnum.FreightType",
                id: 5
              },
              freightId: {
                type: "string",
                id: 6
              },
              cover: {
                type: "string",
                id: 11
              },
              desc: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 12
              },
              detail: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 13
              },
              rotation: {
                type: "string",
                id: 14
              },
              video: {
                type: "string",
                id: 15
              },
              form: {
                type: "string",
                id: 16
              },
              shelveStatus: {
                type: "common.enum.ProductEnum.ShelveStatus",
                id: 17
              }
            }
          },
          BossBrandInfo: {
            fields: {
              brandId: {
                type: "string",
                id: 1
              },
              brandNameEn: {
                type: "string",
                id: 2
              },
              brandNameCn: {
                type: "string",
                id: 3
              }
            }
          },
          PledgeCountryInfo: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              afterSalePledge: {
                type: "AfterSalePledge",
                id: 2
              },
              arrivalPledge: {
                type: "ArrivalPledge",
                id: 3
              }
            }
          },
          AfterSalePledge: {
            fields: {
              pledgeId: {
                type: "string",
                id: 1
              },
              title: {
                type: "string",
                id: 2
              }
            }
          },
          ArrivalPledge: {
            fields: {
              pledgeId: {
                type: "string",
                id: 1
              },
              title: {
                type: "string",
                id: 2
              }
            }
          },
          CustomizeAttrValueInfo: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              valueName: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              attrValueName: {
                type: "string",
                id: 4
              },
              valueType: {
                type: "uint32",
                id: 6
              }
            }
          },
          AttrValueInfo: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              attrName: {
                type: "string",
                id: 2
              },
              valueId: {
                type: "string",
                id: 3
              },
              valueName: {
                type: "string",
                id: 4
              },
              sort: {
                type: "uint32",
                id: 5
              },
              customize: {
                type: "common.enum.AttributeEnum.Customize",
                id: 6
              }
            }
          },
          ProductSkuBase: {
            fields: {
              skuId: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              skuAttrValue: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 5
              },
              specification: {
                type: "string",
                id: 6
              },
              boxSpecification: {
                type: "string",
                id: 7
              },
              weight: {
                type: "uint32",
                id: 8
              },
              cooperationModel: {
                type: "string",
                id: 9
              },
              supplyPrice: {
                type: "string",
                id: 10
              },
              currencyCode: {
                type: "string",
                id: 11
              },
              supplierCode: {
                type: "string",
                id: 12
              },
              qrCode: {
                type: "string",
                id: 13
              },
              fingoSkuCode: {
                type: "string",
                id: 14
              },
              supplierSkuId: {
                type: "string",
                id: 15
              },
              specId: {
                type: "string",
                id: 16
              },
              inventory: {
                type: "int32",
                id: 17
              }
            }
          },
          ProductSkuCountry: {
            fields: {
              skuId: {
                type: "string",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              cover: {
                type: "string",
                id: 4
              },
              saleWay: {
                type: "common.enum.ProductEnum.SaleWay",
                id: 5
              },
              deliveryWay: {
                type: "common.enum.ProductEnum.DeliveryWay",
                id: 6
              },
              stock: {
                type: "uint32",
                id: 7
              },
              activeStock: {
                type: "uint32",
                id: 8
              },
              price: {
                type: "string",
                id: 9
              },
              priceVip: {
                type: "string",
                id: 10
              },
              activePrice: {
                type: "string",
                id: 11
              },
              commission: {
                type: "string",
                id: 12
              },
              warehouse: {
                type: "string",
                id: 13
              },
              warehouseName: {
                type: "string",
                id: 14
              },
              saleStatus: {
                type: "common.enum.ProductEnum.SaleStatus",
                id: 15
              },
              compositeProduct: {
                type: "CompositeProduct",
                id: 16
              },
              skuCode: {
                type: "string",
                id: 17
              }
            }
          },
          SlaveSkuInfo: {
            fields: {
              slaveSkuId: {
                type: "string",
                id: 1
              },
              deliveryNumber: {
                type: "uint32",
                id: 2
              },
              skuName: {
                type: "string",
                id: 4
              },
              skuAttrValue: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 5
              },
              skuCode: {
                type: "string",
                id: 6
              }
            }
          },
          CompositeProduct: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              masterSkuId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              slaveSku: {
                rule: "repeated",
                type: "SlaveSkuInfo",
                id: 4
              }
            }
          },
          ProductSku: {
            fields: {
              skuBase: {
                type: "ProductSkuBase",
                id: 2
              },
              skuCountry: {
                rule: "repeated",
                type: "ProductSkuCountry",
                id: 3
              }
            }
          },
          InsertProductReq: {
            fields: {
              cateId: {
                type: "string",
                id: 1
              },
              saleCountry: {
                rule: "repeated",
                type: "ProductSaleCountry",
                id: 2
              },
              productType: {
                type: "common.enum.ProductEnum.ProductType",
                id: 3
              },
              nature: {
                type: "common.enum.ProductEnum.Nature",
                id: 4
              },
              brandId: {
                type: "string",
                id: 5
              },
              supplierId: {
                type: "string",
                id: 6
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 7
              },
              subTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 8
              },
              orgUrl: {
                type: "string",
                id: 9
              },
              productParams: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 11
              },
              productCountry: {
                rule: "repeated",
                type: "ProductCountryInfo",
                id: 12
              },
              pledgeInfo: {
                rule: "repeated",
                type: "PledgeCountryInfo",
                id: 13
              },
              customizeAttr: {
                rule: "repeated",
                type: "CustomizeAttrValueInfo",
                id: 14
              },
              sku: {
                rule: "repeated",
                type: "ProductSku",
                id: 15
              },
              picVideo: {
                rule: "repeated",
                type: "PicAndVideo",
                id: 16
              },
              orgId: {
                type: "string",
                id: 17
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 18
              },
              draftId: {
                type: "string",
                id: 19
              },
              specId: {
                type: "string",
                id: 20
              }
            }
          },
          PicAndVideo: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              cover: {
                type: "string",
                id: 16
              },
              rotation: {
                type: "string",
                id: 17
              },
              video: {
                type: "string",
                id: 18
              },
              detail: {
                type: "string",
                id: 19
              },
              form: {
                type: "string",
                id: 20
              },
              desc: {
                type: "string",
                id: 21
              }
            }
          },
          InsertProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          UpdateProductReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              cateId: {
                type: "string",
                id: 2
              },
              saleCountry: {
                rule: "repeated",
                type: "ProductSaleCountry",
                id: 3
              },
              productType: {
                type: "common.enum.ProductEnum.ProductType",
                id: 4
              },
              nature: {
                type: "common.enum.ProductEnum.Nature",
                id: 5
              },
              brandId: {
                type: "string",
                id: 6
              },
              supplierId: {
                type: "string",
                id: 7
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 8
              },
              subTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 9
              },
              orgUrl: {
                type: "string",
                id: 10
              },
              productParams: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 12
              },
              productCountry: {
                rule: "repeated",
                type: "ProductCountryInfo",
                id: 13
              },
              pledgeInfo: {
                rule: "repeated",
                type: "PledgeCountryInfo",
                id: 14
              },
              customizeAttr: {
                rule: "repeated",
                type: "CustomizeAttrValueInfo",
                id: 15
              },
              sku: {
                rule: "repeated",
                type: "ProductSku",
                id: 16
              },
              picVideo: {
                rule: "repeated",
                type: "PicAndVideo",
                id: 17
              },
              orgId: {
                type: "string",
                id: 18
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 19
              },
              draftId: {
                type: "string",
                id: 20
              }
            }
          },
          UpdateProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DisableProductReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              }
            }
          },
          DisableProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ListProductReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              titleKey: {
                type: "string",
                id: 2
              },
              productIdKey: {
                type: "string",
                id: 3
              },
              standardIdKey: {
                type: "string",
                id: 4
              },
              skuCodeKey: {
                type: "string",
                id: 5
              },
              shelveStatus: {
                type: "common.enum.ProductEnum.ShelveStatus",
                id: 6
              },
              saleWay: {
                type: "common.enum.ProductEnum.SaleWay",
                id: 7
              },
              frontCateId: {
                type: "string",
                id: 8
              },
              backCateId: {
                type: "string",
                id: 9
              },
              countryCode: {
                type: "string",
                id: 10
              },
              timeType: {
                type: "common.enum.ProductEnum.QueryTimeType",
                id: 11
              },
              startTime: {
                type: "string",
                id: 12
              },
              endTime: {
                type: "string",
                id: 13
              },
              productType: {
                type: "string",
                id: 14
              },
              languageCode: {
                type: "string",
                id: 15
              },
              skuIdKey: {
                type: "string",
                id: 16
              },
              sourceKey: {
                type: "string",
                id: 17
              },
              supplierId: {
                type: "string",
                id: 18
              },
              productUrl: {
                type: "string",
                id: 19
              }
            }
          },
          ProductListSpuUnit: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              title: {
                type: "string",
                id: 2
              },
              orgUrl: {
                type: "string",
                id: 3
              },
              backCate: {
                type: "ProductListCateUnit",
                id: 4
              },
              frontCate: {
                rule: "repeated",
                type: "ProductListCateUnit",
                id: 5
              },
              brandInfo: {
                type: "BossBrandInfo",
                id: 6
              },
              spuCover: {
                type: "string",
                id: 7
              },
              supplierId: {
                type: "string",
                id: 8
              },
              supplierName: {
                type: "string",
                id: 9
              },
              virtualSales: {
                type: "uint32",
                id: 10
              },
              trueSales: {
                type: "uint32",
                id: 11
              },
              createTime: {
                type: "string",
                id: 12
              },
              updateTime: {
                type: "string",
                id: 13
              },
              spuCountry: {
                rule: "repeated",
                type: "ProductListSpuCountryUnit",
                id: 14
              },
              sku: {
                rule: "repeated",
                type: "ProductListSkuUnit",
                id: 15
              },
              operationName: {
                type: "string",
                id: 16
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 17
              }
            }
          },
          ProductListCateUnit: {
            fields: {
              cateId: {
                type: "string",
                id: 1
              },
              cateName: {
                type: "string",
                id: 2
              },
              parentPathName: {
                rule: "repeated",
                type: "string",
                id: 3
              }
            }
          },
          ProductListSpuCountryUnit: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              shelveStatus: {
                type: "common.enum.ProductEnum.ShelveStatus",
                id: 3
              },
              price: {
                type: "string",
                id: 4
              },
              priceVip: {
                type: "string",
                id: 5
              }
            }
          },
          ProductListSkuUnit: {
            fields: {
              skuId: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              skuCountry: {
                rule: "repeated",
                type: "ProductListSkuCountryUnit",
                id: 3
              },
              fingoSkuCode: {
                type: "string",
                id: 4
              }
            }
          },
          ProductListSkuCountryUnit: {
            fields: {
              skuId: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              trueSales: {
                type: "uint32",
                id: 3
              },
              commission: {
                type: "string",
                id: 4
              },
              warehouse: {
                type: "string",
                id: 5
              },
              warehouseName: {
                type: "string",
                id: 6
              },
              saleStatus: {
                type: "common.enum.ProductEnum.SaleStatus",
                id: 7
              }
            }
          },
          ListProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              listSpuUnit: {
                rule: "repeated",
                type: "ProductListSpuUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          ViewProductInfoReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              }
            }
          },
          ViewProductInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              cateId: {
                type: "string",
                id: 3
              },
              saleCountry: {
                rule: "repeated",
                type: "ProductSaleCountry",
                id: 4
              },
              productType: {
                type: "common.enum.ProductEnum.ProductType",
                id: 5
              },
              nature: {
                type: "common.enum.ProductEnum.Nature",
                id: 6
              },
              brandInfo: {
                type: "BossBrandInfo",
                id: 7
              },
              supplierId: {
                type: "string",
                id: 9
              },
              supplierName: {
                type: "string",
                id: 10
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 11
              },
              subTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 12
              },
              orgUrl: {
                type: "string",
                id: 13
              },
              productParams: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 15
              },
              productCountry: {
                rule: "repeated",
                type: "ProductCountryInfo",
                id: 16
              },
              pledgeInfo: {
                rule: "repeated",
                type: "PledgeCountryInfo",
                id: 17
              },
              skuBase: {
                rule: "repeated",
                type: "ProductSkuBase",
                id: 18
              },
              skuCountry: {
                rule: "repeated",
                type: "ProductSkuCountry",
                id: 19
              },
              picVideo: {
                rule: "repeated",
                type: "PicAndVideo",
                id: 20
              },
              orgId: {
                type: "string",
                id: 21
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 22
              },
              deliveryWay: {
                type: "common.enum.ProductEnum.DeliveryWay",
                id: 23
              }
            }
          },
          ChangeProductShelveStatusReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              shelveStatus: {
                type: "common.enum.ProductEnum.ShelveStatus",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          ChangeProductShelveStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          CompositeSlaveSkuInfoQueryReq: {
            fields: {
              skuId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          CompositeSlaveSkuQueryInfo: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              skuId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              snapCode: {
                type: "string",
                id: 4
              },
              skuCode: {
                type: "string",
                id: 5
              },
              title: {
                type: "string",
                id: 6
              },
              standardAttr: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 7
              }
            }
          },
          CompositeSlaveSkuInfoQueryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              compositeSlaveSku: {
                rule: "repeated",
                type: "CompositeSlaveSkuQueryInfo",
                id: 2
              },
              message: {
                type: "string",
                id: 4
              }
            }
          },
          Get1688PicReq: {
            fields: {
              content: {
                type: "string",
                id: 1
              }
            }
          },
          Get1688PicResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              detailPic: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              rotationPic: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              videoUrl: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          GetProductTypeListReq: {
            fields: {}
          },
          GetProductTypeListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productType: {
                rule: "repeated",
                type: "ProductTypeUnit",
                id: 2
              }
            }
          },
          ProductTypeUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              productType: {
                type: "common.enum.ProductEnum.ProductType",
                id: 2
              }
            }
          },
          SaleWayUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              saleWay: {
                type: "common.enum.ProductEnum.SaleWay",
                id: 2
              }
            }
          },
          DeliveryWayUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              deliveryWay: {
                type: "common.enum.ProductEnum.DeliveryWay",
                id: 2
              }
            }
          },
          SaleStatusUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              saleStatus: {
                type: "common.enum.ProductEnum.SaleStatus",
                id: 2
              }
            }
          },
          ShelveStatusUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              shelveStatus: {
                type: "common.enum.ProductEnum.ShelveStatus",
                id: 2
              }
            }
          },
          NatureUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              nature: {
                type: "common.enum.ProductEnum.Nature",
                id: 2
              }
            }
          },
          CurrencyUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              currency: {
                type: "common.enum.ProductEnum.Currency",
                id: 2
              },
              unit: {
                type: "string",
                id: 3
              },
              currencyCode: {
                type: "string",
                id: 4
              }
            }
          },
          ProductSourceUnit: {
            fields: {
              name: {
                type: "string",
                id: 1
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 2
              }
            }
          },
          GetProductEnumInfoReq: {
            fields: {}
          },
          GetProductEnumInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productType: {
                rule: "repeated",
                type: "ProductTypeUnit",
                id: 2
              },
              saleWay: {
                rule: "repeated",
                type: "SaleWayUnit",
                id: 3
              },
              deliveryWay: {
                rule: "repeated",
                type: "DeliveryWayUnit",
                id: 4
              },
              saleStatus: {
                rule: "repeated",
                type: "SaleStatusUnit",
                id: 5
              },
              shelveStatus: {
                rule: "repeated",
                type: "ShelveStatusUnit",
                id: 6
              },
              nature: {
                rule: "repeated",
                type: "NatureUnit",
                id: 7
              },
              currency: {
                rule: "repeated",
                type: "CurrencyUnit",
                id: 8
              },
              source: {
                rule: "repeated",
                type: "ProductSourceUnit",
                id: 9
              }
            }
          },
          GetProductRelatedSelectListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              serviceType: {
                type: "ServiceType",
                id: 2
              },
              keyword: {
                type: "string",
                id: 3
              },
              id: {
                type: "string",
                id: 4
              }
            },
            nested: {
              ServiceType: {
                values: {
                  TYPE_NULL: 0,
                  BRAND: 1,
                  SUPPLIER: 2,
                  AFTER_SALE_PLEDGE: 3,
                  ARRIVAL_PLEDGE: 4,
                  FREIGHT_TEMPLATE: 5,
                  WAREHOUSE: 6
                }
              }
            }
          },
          GetProductRelatedSelectListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              idAndName: {
                rule: "repeated",
                type: "IdAndName",
                id: 2
              }
            },
            nested: {
              IdAndName: {
                fields: {
                  id: {
                    type: "string",
                    id: 1
                  },
                  name: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          GetProductSkuInfoBySkuCodeReq: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          GetProductSkuInfoBySkuCodeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productSkuInfo: {
                type: "ProductSkuInfo",
                id: 2
              }
            },
            nested: {
              ProductSkuInfo: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  skuCode: {
                    type: "string",
                    id: 3
                  },
                  title: {
                    type: "string",
                    id: 4
                  },
                  countryCode: {
                    type: "string",
                    id: 5
                  },
                  saleStatus: {
                    type: "common.enum.ProductEnum.SaleStatus",
                    id: 6
                  },
                  skuCover: {
                    type: "string",
                    id: 7
                  },
                  standardAttr: {
                    rule: "repeated",
                    type: "AttrValueInfo",
                    id: 8
                  },
                  standardAttrStr: {
                    type: "string",
                    id: 9
                  }
                }
              }
            }
          },
          ProductExportReq: {
            fields: {
              titleKey: {
                type: "string",
                id: 2
              },
              productIdKey: {
                type: "string",
                id: 3
              },
              standardIdKey: {
                type: "string",
                id: 4
              },
              skuCodeKey: {
                type: "string",
                id: 5
              },
              shelveStatus: {
                type: "common.enum.ProductEnum.ShelveStatus",
                id: 6
              },
              saleWay: {
                type: "common.enum.ProductEnum.SaleWay",
                id: 7
              },
              frontCateId: {
                type: "string",
                id: 8
              },
              backCateId: {
                type: "string",
                id: 9
              },
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 10
              },
              timeType: {
                type: "common.enum.ProductEnum.QueryTimeType",
                id: 11
              },
              startTime: {
                type: "string",
                id: 12
              },
              endTime: {
                type: "string",
                id: 13
              },
              productType: {
                rule: "repeated",
                type: "common.enum.ProductEnum.ProductType",
                id: 14
              },
              languageCode: {
                type: "string",
                id: 15
              }
            }
          },
          ProductExportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          GetProductSpuReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              titleKey: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              },
              languageCode: {
                type: "string",
                id: 5
              },
              memberLevel: {
                type: "uint32",
                id: 6
              },
              brandLevel: {
                type: "uint32",
                id: 7
              },
              sortColumn: {
                type: "common.enum.ProductEnum.SortColumn",
                id: 8
              }
            }
          },
          GetProductSpuResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              spu: {
                rule: "repeated",
                type: "ProductSpu",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            },
            nested: {
              ProductSpu: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  title: {
                    type: "string",
                    id: 2
                  },
                  cover: {
                    type: "string",
                    id: 3
                  },
                  price: {
                    type: "string",
                    id: 4
                  },
                  priceVip: {
                    type: "string",
                    id: 5
                  },
                  commission: {
                    type: "string",
                    id: 6
                  },
                  cartCount: {
                    type: "uint64",
                    id: 7
                  },
                  salesCount: {
                    type: "uint32",
                    id: 8
                  },
                  productType: {
                    type: "common.enum.ProductEnum.ProductType",
                    id: 9
                  }
                }
              }
            }
          },
          GetProductSkuReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          GetProductSkuResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              sku: {
                rule: "repeated",
                type: "ProductSku",
                id: 2
              },
              title: {
                type: "string",
                id: 3
              },
              productType: {
                type: "common.enum.ProductEnum.ProductType",
                id: 4
              }
            },
            nested: {
              ProductSku: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  skuCode: {
                    type: "string",
                    id: 3
                  },
                  price: {
                    type: "string",
                    id: 4
                  },
                  priceVip: {
                    type: "string",
                    id: 5
                  },
                  priceActivityRef: {
                    type: "string",
                    id: 6
                  },
                  commissionRate: {
                    type: "string",
                    id: 7
                  },
                  skuCover: {
                    type: "string",
                    id: 8
                  },
                  skuAttrValue: {
                    rule: "repeated",
                    type: "AttrValueInfo",
                    id: 9
                  },
                  values: {
                    type: "string",
                    id: 10
                  }
                }
              }
            }
          },
          OneKeyUploadProductReq: {
            fields: {
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 1
              },
              orgId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              languageCode: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          OneKeyUploadProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fetchResult: {
                rule: "repeated",
                type: "FetchResult",
                id: 3
              }
            },
            nested: {
              FetchResult: {
                fields: {
                  orgId: {
                    type: "string",
                    id: 1
                  },
                  fetchStatus: {
                    type: "common.enum.ProductEnum.AutoFetchStatus",
                    id: 2
                  },
                  result: {
                    rule: "repeated",
                    type: "string",
                    id: 3
                  },
                  oneKeyId: {
                    type: "string",
                    id: 4
                  },
                  draftId: {
                    type: "string",
                    id: 5
                  }
                }
              }
            }
          },
          CheckToBeConfirmReq: {
            fields: {
              oneKeyId: {
                type: "string",
                id: 1
              }
            }
          },
          CheckToBeConfirmResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DraftListUnit: {
            fields: {
              draftId: {
                type: "string",
                id: 1
              },
              publishType: {
                type: "common.enum.ProductEnum.OneKeyPublishType",
                id: 2
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 3
              },
              orgUrl: {
                type: "string",
                id: 4
              },
              orgId: {
                type: "string",
                id: 5
              },
              cateNameList: {
                type: "string",
                id: 6
              },
              operatorName: {
                type: "string",
                id: 7
              },
              draftStatus: {
                type: "common.enum.ProductEnum.DraftStatusType",
                id: 8
              },
              title: {
                type: "string",
                id: 9
              },
              cover: {
                type: "string",
                id: 10
              },
              creatorName: {
                type: "string",
                id: 11
              },
              createTime: {
                type: "string",
                id: 12
              },
              updateTime: {
                type: "string",
                id: 13
              }
            }
          },
          DraftUnit: {
            fields: {
              draftId: {
                type: "string",
                id: 1
              },
              cateId: {
                type: "string",
                id: 2
              },
              saleCountry: {
                rule: "repeated",
                type: "ProductSaleCountry",
                id: 3
              },
              productType: {
                type: "common.enum.ProductEnum.ProductType",
                id: 4
              },
              nature: {
                type: "common.enum.ProductEnum.Nature",
                id: 5
              },
              brandInfo: {
                type: "BossBrandInfo",
                id: 6
              },
              supplierId: {
                type: "string",
                id: 7
              },
              supplierName: {
                type: "string",
                id: 8
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 9
              },
              subTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 10
              },
              orgUrl: {
                type: "string",
                id: 11
              },
              productParams: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 12
              },
              productCountry: {
                rule: "repeated",
                type: "ProductCountryInfo",
                id: 13
              },
              pledgeInfo: {
                rule: "repeated",
                type: "PledgeCountryInfo",
                id: 14
              },
              skuBase: {
                rule: "repeated",
                type: "ProductSkuBase",
                id: 15
              },
              skuCountry: {
                rule: "repeated",
                type: "ProductSkuCountry",
                id: 16
              },
              picVideo: {
                rule: "repeated",
                type: "PicAndVideo",
                id: 17
              },
              orgId: {
                type: "string",
                id: 18
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 19
              },
              draftType: {
                type: "common.enum.ProductEnum.DraftType",
                id: 20
              },
              productId: {
                type: "string",
                id: 21
              },
              draftStatus: {
                type: "common.enum.ProductEnum.DraftStatusType",
                id: 22
              },
              deliveryWay: {
                type: "common.enum.ProductEnum.DeliveryWay",
                id: 23
              },
              isModifyStatus: {
                type: "bool",
                id: 24
              }
            }
          },
          UpdateDraftUnit: {
            fields: {
              draftId: {
                type: "string",
                id: 1
              },
              cateId: {
                type: "string",
                id: 2
              },
              saleCountry: {
                rule: "repeated",
                type: "ProductSaleCountry",
                id: 3
              },
              productType: {
                type: "common.enum.ProductEnum.ProductType",
                id: 4
              },
              nature: {
                type: "common.enum.ProductEnum.Nature",
                id: 5
              },
              brandId: {
                type: "string",
                id: 6
              },
              supplierId: {
                type: "string",
                id: 7
              },
              supplierName: {
                type: "string",
                id: 8
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 9
              },
              subTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 10
              },
              orgUrl: {
                type: "string",
                id: 11
              },
              productParams: {
                rule: "repeated",
                type: "AttrValueInfo",
                id: 12
              },
              productCountry: {
                rule: "repeated",
                type: "ProductCountryInfo",
                id: 13
              },
              pledgeInfo: {
                rule: "repeated",
                type: "PledgeCountryInfo",
                id: 14
              },
              sku: {
                rule: "repeated",
                type: "ProductSku",
                id: 15
              },
              picVideo: {
                rule: "repeated",
                type: "PicAndVideo",
                id: 16
              },
              orgId: {
                type: "string",
                id: 17
              },
              source: {
                type: "common.enum.ProductEnum.ProductSource",
                id: 18
              },
              draftType: {
                type: "common.enum.ProductEnum.DraftType",
                id: 19
              },
              productId: {
                type: "string",
                id: 20
              }
            }
          },
          DeleteDraftsReq: {
            fields: {
              draftId: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          DeleteDraftsResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListDraftsReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              timeType: {
                type: "int32",
                id: 2
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              },
              operatorId: {
                type: "string",
                id: 5
              }
            }
          },
          ListDraftsResp: {
            fields: {
              draftListUnit: {
                rule: "repeated",
                type: "DraftListUnit",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          UpdateDraftReq: {
            fields: {
              updateDraftUnit: {
                type: "UpdateDraftUnit",
                id: 1
              },
              draftId: {
                type: "string",
                id: 2
              },
              submitDraft: {
                type: "bool",
                id: 3
              }
            }
          },
          UpdateDraftResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetDraftByIdReq: {
            fields: {
              draftId: {
                type: "string",
                id: 1
              }
            }
          },
          GetDraftByIdResp: {
            fields: {
              draftUnit: {
                type: "DraftUnit",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          GetDraftOperatorListReq: {
            fields: {
              operatorType: {
                type: "OperatorType",
                id: 1
              }
            },
            nested: {
              OperatorType: {
                values: {
                  OPERATOR_NULL: 0,
                  OPERATOR_CREATOR: 1,
                  OPERATOR_MODIFIER: 2,
                  OPERATOR_REVIEWER: 3
                }
              }
            }
          },
          GetDraftOperatorListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              operator: {
                rule: "repeated",
                type: "OperatorUnit",
                id: 2
              }
            }
          },
          OperatorUnit: {
            fields: {
              operatorId: {
                type: "string",
                id: 1
              },
              operationName: {
                type: "string",
                id: 2
              }
            }
          },
          AdvanceProduct: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              skuId: {
                type: "string",
                id: 4
              },
              skuCode: {
                type: "string",
                id: 5
              },
              cover: {
                type: "string",
                id: 6
              },
              skuValue: {
                rule: "repeated",
                type: "AdvanceSkuAttr",
                id: 7
              },
              advanceType: {
                type: "common.enum.AdvanceSaleEnum.AdvanceType",
                id: 8
              },
              advanceStock: {
                type: "uint32",
                id: 9
              }
            }
          },
          AdvanceSkuAttr: {
            fields: {
              attrId: {
                type: "string",
                id: 1
              },
              attrName: {
                type: "string",
                id: 2
              },
              valueId: {
                type: "string",
                id: 3
              },
              valueName: {
                type: "string",
                id: 4
              }
            }
          },
          AdvanceSaleSkuInfoGetReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          AdvanceSaleSkuInfoGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              advanceProduct: {
                rule: "repeated",
                type: "AdvanceProduct",
                id: 2
              }
            }
          },
          AdvanceSaleAddReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              },
              deliveryDeadline: {
                type: "string",
                id: 3
              },
              endConfig: {
                type: "common.enum.AdvanceSaleEnum.EndConfig",
                id: 4
              },
              purchaseConfig: {
                type: "common.enum.AdvanceSaleEnum.PurchaseConfig",
                id: 5
              },
              purchaseDeadline: {
                type: "string",
                id: 6
              },
              warehouseNo: {
                type: "string",
                id: 7
              },
              advanceProduct: {
                rule: "repeated",
                type: "AdvanceProduct",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 9
              }
            }
          },
          AdvanceSaleAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AdvanceSaleListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productIdKey: {
                type: "string",
                id: 2
              },
              skuIdKey: {
                type: "string",
                id: 3
              },
              skuCodeKey: {
                type: "string",
                id: 4
              },
              nameKey: {
                type: "string",
                id: 5
              },
              countryCodeKey: {
                type: "string",
                id: 6
              },
              advanceTypeKey: {
                type: "string",
                id: 7
              },
              purchaseConfigKey: {
                type: "string",
                id: 8
              },
              warehouseNoKey: {
                type: "string",
                id: 9
              },
              advanceStatusKey: {
                type: "string",
                id: 10
              }
            }
          },
          AdvanceSaleListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              advanceUnit: {
                rule: "repeated",
                type: "AdvanceListUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            },
            nested: {
              AdvanceListUnit: {
                fields: {
                  advanceId: {
                    type: "string",
                    id: 1
                  },
                  productId: {
                    type: "string",
                    id: 2
                  },
                  skuId: {
                    type: "string",
                    id: 3
                  },
                  skuCode: {
                    type: "string",
                    id: 4
                  },
                  cover: {
                    type: "string",
                    id: 5
                  },
                  name: {
                    type: "string",
                    id: 6
                  },
                  skuValue: {
                    rule: "repeated",
                    type: "AdvanceSkuAttr",
                    id: 7
                  },
                  countryCode: {
                    type: "string",
                    id: 8
                  },
                  endConfig: {
                    type: "common.enum.AdvanceSaleEnum.EndConfig",
                    id: 9
                  },
                  startTime: {
                    type: "string",
                    id: 10
                  },
                  endTime: {
                    type: "string",
                    id: 11
                  },
                  purchaseConfig: {
                    type: "common.enum.AdvanceSaleEnum.PurchaseConfig",
                    id: 12
                  },
                  purchaseDeadline: {
                    type: "string",
                    id: 13
                  },
                  deliveryDeadline: {
                    type: "string",
                    id: 14
                  },
                  warehouseNo: {
                    type: "string",
                    id: 15
                  },
                  warehouseName: {
                    type: "string",
                    id: 16
                  },
                  advanceStock: {
                    type: "uint32",
                    id: 17
                  },
                  restAdvanceStock: {
                    type: "uint32",
                    id: 18
                  },
                  soldChildOrderCount: {
                    type: "uint32",
                    id: 19
                  },
                  readyToPushPurchaseOrderCount: {
                    type: "uint32",
                    id: 20
                  },
                  overduePurchaseOrderCount: {
                    type: "uint32",
                    id: 21
                  },
                  advanceStatus: {
                    type: "common.enum.AdvanceSaleEnum.AdvanceStatus",
                    id: 22
                  },
                  advanceType: {
                    type: "common.enum.AdvanceSaleEnum.AdvanceType",
                    id: 23
                  }
                }
              }
            }
          },
          AdvanceSaleGetReq: {
            fields: {
              advanceId: {
                type: "string",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              }
            }
          },
          AdvanceSaleGetResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              advanceId: {
                type: "string",
                id: 2
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              },
              deliveryDeadline: {
                type: "string",
                id: 5
              },
              endConfig: {
                type: "common.enum.AdvanceSaleEnum.EndConfig",
                id: 6
              },
              purchaseConfig: {
                type: "common.enum.AdvanceSaleEnum.PurchaseConfig",
                id: 7
              },
              purchaseDeadline: {
                type: "string",
                id: 8
              },
              warehouseNo: {
                type: "string",
                id: 9
              },
              warehouseName: {
                type: "string",
                id: 10
              },
              advanceProduct: {
                rule: "repeated",
                type: "AdvanceProduct",
                id: 11
              }
            }
          },
          AdvanceSaleUploadReq: {
            fields: {
              uploadUrl: {
                type: "string",
                id: 1
              }
            }
          },
          AdvanceSaleUploadResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AdvanceSaleUpdateReq: {
            fields: {
              advanceId: {
                type: "string",
                id: 1
              },
              startTime: {
                type: "string",
                id: 2
              },
              endTime: {
                type: "string",
                id: 3
              },
              deliveryDeadline: {
                type: "string",
                id: 4
              },
              endConfig: {
                type: "common.enum.AdvanceSaleEnum.EndConfig",
                id: 5
              },
              purchaseConfig: {
                type: "common.enum.AdvanceSaleEnum.PurchaseConfig",
                id: 6
              },
              purchaseDeadline: {
                type: "string",
                id: 7
              },
              warehouseNo: {
                type: "string",
                id: 8
              },
              advanceProduct: {
                rule: "repeated",
                type: "AdvanceProduct",
                id: 9
              },
              countryCode: {
                type: "string",
                id: 10
              }
            }
          },
          AdvanceSaleUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AdvanceSaleDownloadReq: {
            fields: {
              productIdKey: {
                type: "string",
                id: 2
              },
              skuIdKey: {
                type: "string",
                id: 3
              },
              skuCodeKey: {
                type: "string",
                id: 4
              },
              nameKey: {
                type: "string",
                id: 5
              },
              countryCodeKey: {
                type: "string",
                id: 6
              },
              advanceTypeKey: {
                type: "string",
                id: 7
              },
              purchaseConfigKey: {
                type: "string",
                id: 8
              },
              warehouseNoKey: {
                type: "string",
                id: 9
              },
              advanceStatusKey: {
                type: "string",
                id: 10
              },
              advanceItem: {
                rule: "repeated",
                type: "AdvanceItem",
                id: 11
              }
            },
            nested: {
              AdvanceItem: {
                fields: {
                  advanceId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          AdvanceSaleDownloadResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              downloadUrl: {
                type: "string",
                id: 2
              }
            }
          },
          ManualPushAdvancePurchaseReq: {
            fields: {
              sku: {
                rule: "repeated",
                type: "AdvanceSaleSku",
                id: 1
              }
            },
            nested: {
              AdvanceSaleSku: {
                fields: {
                  advanceId: {
                    type: "string",
                    id: 1
                  },
                  skuCode: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          ManualPushAdvancePurchaseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          RecommendConfigReq: {
            fields: {
              recommendSwitch: {
                type: "bool",
                id: 1
              }
            }
          },
          RecommendConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          RefuseSupplierDraftReq: {
            fields: {
              draftId: {
                type: "string",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          RefuseSupplierDraftResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetSkuInfoBySkuIdReq: {
            fields: {
              skuId: {
                rule: "repeated",
                type: "int64",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              filterStatus: {
                type: "bool",
                id: 3
              }
            }
          },
          SkuInfo: {
            fields: {
              spuId: {
                type: "string",
                id: 9
              },
              skuId: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              title: {
                type: "string",
                id: 3
              },
              cover: {
                type: "string",
                id: 4
              },
              localInventory: {
                type: "int32",
                id: 5
              },
              skuAttr: {
                type: "string",
                id: 6
              },
              price: {
                type: "string",
                id: 7
              },
              priceVip: {
                type: "string",
                id: 8
              }
            }
          },
          GetSkuInfoBySkuIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              skuInfo: {
                rule: "repeated",
                type: "SkuInfo",
                id: 2
              }
            }
          },
          ProductService: {
            methods: {
              ListProduct: {
                requestType: "ListProductReq",
                responseType: "ListProductResp"
              },
              InsertProduct: {
                requestType: "InsertProductReq",
                responseType: "InsertProductResp"
              },
              InsertSupplierProduct: {
                requestType: "InsertProductReq",
                responseType: "InsertProductResp"
              },
              UpdateProduct: {
                requestType: "UpdateProductReq",
                responseType: "UpdateProductResp"
              },
              DisableProduct: {
                requestType: "DisableProductReq",
                responseType: "DisableProductResp"
              },
              ViewProductInfo: {
                requestType: "ViewProductInfoReq",
                responseType: "ViewProductInfoResp"
              },
              ChangeProductShelveStatus: {
                requestType: "ChangeProductShelveStatusReq",
                responseType: "ChangeProductShelveStatusResp"
              },
              GetProductTypeList: {
                requestType: "GetProductTypeListReq",
                responseType: "GetProductTypeListResp"
              },
              CompositeSlaveSkuInfoQuery: {
                requestType: "CompositeSlaveSkuInfoQueryReq",
                responseType: "CompositeSlaveSkuInfoQueryResp"
              },
              Get1688Pic: {
                requestType: "Get1688PicReq",
                responseType: "Get1688PicResp"
              },
              GetProductEnumInfo: {
                requestType: "GetProductEnumInfoReq",
                responseType: "GetProductEnumInfoResp"
              },
              GetProductRelatedSelectList: {
                requestType: "GetProductRelatedSelectListReq",
                responseType: "GetProductRelatedSelectListResp"
              },
              GetProductSkuInfoBySkuCode: {
                requestType: "GetProductSkuInfoBySkuCodeReq",
                responseType: "GetProductSkuInfoBySkuCodeResp"
              },
              GetProductSpu: {
                requestType: "GetProductSpuReq",
                responseType: "GetProductSpuResp"
              },
              GetProductSku: {
                requestType: "GetProductSkuReq",
                responseType: "GetProductSkuResp"
              },
              ProductExport: {
                requestType: "ProductExportReq",
                responseType: "ProductExportResp"
              },
              OneKeyUploadProduct: {
                requestType: "OneKeyUploadProductReq",
                responseType: "OneKeyUploadProductResp"
              },
              CheckToBeConfirm: {
                requestType: "CheckToBeConfirmReq",
                responseType: "CheckToBeConfirmResp"
              },
              DeleteDrafts: {
                requestType: "DeleteDraftsReq",
                responseType: "DeleteDraftsResp"
              },
              ListDrafts: {
                requestType: "ListDraftsReq",
                responseType: "ListDraftsResp"
              },
              UpdateDraft: {
                requestType: "UpdateDraftReq",
                responseType: "UpdateDraftResp"
              },
              UpdateSupplierDraft: {
                requestType: "UpdateDraftReq",
                responseType: "UpdateDraftResp"
              },
              GetDraftById: {
                requestType: "GetDraftByIdReq",
                responseType: "GetDraftByIdResp"
              },
              GetSupplierDraftById: {
                requestType: "GetDraftByIdReq",
                responseType: "GetDraftByIdResp"
              },
              GetDraftOperatorList: {
                requestType: "GetDraftOperatorListReq",
                responseType: "GetDraftOperatorListResp"
              },
              AdvanceSaleSkuInfoGet: {
                requestType: "AdvanceSaleSkuInfoGetReq",
                responseType: "AdvanceSaleSkuInfoGetResp"
              },
              AdvanceSaleAdd: {
                requestType: "AdvanceSaleAddReq",
                responseType: "AdvanceSaleAddResp"
              },
              AdvanceSaleList: {
                requestType: "AdvanceSaleListReq",
                responseType: "AdvanceSaleListResp"
              },
              AdvanceSaleGet: {
                requestType: "AdvanceSaleGetReq",
                responseType: "AdvanceSaleGetResp"
              },
              AdvanceSaleUpload: {
                requestType: "AdvanceSaleUploadReq",
                responseType: "AdvanceSaleUploadResp"
              },
              AdvanceSaleUpdate: {
                requestType: "AdvanceSaleUpdateReq",
                responseType: "AdvanceSaleUpdateResp"
              },
              AdvanceSaleDownload: {
                requestType: "AdvanceSaleDownloadReq",
                responseType: "AdvanceSaleDownloadResp"
              },
              ManualPushAdvancePurchase: {
                requestType: "ManualPushAdvancePurchaseReq",
                responseType: "ManualPushAdvancePurchaseResp"
              },
              RefuseSupplierDraft: {
                requestType: "RefuseSupplierDraftReq",
                responseType: "RefuseSupplierDraftResp"
              },
              GetSkuInfoBySkuId: {
                requestType: "GetSkuInfoBySkuIdReq",
                responseType: "GetSkuInfoBySkuIdResp"
              }
            }
          },
          RecommendService: {
            methods: {
              RecommendConfig: {
                requestType: "RecommendConfigReq",
                responseType: "RecommendConfigResp"
              }
            }
          },
          UploadChangeSpuInfoReq: {
            fields: {
              fileUrl: {
                type: "string",
                id: 1
              },
              filePath: {
                type: "string",
                id: 2
              }
            }
          },
          UploadChangeSpuInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UploadProductLabelReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              type: {
                type: "ActionType",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              startTime: {
                type: "string",
                id: 4
              },
              labelType: {
                type: "common.enum.ProductEnum.LabelType",
                id: 5
              }
            },
            nested: {
              ActionType: {
                values: {
                  Action_NULL: 0,
                  Action_Add: 1,
                  Action_Del: 2,
                  Action_AllDel: 3
                }
              }
            }
          },
          UploadProductLabelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductExcelService: {
            methods: {
              UploadChangeSpuInfo: {
                requestType: "UploadChangeSpuInfoReq",
                responseType: "UploadChangeSpuInfoResp"
              },
              UploadProductLabel: {
                requestType: "UploadProductLabelReq",
                responseType: "UploadProductLabelResp"
              }
            }
          },
          GetShelveListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              saleWay: {
                type: "string",
                id: 3
              },
              cateId: {
                type: "string",
                id: 4
              },
              showShouldOffShelve: {
                type: "string",
                id: 5
              },
              showShouldOnShelve: {
                type: "string",
                id: 6
              },
              countryCode: {
                type: "string",
                id: 7
              }
            }
          },
          GetShelveListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              spuUnit: {
                rule: "repeated",
                type: "SpuUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            },
            nested: {
              SkuUnit: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  skuId: {
                    type: "string",
                    id: 2
                  },
                  stock: {
                    type: "uint32",
                    id: 3
                  },
                  saleWay: {
                    type: "common.enum.ProductEnum.SaleWay",
                    id: 4
                  },
                  suggest: {
                    type: "common.enum.ProductEnum.StockSuggest",
                    id: 5
                  },
                  saleStatus: {
                    type: "common.enum.ProductEnum.SaleStatus",
                    id: 6
                  },
                  skuAttr: {
                    rule: "repeated",
                    type: "AttrValueInfo",
                    id: 12
                  }
                }
              },
              SpuUnit: {
                fields: {
                  productId: {
                    type: "string",
                    id: 1
                  },
                  cover: {
                    type: "string",
                    id: 2
                  },
                  title: {
                    type: "string",
                    id: 3
                  },
                  stock: {
                    type: "uint32",
                    id: 4
                  },
                  suggest: {
                    type: "common.enum.ProductEnum.StockSuggest",
                    id: 5
                  },
                  shelveStatus: {
                    type: "common.enum.ProductEnum.ShelveStatus",
                    id: 6
                  },
                  skuUnit: {
                    rule: "repeated",
                    type: "SkuUnit",
                    id: 7
                  },
                  offReason: {
                    type: "common.enum.ProductEnum.OffShelveReason",
                    id: 8
                  },
                  lastOffTime: {
                    type: "string",
                    id: 9
                  }
                }
              }
            }
          },
          BatchAcceptShelveAdviceCheckReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          BatchAcceptShelveAdviceCheckResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              reason: {
                rule: "repeated",
                type: "WarningReason",
                id: 2
              }
            }
          },
          BatchAcceptShelveAdviceReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          BatchAcceptShelveAdviceResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BatchOnShelveCheckReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          BatchOnShelveCheckResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              reason: {
                rule: "repeated",
                type: "WarningReason",
                id: 2
              }
            }
          },
          WarningReason: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              offReason: {
                type: "common.enum.ProductEnum.OffShelveReason",
                id: 2
              },
              reason: {
                type: "string",
                id: 3
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 4
              }
            }
          },
          BatchOnShelveReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          BatchOnShelveResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BatchOffShelveReq: {
            fields: {
              productId: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              offReason: {
                type: "common.enum.ProductEnum.OffShelveReason",
                id: 3
              }
            }
          },
          BatchOffShelveResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ChangeSaleStatusReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              skuId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              saleStatus: {
                type: "common.enum.ProductEnum.SaleStatus",
                id: 4
              }
            }
          },
          ChangeSaleStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SynonymWordsListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              leftWord: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              rightWord: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          SynonymWordsListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              synonymWordsPb: {
                rule: "repeated",
                type: "SynonymWordsPb",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              SynonymWordsPb: {
                fields: {
                  id: {
                    type: "int32",
                    id: 1
                  },
                  languageCode: {
                    type: "string",
                    id: 2
                  },
                  leftWord: {
                    type: "string",
                    id: 3
                  },
                  rightWord: {
                    type: "string",
                    id: 4
                  },
                  flag: {
                    type: "int32",
                    id: 5
                  },
                  createTime: {
                    type: "string",
                    id: 6
                  },
                  updateTime: {
                    type: "string",
                    id: 7
                  }
                }
              }
            }
          },
          SynonymWordsAddOrEditReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              leftWord: {
                type: "string",
                id: 3
              },
              rightWord: {
                type: "string",
                id: 4
              },
              flag: {
                type: "int32",
                id: 5
              },
              type: {
                type: "int32",
                id: 6
              }
            }
          },
          SynonymWordsAddOrEditResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SynonymWordsDeleteReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          SynonymWordsDeleteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SensitiveWordsListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              senseType: {
                type: "int32",
                id: 2
              },
              languageCode: {
                type: "string",
                id: 3
              },
              word: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          SensitiveWordsListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              sensitiveWordsPb: {
                rule: "repeated",
                type: "SensitiveWordsPb",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            },
            nested: {
              SensitiveWordsPb: {
                fields: {
                  id: {
                    type: "int32",
                    id: 1
                  },
                  senseType: {
                    type: "int32",
                    id: 2
                  },
                  languageCode: {
                    type: "string",
                    id: 3
                  },
                  word: {
                    type: "string",
                    id: 4
                  },
                  status: {
                    type: "int32",
                    id: 5
                  },
                  createTime: {
                    type: "string",
                    id: 6
                  },
                  updateTime: {
                    type: "string",
                    id: 7
                  }
                }
              }
            }
          },
          SensitiveWordsAddOrEditReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              senseType: {
                type: "int32",
                id: 2
              },
              languageCode: {
                type: "string",
                id: 3
              },
              word: {
                type: "string",
                id: 4
              },
              status: {
                type: "int32",
                id: 5
              },
              type: {
                type: "int32",
                id: 6
              }
            }
          },
          SensitiveWordsAddOrEditResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SensitiveWordsDeleteReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          SensitiveWordsDeleteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductBatchOperationService: {
            methods: {
              GetShelveList: {
                requestType: "GetShelveListReq",
                responseType: "GetShelveListResp"
              },
              BatchAcceptShelveAdviceCheck: {
                requestType: "BatchAcceptShelveAdviceCheckReq",
                responseType: "BatchAcceptShelveAdviceCheckResp"
              },
              BatchAcceptShelveAdvice: {
                requestType: "BatchAcceptShelveAdviceReq",
                responseType: "BatchAcceptShelveAdviceResp"
              },
              BatchOnShelveCheck: {
                requestType: "BatchOnShelveCheckReq",
                responseType: "BatchOnShelveCheckResp"
              },
              BatchOnShelve: {
                requestType: "BatchOnShelveReq",
                responseType: "BatchOnShelveResp"
              },
              BatchOffShelve: {
                requestType: "BatchOffShelveReq",
                responseType: "BatchOffShelveResp"
              },
              ChangeSaleStatus: {
                requestType: "ChangeSaleStatusReq",
                responseType: "ChangeSaleStatusResp"
              }
            }
          },
          ProductSearchBossService: {
            methods: {
              SynonymWordsList: {
                requestType: "SynonymWordsListReq",
                responseType: "SynonymWordsListResp"
              },
              SynonymWordsAddOrEdit: {
                requestType: "SynonymWordsAddOrEditReq",
                responseType: "SynonymWordsAddOrEditResp"
              },
              SynonymWordsDelete: {
                requestType: "SynonymWordsDeleteReq",
                responseType: "SynonymWordsDeleteResp"
              },
              SensitiveWordsList: {
                requestType: "SensitiveWordsListReq",
                responseType: "SensitiveWordsListResp"
              },
              SensitiveWordsAddOrEdit: {
                requestType: "SensitiveWordsAddOrEditReq",
                responseType: "SensitiveWordsAddOrEditResp"
              },
              SensitiveWordsDelete: {
                requestType: "SensitiveWordsDeleteReq",
                responseType: "SensitiveWordsDeleteResp"
              }
            }
          },
          SupplierProductQueryReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              skuCode: {
                type: "string",
                id: 4
              },
              title: {
                type: "string",
                id: 5
              },
              supplierSkuCode: {
                type: "string",
                id: 6
              },
              qrCode: {
                type: "string",
                id: 11
              },
              shelve: {
                type: "int32",
                id: 7
              },
              supplierId: {
                type: "string",
                id: 8
              },
              deliveryWay: {
                type: "string",
                id: 10
              }
            }
          },
          SupplierProductListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 3
              },
              totalCount: {
                type: "int32",
                id: 2
              },
              spuPB: {
                rule: "repeated",
                type: "SupplierProductSpuPB",
                id: 8
              }
            }
          },
          SupplierProductSpuPB: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              productPic: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              productPrice: {
                type: "string",
                id: 4
              },
              supplierQty: {
                type: "int32",
                id: 5
              },
              bookQyt: {
                type: "int32",
                id: 6
              },
              availableQty: {
                type: "int32",
                id: 7
              },
              shelveStatus: {
                type: "string",
                id: 8
              },
              skuPB: {
                rule: "repeated",
                type: "SupplierProductSkuPB",
                id: 9
              },
              barCode: {
                type: "string",
                id: 10
              },
              cateId: {
                type: "string",
                id: 11
              },
              cateName: {
                type: "string",
                id: 13
              },
              currencyCode: {
                type: "string",
                id: 12
              },
              message: {
                type: "string",
                id: 14
              },
              draftStatus: {
                type: "common.enum.ProductEnum.DraftStatusType",
                id: 15
              }
            }
          },
          SupplierProductSkuPB: {
            fields: {
              skuPic: {
                type: "string",
                id: 1
              },
              skuValues: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              supplierCode: {
                type: "string",
                id: 4
              },
              purchasePrice: {
                type: "string",
                id: 5
              },
              currencyCode: {
                type: "string",
                id: 10
              },
              supplierQty: {
                type: "int32",
                id: 6
              },
              bookQyt: {
                type: "int32",
                id: 7
              },
              availableQty: {
                type: "int32",
                id: 8
              },
              saleStatus: {
                type: "int32",
                id: 9
              },
              skuId: {
                type: "string",
                id: 11
              },
              productId: {
                type: "string",
                id: 12
              }
            }
          },
          SupplierProductAuditListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              skuCode: {
                type: "string",
                id: 4
              },
              title: {
                type: "string",
                id: 5
              },
              supplierSkuCode: {
                type: "string",
                id: 6
              },
              status: {
                type: "int32",
                id: 12
              },
              supplierId: {
                type: "string",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              },
              cateId: {
                type: "int32",
                id: 9
              },
              startTime: {
                type: "string",
                id: 10
              },
              endTime: {
                type: "string",
                id: 11
              },
              timeType: {
                type: "int32",
                id: 13
              },
              deliveryWay: {
                type: "string",
                id: 14
              },
              operatorId: {
                type: "string",
                id: 15
              },
              sourceType: {
                type: "int32",
                id: 16
              }
            }
          },
          SupplierProductAuditListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 3
              },
              totalCount: {
                type: "int32",
                id: 2
              },
              spuPB: {
                rule: "repeated",
                type: "SupplierProductDraftListPB",
                id: 8
              }
            }
          },
          SupplierProductDraftListPB: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              productPic: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              productPrice: {
                type: "string",
                id: 4
              },
              supplierQty: {
                type: "int32",
                id: 5
              },
              shelveStatus: {
                type: "string",
                id: 6
              },
              draftStatus: {
                type: "common.enum.ProductEnum.DraftStatusType",
                id: 8
              },
              updateTime: {
                type: "string",
                id: 7
              },
              createTime: {
                type: "string",
                id: 9
              },
              supplierName: {
                type: "string",
                id: 10
              },
              countryCode: {
                type: "string",
                id: 11
              },
              operator: {
                type: "string",
                id: 12
              },
              cateId: {
                type: "string",
                id: 13
              },
              cateName: {
                type: "string",
                id: 14
              },
              draftId: {
                type: "string",
                id: 15
              },
              currencyCode: {
                type: "string",
                id: 16
              },
              message: {
                type: "string",
                id: 17
              },
              draftType: {
                type: "common.enum.ProductEnum.DraftType",
                id: 18
              },
              activity: {
                type: "int32",
                id: 19
              },
              isModifyStatus: {
                type: "bool",
                id: 21
              }
            }
          },
          GetSupplierInfoReq: {
            fields: {}
          },
          GetSupplierInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              supplierId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              supplierName: {
                type: "string",
                id: 4
              }
            }
          },
          SubmitSupplierDraftByIdReq: {
            fields: {
              draftId: {
                type: "string",
                id: 1
              }
            }
          },
          SubmitSupplierDraftByIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SummaryProductReq: {
            fields: {}
          },
          SummaryProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              directData: {
                type: "ProductCountData",
                id: 2
              },
              platformData: {
                type: "ProductCountData",
                id: 3
              }
            },
            nested: {
              ProductCountData: {
                fields: {
                  onShelf: {
                    type: "uint32",
                    id: 1
                  },
                  auditFail: {
                    type: "uint32",
                    id: 2
                  },
                  offShelf: {
                    type: "uint32",
                    id: 3
                  }
                }
              }
            }
          },
          SupplierBrandListReq: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              }
            }
          },
          SupplierBrandListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              brandInfo: {
                rule: "repeated",
                type: "BossBrandInfo",
                id: 2
              }
            }
          },
          SupplierDraftDeleteReq: {
            fields: {
              draftId: {
                type: "string",
                id: 1
              }
            }
          },
          SupplierDraftDeleteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SupplierProductService: {
            methods: {
              SupplierProductListByCondition: {
                requestType: "SupplierProductQueryReq",
                responseType: "SupplierProductListResp"
              },
              UpdateSupplierDraft: {
                requestType: "UpdateDraftReq",
                responseType: "UpdateDraftResp"
              },
              ViewProductInfo: {
                requestType: "ViewProductInfoReq",
                responseType: "ViewProductInfoResp"
              },
              GetSupplierDraftById: {
                requestType: "GetDraftByIdReq",
                responseType: "GetDraftByIdResp"
              },
              BatchOnShelveCheck: {
                requestType: "BatchOnShelveCheckReq",
                responseType: "BatchOnShelveCheckResp"
              },
              BatchOnShelve: {
                requestType: "BatchOnShelveReq",
                responseType: "BatchOnShelveResp"
              },
              BatchOffShelve: {
                requestType: "BatchOffShelveReq",
                responseType: "BatchOffShelveResp"
              },
              ProductExport: {
                requestType: "SupplierProductQueryReq",
                responseType: "ProductExportResp"
              },
              SupplierAuditList: {
                requestType: "SupplierProductAuditListReq",
                responseType: "SupplierProductAuditListResp"
              },
              GetSupplierInfo: {
                requestType: "GetSupplierInfoReq",
                responseType: "GetSupplierInfoResp"
              },
              SubmitSupplierDraftById: {
                requestType: "SubmitSupplierDraftByIdReq",
                responseType: "SubmitSupplierDraftByIdResp"
              },
              ChangeSaleStatus: {
                requestType: "ChangeSaleStatusReq",
                responseType: "ChangeSaleStatusResp"
              },
              SummaryProduct: {
                requestType: "SummaryProductReq",
                responseType: "SummaryProductResp"
              },
              SupplierBrandList: {
                requestType: "SupplierBrandListReq",
                responseType: "SupplierBrandListResp"
              },
              SupplierDraftDeleteById: {
                requestType: "SupplierDraftDeleteReq",
                responseType: "SupplierDraftDeleteResp"
              }
            }
          },
          GetGiftListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              giftName: {
                type: "string",
                id: 2
              },
              status: {
                type: "int32",
                id: 3
              },
              startTime: {
                type: "uint64",
                id: 4
              },
              endTime: {
                type: "uint64",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              }
            }
          },
          GetGiftListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              giftInfo: {
                rule: "repeated",
                type: "GiftListInfo",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            },
            nested: {
              GiftListInfo: {
                fields: {
                  giftId: {
                    type: "int32",
                    id: 1
                  },
                  name: {
                    type: "string",
                    id: 2
                  },
                  couponAmount: {
                    type: "string",
                    id: 5
                  },
                  activityCouponAmount: {
                    type: "string",
                    id: 6
                  },
                  productCount: {
                    type: "int32",
                    id: 7
                  },
                  status: {
                    type: "int32",
                    id: 8
                  },
                  updateTime: {
                    type: "string",
                    id: 9
                  },
                  sort: {
                    type: "int32",
                    id: 10
                  },
                  commissionConfig: {
                    type: "string",
                    id: 11
                  }
                }
              }
            }
          },
          GetGiftDetailReq: {
            fields: {
              giftId: {
                type: "int32",
                id: 1
              }
            }
          },
          GiftProductPb: {
            fields: {
              productId: {
                type: "uint64",
                id: 1
              },
              productName: {
                type: "string",
                id: 2
              },
              cover: {
                type: "string",
                id: 3
              },
              vipPrice: {
                type: "string",
                id: 4
              },
              sales: {
                type: "uint32",
                id: 5
              },
              backCate: {
                type: "string",
                id: 6
              },
              status: {
                type: "int32",
                id: 7
              },
              couponId: {
                rule: "repeated",
                type: "int32",
                id: 8
              },
              activityCouponId: {
                rule: "repeated",
                type: "int32",
                id: 9
              },
              activityTime: {
                type: "string",
                id: 10
              },
              addTime: {
                type: "string",
                id: 11
              },
              sort: {
                type: "int32",
                id: 12
              },
              saleCountry: {
                rule: "repeated",
                type: "ProductSaleCountry",
                id: 13
              }
            }
          },
          CouponPackagePb: {
            fields: {
              couponPackageId: {
                type: "int64",
                id: 1
              },
              nameEn: {
                type: "string",
                id: 2
              },
              nameCn: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              coupon: {
                rule: "repeated",
                type: "CouponInfo",
                id: 5
              },
              addTime: {
                type: "string",
                id: 6
              },
              startTime: {
                type: "string",
                id: 7
              },
              endTime: {
                type: "string",
                id: 8
              }
            },
            nested: {
              CouponInfo: {
                fields: {
                  couponId: {
                    type: "int64",
                    id: 1
                  },
                  amount: {
                    type: "int32",
                    id: 2
                  }
                }
              }
            }
          },
          GiftNamePb: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              value: {
                type: "string",
                id: 2
              }
            }
          },
          GiftCommissionConfigPB: {
            fields: {
              memberLevel: {
                type: "int32",
                id: 1
              },
              firstReward: {
                type: "int32",
                id: 2
              },
              secondReward: {
                type: "int32",
                id: 3
              },
              boleReward: {
                type: "int32",
                id: 4
              }
            }
          },
          GetGiftDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              nameInfo: {
                rule: "repeated",
                type: "GiftNamePb",
                id: 3
              },
              commissionConfig: {
                rule: "repeated",
                type: "GiftCommissionConfigPB",
                id: 4
              },
              giftProduct: {
                rule: "repeated",
                type: "GiftProductPb",
                id: 5
              },
              couponPackage: {
                rule: "repeated",
                type: "CouponPackagePb",
                id: 6
              },
              activeCouponPackage: {
                rule: "repeated",
                type: "CouponPackagePb",
                id: 7
              }
            }
          },
          UpdateGiftInfoReq: {
            fields: {
              giftId: {
                type: "int32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              nameInfo: {
                rule: "repeated",
                type: "GiftNamePb",
                id: 3
              },
              commissionConfig: {
                rule: "repeated",
                type: "GiftCommissionConfigPB",
                id: 4
              },
              updateProduct: {
                rule: "repeated",
                type: "ProductInfo",
                id: 5
              },
              deleteProduct: {
                rule: "repeated",
                type: "ProductInfo",
                id: 6
              },
              updateCouponPackage: {
                rule: "repeated",
                type: "CouponPackageInfo",
                id: 7
              },
              deleteCouponPackage: {
                rule: "repeated",
                type: "CouponPackageInfo",
                id: 8
              }
            },
            nested: {
              ProductInfo: {
                fields: {
                  productId: {
                    type: "uint64",
                    id: 1
                  },
                  sort: {
                    type: "int32",
                    id: 2
                  }
                }
              },
              CouponPackageInfo: {
                fields: {
                  couponPackageId: {
                    type: "int64",
                    id: 1
                  },
                  startTime: {
                    type: "string",
                    id: 2
                  },
                  endTime: {
                    type: "string",
                    id: 3
                  }
                }
              }
            }
          },
          QueryGiftProductReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productId: {
                type: "uint64",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              }
            }
          },
          QueryGiftProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              giftProduct: {
                rule: "repeated",
                type: "GiftProductPb",
                id: 2
              }
            }
          },
          QueryCouponListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              couponPackageId: {
                type: "int64",
                id: 2
              },
              couponPackageName: {
                type: "string",
                id: 3
              },
              isActive: {
                type: "bool",
                id: 4
              }
            }
          },
          QueryCouponListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              couponPackage: {
                rule: "repeated",
                type: "CouponPackagePb",
                id: 2
              }
            }
          },
          UpdateGiftInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteGiftReq: {
            fields: {
              giftId: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          DeleteGiftResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateGiftSortReq: {
            fields: {
              giftId: {
                type: "int32",
                id: 1
              },
              sort: {
                type: "int32",
                id: 2
              }
            }
          },
          UpdateGiftSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          LiveProductListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              liveUrl: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              }
            }
          },
          LiveProductPb: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              productName: {
                type: "string",
                id: 3
              },
              productPic: {
                type: "string",
                id: 4
              },
              liveUrl: {
                type: "string",
                id: 5
              },
              countryCode: {
                type: "string",
                id: 6
              },
              createTime: {
                type: "string",
                id: 7
              },
              updateTime: {
                type: "string",
                id: 8
              },
              startTime: {
                type: "string",
                id: 9
              },
              adviceTime: {
                type: "string",
                id: 10
              }
            }
          },
          LiveProductListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              liveProductPbs: {
                rule: "repeated",
                type: "LiveProductPb",
                id: 3
              }
            }
          },
          DeleteLiveProductReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          DeleteLiveProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateOrInsertLiveProductReq: {
            fields: {
              liveProductPb: {
                type: "LiveProductPb",
                id: 1
              }
            }
          },
          UpdateOrInsertLiveProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListProductSelectReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              source: {
                type: "int32",
                id: 2
              },
              onShelfStartTime: {
                type: "string",
                id: 4
              },
              onShelfEndTime: {
                type: "string",
                id: 5
              },
              monthSaleMin: {
                type: "string",
                id: 6
              },
              monthSaleMax: {
                type: "string",
                id: 7
              },
              priceMin: {
                type: "string",
                id: 8
              },
              priceMax: {
                type: "string",
                id: 9
              },
              productNameKeyword: {
                type: "string",
                id: 10
              },
              status: {
                type: "int32",
                id: 11
              },
              countryCode: {
                type: "string",
                id: 12
              },
              firstCateId: {
                type: "string",
                id: 13
              },
              secondCateId: {
                type: "string",
                id: 14
              },
              thirdCateId: {
                type: "string",
                id: 3
              }
            }
          },
          CategoryUnit: {
            fields: {
              cateId_1: {
                type: "uint32",
                id: 1
              },
              cateName_1: {
                type: "string",
                id: 2
              },
              cateId_2: {
                type: "uint32",
                id: 3
              },
              cateName_2: {
                type: "string",
                id: 4
              },
              cateId_3: {
                type: "uint32",
                id: 5
              },
              cateName_3: {
                type: "string",
                id: 6
              }
            }
          },
          ProductSelectPb: {
            fields: {
              source: {
                type: "int32",
                id: 1
              },
              productName: {
                type: "string",
                id: 2
              },
              productUrl: {
                type: "string",
                id: 3
              },
              imageUrl: {
                type: "string",
                id: 4
              },
              categoryUnit: {
                type: "CategoryUnit",
                id: 5
              },
              price: {
                type: "string",
                id: 6
              },
              monthSale: {
                type: "string",
                id: 7
              },
              monthSaleRate: {
                type: "string",
                id: 8
              },
              daySale: {
                type: "string",
                id: 9
              },
              monthPraiseNum: {
                type: "string",
                id: 10
              },
              status: {
                type: "int32",
                id: 11
              },
              alibabaSupplierName: {
                type: "string",
                id: 12
              },
              onShelfTime: {
                type: "string",
                id: 13
              },
              id: {
                type: "int32",
                id: 14
              },
              failReason: {
                type: "string",
                id: 15
              },
              catePath: {
                type: "string",
                id: 16
              },
              currency: {
                type: "string",
                id: 17
              },
              alibabaId: {
                type: "string",
                id: 18
              },
              fingoProductId: {
                type: "string",
                id: 19
              },
              rank: {
                type: "int32",
                id: 20
              }
            }
          },
          ListProductSelectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productSelect: {
                rule: "repeated",
                type: "ProductSelectPb",
                id: 2
              },
              updateTime: {
                type: "string",
                id: 3
              },
              total: {
                type: "int32",
                id: 4
              },
              message: {
                type: "string",
                id: 5
              }
            }
          },
          ListProductSelectExportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          SearchSupplierByImageReq: {
            fields: {
              imageUrl: {
                type: "string",
                id: 1
              }
            }
          },
          AlibabaProductSimpleInfo: {
            fields: {
              supplierName: {
                type: "string",
                id: 1
              },
              imageUrl: {
                type: "string",
                id: 2
              },
              rePurchaseRate: {
                type: "string",
                id: 3
              },
              goodsDescription: {
                type: "string",
                id: 4
              },
              response: {
                type: "string",
                id: 5
              },
              deliverGoods: {
                type: "string",
                id: 6
              },
              offerId: {
                type: "string",
                id: 7
              },
              price: {
                type: "string",
                id: 8
              },
              supplierCreditUrl: {
                type: "string",
                id: 9
              }
            }
          },
          SearchSupplierByImageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              alibabaProductSimpleInfo: {
                rule: "repeated",
                type: "AlibabaProductSimpleInfo",
                id: 2
              },
              message: {
                type: "string",
                id: 3
              }
            }
          },
          ConfirmProductReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              offerId: {
                type: "string",
                id: 2
              },
              supplierName: {
                type: "string",
                id: 3
              },
              supplierCreditUrl: {
                type: "string",
                id: 4
              },
              cateId: {
                type: "string",
                id: 5
              }
            }
          },
          ConfirmProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteProductReq: {
            fields: {
              deleteId: {
                type: "int32",
                id: 1
              }
            }
          },
          DeleteProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          GiftService: {
            methods: {
              GetGiftList: {
                requestType: "GetGiftListReq",
                responseType: "GetGiftListResp"
              },
              GetGiftDetail: {
                requestType: "GetGiftDetailReq",
                responseType: "GetGiftDetailResp"
              },
              UpdateGiftInfo: {
                requestType: "UpdateGiftInfoReq",
                responseType: "UpdateGiftInfoResp"
              },
              QueryGiftProduct: {
                requestType: "QueryGiftProductReq",
                responseType: "QueryGiftProductResp"
              },
              QueryCouponList: {
                requestType: "QueryCouponListReq",
                responseType: "QueryCouponListResp"
              },
              DeleteGift: {
                requestType: "DeleteGiftReq",
                responseType: "DeleteGiftResp"
              },
              UpdateGiftSort: {
                requestType: "UpdateGiftSortReq",
                responseType: "UpdateGiftSortResp"
              }
            }
          },
          LiveProductService: {
            methods: {
              LiveProductList: {
                requestType: "LiveProductListReq",
                responseType: "LiveProductListResp"
              },
              DeleteLiveProduct: {
                requestType: "DeleteLiveProductReq",
                responseType: "DeleteLiveProductResp"
              },
              UpdateOrInsertLiveProduct: {
                requestType: "UpdateOrInsertLiveProductReq",
                responseType: "UpdateOrInsertLiveProductResp"
              }
            }
          },
          ProductSelectService: {
            methods: {
              ListProductSelectPage: {
                requestType: "ListProductSelectReq",
                responseType: "ListProductSelectResp"
              },
              ListProductSelectExport: {
                requestType: "ListProductSelectReq",
                responseType: "ListProductSelectExportResp"
              },
              SearchSupplierByImage: {
                requestType: "SearchSupplierByImageReq",
                responseType: "SearchSupplierByImageResp"
              },
              ConfirmProduct: {
                requestType: "ConfirmProductReq",
                responseType: "ConfirmProductResp"
              },
              DeleteProduct: {
                requestType: "DeleteProductReq",
                responseType: "DeleteProductResp"
              }
            }
          },
          CutInfo: {
            fields: {
              top: {
                type: "int32",
                id: 1
              },
              left: {
                type: "int32",
                id: 2
              },
              cutWidth: {
                type: "int32",
                id: 3
              },
              cutHeight: {
                type: "int32",
                id: 4
              }
            }
          },
          DeleteTermReq: {
            fields: {
              filePath: {
                type: "string",
                id: 1
              },
              width: {
                type: "int32",
                id: 2
              },
              height: {
                type: "int32",
                id: 3
              },
              cutInfo: {
                rule: "repeated",
                type: "CutInfo",
                id: 4
              },
              originWidth: {
                type: "int32",
                id: 5
              },
              originHeight: {
                type: "int32",
                id: 6
              }
            }
          },
          DeleteTermResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              encode: {
                type: "string",
                id: 2
              }
            }
          },
          ProductHandleService: {
            methods: {
              DeleteTerm: {
                requestType: "DeleteTermReq",
                responseType: "DeleteTermResp"
              }
            }
          }
        }
      },
      promotion: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.promotion",
          java_outer_classname: "Promotion"
        },
        nested: {
          PromotionProductInfo: {
            fields: {
              promotionProductType: {
                type: "string",
                id: 1
              },
              bindsId: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          PromotionRuleInfo: {
            fields: {
              level: {
                type: "int32",
                id: 1
              },
              conditionsReached: {
                type: "string",
                id: 2
              },
              favouredPolicy: {
                type: "string",
                id: 3
              },
              stateCode: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              freeShippingType: {
                type: "string",
                id: 5
              }
            }
          },
          PromotionInfo: {
            fields: {
              promotionId: {
                type: "string",
                id: 1
              },
              promotionName: {
                type: "string",
                id: 2
              },
              promotionLabel: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              preheat: {
                type: "string",
                id: 7
              },
              preheatTime: {
                type: "int64",
                id: 8
              },
              promotionProductInfo: {
                rule: "repeated",
                type: "PromotionProductInfo",
                id: 9
              },
              promotionType: {
                type: "string",
                id: 10
              },
              promotionRuleInfo: {
                rule: "repeated",
                type: "PromotionRuleInfo",
                id: 11
              },
              discountMutexType: {
                rule: "repeated",
                type: "common.enum.PromotionEnum.DiscountMutexType",
                id: 12
              },
              promotionRuleDesc: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 13
              }
            }
          },
          PromotionInsertReq: {
            fields: {
              promotionInfo: {
                type: "PromotionInfo",
                id: 1
              }
            }
          },
          PromotionInsertResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PromotionUpdateReq: {
            fields: {
              promotionInfo: {
                type: "PromotionInfo",
                id: 1
              }
            }
          },
          PromotionUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PromotionListInfo: {
            fields: {
              promotionId: {
                type: "string",
                id: 1
              },
              promotionName: {
                type: "string",
                id: 2
              },
              promotionLabel: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              promotionType: {
                type: "string",
                id: 7
              },
              operationName: {
                type: "string",
                id: 8
              },
              updateTime: {
                type: "int64",
                id: 9
              }
            }
          },
          PromotionListReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              promotionId: {
                type: "string",
                id: 2
              },
              promotionName: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              promotionType: {
                type: "string",
                id: 7
              },
              promotionLabel: {
                type: "string",
                id: 8
              },
              page: {
                type: "common.base.Pagination",
                id: 9
              },
              promotionStatusType: {
                type: "string",
                id: 10
              }
            }
          },
          PromotionListResp: {
            fields: {
              promotionListInfo: {
                rule: "repeated",
                type: "PromotionListInfo",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          GetPromotionInfoReq: {
            fields: {
              promotionId: {
                type: "string",
                id: 1
              }
            }
          },
          GetPromotionInfoResp: {
            fields: {
              promotionInfo: {
                type: "PromotionInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          PromotionService: {
            methods: {
              InsertPromotion: {
                requestType: "PromotionInsertReq",
                responseType: "PromotionInsertResp"
              },
              UpdatePromotion: {
                requestType: "PromotionUpdateReq",
                responseType: "PromotionUpdateResp"
              },
              ListPromotion: {
                requestType: "PromotionListReq",
                responseType: "PromotionListResp"
              },
              GetPromotionById: {
                requestType: "GetPromotionInfoReq",
                responseType: "GetPromotionInfoResp"
              }
            }
          },
          AddHotWordReq: {
            fields: {
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              hotWord: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              icon: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              urlType: {
                type: "int32",
                id: 4
              },
              url: {
                type: "string",
                id: 5
              },
              startTime: {
                type: "int64",
                id: 6
              },
              endTime: {
                type: "int64",
                id: 7
              }
            }
          },
          AddHotWordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateHotWordReq: {
            fields: {
              hotWordId: {
                type: "string",
                id: 1
              },
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              hotWord: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              icon: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 4
              },
              urlType: {
                type: "int32",
                id: 5
              },
              url: {
                type: "string",
                id: 6
              },
              startTime: {
                type: "int64",
                id: 7
              },
              endTime: {
                type: "int64",
                id: 8
              }
            }
          },
          UpdateHotWordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteHotWordReq: {
            fields: {
              hotWordId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteHotWordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetHotWordListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              keyword: {
                type: "string",
                id: 2
              }
            }
          },
          GetHotWordListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              hotWord: {
                rule: "repeated",
                type: "HotWordUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            },
            nested: {
              HotWordUnit: {
                fields: {
                  hotWordId: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    rule: "repeated",
                    type: "string",
                    id: 2
                  },
                  hotWord: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 3
                  },
                  sort: {
                    type: "uint32",
                    id: 4
                  },
                  icon: {
                    rule: "repeated",
                    type: "common.base.NameAndCode",
                    id: 5
                  },
                  urlType: {
                    type: "int32",
                    id: 6
                  },
                  url: {
                    type: "string",
                    id: 7
                  },
                  startTime: {
                    type: "int64",
                    id: 8
                  },
                  endTime: {
                    type: "int64",
                    id: 9
                  }
                }
              }
            }
          },
          SetHotWordSortReq: {
            fields: {
              hotWordId: {
                type: "string",
                id: 1
              },
              sort: {
                type: "uint32",
                id: 2
              }
            }
          },
          SetHotWordSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          HotWordService: {
            methods: {
              AddHotWord: {
                requestType: "AddHotWordReq",
                responseType: "AddHotWordResp"
              },
              UpdateHotWord: {
                requestType: "UpdateHotWordReq",
                responseType: "UpdateHotWordResp"
              },
              DeleteHotWord: {
                requestType: "DeleteHotWordReq",
                responseType: "DeleteHotWordResp"
              },
              SetHotWordSort: {
                requestType: "SetHotWordSortReq",
                responseType: "SetHotWordSortResp"
              },
              GetHotWordList: {
                requestType: "GetHotWordListReq",
                responseType: "GetHotWordListResp"
              }
            }
          },
          AddProductLiveConfigReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              liveLink: {
                type: "string",
                id: 3
              },
              liveMasterCommission: {
                type: "string",
                id: 4
              },
              liveSuperiorCommission: {
                type: "string",
                id: 5
              },
              startTime: {
                type: "int64",
                id: 6
              },
              endTime: {
                type: "int64",
                id: 7
              }
            }
          },
          AddProductLiveConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductLiveConfigUnit: {
            fields: {
              productLiveId: {
                type: "string",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              cover: {
                type: "string",
                id: 3
              },
              title: {
                type: "string",
                id: 4
              },
              countryCode: {
                type: "string",
                id: 5
              },
              liveLink: {
                type: "string",
                id: 6
              },
              liveMasterCommission: {
                type: "string",
                id: 7
              },
              liveSuperiorCommission: {
                type: "string",
                id: 8
              },
              startTime: {
                type: "int64",
                id: 9
              },
              endTime: {
                type: "int64",
                id: 10
              },
              operationName: {
                type: "string",
                id: 11
              },
              operatorId: {
                type: "string",
                id: 12
              }
            }
          },
          ListProductLiveConfigReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productIdKey: {
                type: "string",
                id: 2
              },
              standardAttrIdKey: {
                type: "string",
                id: 3
              },
              titleKey: {
                type: "string",
                id: 4
              },
              countryCode: {
                type: "string",
                id: 5
              }
            }
          },
          ListProductLiveConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              productLiveConfig: {
                rule: "repeated",
                type: "ProductLiveConfigUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          DeleteProductLiveConfigReq: {
            fields: {
              productLiveId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteProductLiveConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateProductLiveConfigReq: {
            fields: {
              productLiveId: {
                type: "string",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              liveLink: {
                type: "string",
                id: 4
              },
              liveMasterCommission: {
                type: "string",
                id: 5
              },
              liveSuperiorCommission: {
                type: "string",
                id: 6
              },
              startTime: {
                type: "int64",
                id: 7
              },
              endTime: {
                type: "int64",
                id: 8
              }
            }
          },
          UpdateProductLiveConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ProductLiveService: {
            methods: {
              AddProductLiveConfig: {
                requestType: "AddProductLiveConfigReq",
                responseType: "AddProductLiveConfigResp"
              },
              ListProductLiveConfig: {
                requestType: "ListProductLiveConfigReq",
                responseType: "ListProductLiveConfigResp"
              },
              DeleteProductLiveConfig: {
                requestType: "DeleteProductLiveConfigReq",
                responseType: "DeleteProductLiveConfigResp"
              },
              UpdateProductLiveConfig: {
                requestType: "UpdateProductLiveConfigReq",
                responseType: "UpdateProductLiveConfigResp"
              }
            }
          },
          AddPurchaseLimitConfigReq: {
            fields: {
              limitName: {
                type: "string",
                id: 1
              },
              groupType: {
                type: "GroupType",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              startTime: {
                type: "int64",
                id: 4
              },
              endTime: {
                type: "int64",
                id: 5
              },
              purchaseLimitRuleType: {
                type: "PurchaseLimitRuleType",
                id: 8
              },
              limitQuantity: {
                type: "uint32",
                id: 6
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 7
              },
              cateId: {
                rule: "repeated",
                type: "string",
                id: 9
              }
            }
          },
          AddPurchaseLimitConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GroupType: {
            values: {
              TYPE_NULL: 0,
              ALL: 1
            }
          },
          PurchaseLimitRuleType: {
            values: {
              PURCHASE_LIMIT_RULE_TYPE_NULL: 0,
              PURCHASE_LIMIT_RULE_MAX_BUY: 1,
              PURCHASE_LIMIT_RULE_MIN_BUY: 2,
              PURCHASE_LIMIT_RULE_ONE_ORDER_MAX_BUY: 3
            }
          },
          PurchaseLimitConfigUnit: {
            fields: {
              limitId: {
                type: "string",
                id: 1
              },
              limitName: {
                type: "string",
                id: 2
              },
              groupType: {
                type: "GroupType",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              limitQuantity: {
                type: "uint32",
                id: 7
              },
              purchaseLimitRuleType: {
                type: "PurchaseLimitRuleType",
                id: 12
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 8
              },
              categoryUnit: {
                rule: "repeated",
                type: "common.base.IdAndName",
                id: 13
              },
              updateTime: {
                type: "int64",
                id: 9
              },
              operationName: {
                type: "string",
                id: 10
              },
              activeType: {
                type: "ActiveType",
                id: 11
              }
            },
            nested: {
              ActiveType: {
                values: {
                  ACTIVE_NULL: 0,
                  NOT_STARTED: 1,
                  IN_PROGRESS: 2,
                  FINISHED: 3
                }
              }
            }
          },
          ListPurchaseLimitConfigReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              type: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              }
            }
          },
          ListPurchaseLimitConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              purchaseLimitConfig: {
                rule: "repeated",
                type: "PurchaseLimitConfigUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          UpdatePurchaseLimitConfigReq: {
            fields: {
              limitId: {
                type: "string",
                id: 1
              },
              limitName: {
                type: "string",
                id: 2
              },
              groupType: {
                type: "GroupType",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              startTime: {
                type: "int64",
                id: 5
              },
              endTime: {
                type: "int64",
                id: 6
              },
              purchaseLimitRuleType: {
                type: "PurchaseLimitRuleType",
                id: 9
              },
              limitQuantity: {
                type: "uint32",
                id: 7
              },
              productId: {
                rule: "repeated",
                type: "string",
                id: 8
              },
              cateId: {
                rule: "repeated",
                type: "string",
                id: 10
              }
            }
          },
          UpdatePurchaseLimitConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeletePurchaseLimitConfigReq: {
            fields: {
              limitId: {
                type: "string",
                id: 1
              }
            }
          },
          DeletePurchaseLimitConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PurchaseLimitService: {
            methods: {
              AddPurchaseLimitConfig: {
                requestType: "AddPurchaseLimitConfigReq",
                responseType: "AddPurchaseLimitConfigResp"
              },
              ListPurchaseLimitConfig: {
                requestType: "ListPurchaseLimitConfigReq",
                responseType: "ListPurchaseLimitConfigResp"
              },
              UpdatePurchaseLimitConfig: {
                requestType: "UpdatePurchaseLimitConfigReq",
                responseType: "UpdatePurchaseLimitConfigResp"
              },
              DeletePurchaseLimitConfig: {
                requestType: "DeletePurchaseLimitConfigReq",
                responseType: "DeletePurchaseLimitConfigResp"
              }
            }
          },
          InsertCopyWriteReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              serviceDesc: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              color: {
                type: "string",
                id: 3
              }
            }
          },
          InsertCopyWriteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteCopyWriteReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "uint32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          DeleteCopyWriteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateCopyWriteReq: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              serviceDesc: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              color: {
                type: "string",
                id: 4
              }
            }
          },
          UpdateCopyWriteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListCopyWriteReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          CopyWriteInfo: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              serviceDesc: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              color: {
                type: "string",
                id: 4
              },
              sort: {
                type: "uint32",
                id: 5
              },
              createTime: {
                type: "int64",
                id: 6
              },
              updateTime: {
                type: "int64",
                id: 7
              }
            }
          },
          ListCopyWriteResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              copyWriteInfo: {
                rule: "repeated",
                type: "CopyWriteInfo",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          ChangeCopyWriteSortReq: {
            fields: {
              id: {
                type: "uint32",
                id: 1
              },
              sort: {
                type: "uint32",
                id: 2
              }
            }
          },
          ChangeCopyWriteSortResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ServiceCopyWriteService: {
            methods: {
              InsertCopyWrite: {
                requestType: "InsertCopyWriteReq",
                responseType: "InsertCopyWriteResp"
              },
              DeleteCopyWrite: {
                requestType: "DeleteCopyWriteReq",
                responseType: "DeleteCopyWriteResp"
              },
              UpdateCopyWrite: {
                requestType: "UpdateCopyWriteReq",
                responseType: "UpdateCopyWriteResp"
              },
              ListCopyWrite: {
                requestType: "ListCopyWriteReq",
                responseType: "ListCopyWriteResp"
              },
              ChangeCopyWriteSort: {
                requestType: "ChangeCopyWriteSortReq",
                responseType: "ChangeCopyWriteSortResp"
              }
            }
          },
          BackGroundInfo: {
            fields: {
              countryCode: {
                type: "string",
                id: 2
              },
              bindId: {
                type: "string",
                id: 3
              },
              type: {
                type: "common.enum.PromotionEnum.PromotionFunctionType",
                id: 4
              },
              updateTime: {
                type: "int64",
                id: 5
              },
              startTime: {
                type: "int64",
                id: 6
              },
              endTime: {
                type: "int64",
                id: 7
              },
              backgroundCover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 8
              },
              backgroundColor: {
                type: "string",
                id: 9
              }
            }
          },
          GetBackGroundInfoReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 2
              },
              bindId: {
                type: "string",
                id: 3
              },
              type: {
                type: "common.enum.PromotionEnum.PromotionFunctionType",
                id: 4
              }
            }
          },
          GetBackGroundInfoResp: {
            fields: {
              backGroundInfo: {
                type: "BackGroundInfo",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          UpdateBackGroundInfoReq: {
            fields: {
              backGroundInfo: {
                type: "BackGroundInfo",
                id: 1
              }
            }
          },
          UpdateBackGroundInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          BackGroundInfoBossService: {
            methods: {
              GetBackGroundInfo: {
                requestType: "GetBackGroundInfoReq",
                responseType: "GetBackGroundInfoResp"
              },
              UpdateBackGroundInfo: {
                requestType: "UpdateBackGroundInfoReq",
                responseType: "UpdateBackGroundInfoResp"
              }
            }
          },
          FunctionAreaInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              cover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              urlType: {
                type: "common.enum.PromotionEnum.PromotionAppUrlType",
                id: 5
              },
              url: {
                type: "string",
                id: 6
              },
              updateTime: {
                type: "int64",
                id: 7
              },
              startTime: {
                type: "int64",
                id: 8
              },
              endTime: {
                type: "int64",
                id: 9
              },
              sort: {
                type: "int32",
                id: 10
              },
              countryCode: {
                type: "string",
                id: 11
              },
              canDelete: {
                type: "common.enum.PromotionEnum.PromotionFunctionCanDeleteType",
                id: 12
              }
            }
          },
          InsertFunctionAreaReq: {
            fields: {
              functionAreaInfo: {
                type: "FunctionAreaInfo",
                id: 1
              }
            }
          },
          InsertFunctionAreaResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateFunctionAreaReq: {
            fields: {
              functionAreaInfo: {
                type: "FunctionAreaInfo",
                id: 1
              }
            }
          },
          UpdateFunctionAreaResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteFunctionAreaReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          DeleteFunctionAreaResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListFunctionAreaReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          ListFunctionAreaResp: {
            fields: {
              functionAreaInfo: {
                rule: "repeated",
                type: "FunctionAreaInfo",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          SortFunctionAreaReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              sort: {
                type: "int32",
                id: 2
              }
            }
          },
          SortFunctionAreaResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          FunctionAreaBossService: {
            methods: {
              InsertFunctionArea: {
                requestType: "InsertFunctionAreaReq",
                responseType: "InsertFunctionAreaResp"
              },
              UpdateFunctionArea: {
                requestType: "UpdateFunctionAreaReq",
                responseType: "UpdateFunctionAreaResp"
              },
              DeleteFunctionArea: {
                requestType: "DeleteFunctionAreaReq",
                responseType: "DeleteFunctionAreaResp"
              },
              ListFunctionArea: {
                requestType: "ListFunctionAreaReq",
                responseType: "ListFunctionAreaResp"
              },
              SortFunctionArea: {
                requestType: "SortFunctionAreaReq",
                responseType: "SortFunctionAreaResp"
              }
            }
          },
          MarketingGrid: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              title: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 2
              },
              subTitle: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 3
              },
              cover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 14
              },
              marketingGridType: {
                type: "common.enum.PromotionEnum.PromotionMarketingGridType",
                id: 15
              },
              urlType: {
                type: "common.enum.PromotionEnum.PromotionAppUrlType",
                id: 5
              },
              url: {
                type: "string",
                id: 6
              },
              spuId: {
                rule: "repeated",
                type: "string",
                id: 7
              },
              updateTime: {
                type: "int64",
                id: 8
              },
              startTime: {
                type: "int64",
                id: 9
              },
              endTime: {
                type: "int64",
                id: 10
              },
              sort: {
                type: "int32",
                id: 11
              },
              countryCode: {
                type: "string",
                id: 12
              },
              canDelete: {
                type: "common.enum.PromotionEnum.PromotionFunctionCanDeleteType",
                id: 13
              },
              compatibilityUrl: {
                type: "string",
                id: 16
              }
            }
          },
          InsertMarketingGridReq: {
            fields: {
              marketingGrid: {
                type: "MarketingGrid",
                id: 1
              }
            }
          },
          InsertMarketingGridResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateMarketingGridReq: {
            fields: {
              marketingGrid: {
                type: "MarketingGrid",
                id: 1
              }
            }
          },
          UpdateMarketingGridResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteMarketingGridReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          DeleteMarketingGridResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListMarketingGridReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          ListMarketingGridResp: {
            fields: {
              marketingGrid: {
                rule: "repeated",
                type: "MarketingGrid",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          SortMarketingGridReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              sort: {
                type: "int32",
                id: 2
              }
            }
          },
          SortMarketingGridResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          MarketingGridBossService: {
            methods: {
              InsertMarketingGrid: {
                requestType: "InsertMarketingGridReq",
                responseType: "InsertMarketingGridResp"
              },
              UpdateMarketingGrid: {
                requestType: "UpdateMarketingGridReq",
                responseType: "UpdateMarketingGridResp"
              },
              DeleteMarketingGrid: {
                requestType: "DeleteMarketingGridReq",
                responseType: "DeleteMarketingGridResp"
              },
              ListMarketingGrid: {
                requestType: "ListMarketingGridReq",
                responseType: "ListMarketingGridResp"
              },
              SortMarketingGrid: {
                requestType: "SortMarketingGridReq",
                responseType: "SortMarketingGridResp"
              }
            }
          },
          CategoryBanner: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              title: {
                type: "string",
                id: 6
              },
              countryCode: {
                type: "string",
                id: 2
              },
              cateId: {
                type: "string",
                id: 3
              },
              urlType: {
                type: "int32",
                id: 4
              },
              url: {
                type: "string",
                id: 5
              },
              cover: {
                rule: "repeated",
                type: "common.base.NameAndCode",
                id: 14
              },
              createTime: {
                type: "int64",
                id: 8
              },
              startTime: {
                type: "int64",
                id: 9
              },
              endTime: {
                type: "int64",
                id: 10
              },
              clickNum: {
                type: "int32",
                id: 11
              },
              backgroundColor: {
                type: "string",
                id: 12
              }
            }
          },
          InsertCategoryBannerReq: {
            fields: {
              categoryBanner: {
                type: "CategoryBanner",
                id: 1
              }
            }
          },
          InsertCategoryBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              id: {
                type: "int32",
                id: 2
              }
            }
          },
          UpdateCategoryBannerReq: {
            fields: {
              categoryBanner: {
                type: "CategoryBanner",
                id: 1
              }
            }
          },
          UpdateCategoryBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteCategoryBannerReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          DeleteCategoryBannerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListCategoryBannerReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          ListCategoryBannerResp: {
            fields: {
              categoryBanner: {
                rule: "repeated",
                type: "CategoryBanner",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          CategoryBannerBossService: {
            methods: {
              InsertCategoryBanner: {
                requestType: "InsertCategoryBannerReq",
                responseType: "InsertCategoryBannerResp"
              },
              UpdateCategoryBanner: {
                requestType: "UpdateCategoryBannerReq",
                responseType: "UpdateCategoryBannerResp"
              },
              DeleteCategoryBanner: {
                requestType: "DeleteCategoryBannerReq",
                responseType: "DeleteCategoryBannerResp"
              },
              ListCategoryBanner: {
                requestType: "ListCategoryBannerReq",
                responseType: "ListCategoryBannerResp"
              }
            }
          },
          AppIconInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              startTime: {
                type: "int64",
                id: 4
              },
              endTime: {
                type: "int64",
                id: 5
              },
              appIconValue: {
                rule: "repeated",
                type: "AppIconValue",
                id: 6
              },
              createTime: {
                type: "int64",
                id: 7
              },
              updateTime: {
                type: "int64",
                id: 8
              },
              operationName: {
                type: "string",
                id: 9
              }
            },
            nested: {
              AppIconValue: {
                fields: {
                  appIconType: {
                    type: "common.enum.PromotionEnum.AppIconType",
                    id: 1
                  },
                  unselected: {
                    type: "string",
                    id: 2
                  },
                  selected: {
                    type: "string",
                    id: 3
                  }
                }
              }
            }
          },
          InsertAppIconInfoReq: {
            fields: {
              appIconInfo: {
                type: "AppIconInfo",
                id: 1
              }
            }
          },
          InsertAppIconInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdateAppIconInfoReq: {
            fields: {
              appIconInfo: {
                type: "AppIconInfo",
                id: 1
              }
            }
          },
          UpdateAppIconInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteAppIconInfoReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "int32",
                id: 1
              }
            }
          },
          DeleteAppIconInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListAppIconInfoReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              name: {
                type: "string",
                id: 3
              },
              status: {
                type: "int32",
                id: 4
              }
            }
          },
          ListAppIconInfoResp: {
            fields: {
              appIconInfo: {
                rule: "repeated",
                type: "AppIconInfo",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            }
          },
          BatchCopyAppIconInfoReq: {
            fields: {
              id: {
                rule: "repeated",
                type: "int32",
                id: 1
              },
              countryCode: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          BatchCopyAppIconInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AppIconBossService: {
            methods: {
              InsertAppIcon: {
                requestType: "InsertAppIconInfoReq",
                responseType: "InsertAppIconInfoResp"
              },
              UpdateAppIcon: {
                requestType: "UpdateAppIconInfoReq",
                responseType: "UpdateAppIconInfoResp"
              },
              DeleteAppIcon: {
                requestType: "DeleteAppIconInfoReq",
                responseType: "DeleteAppIconInfoResp"
              },
              ListAppIcon: {
                requestType: "ListAppIconInfoReq",
                responseType: "ListAppIconInfoResp"
              },
              BatchCopyAppIcon: {
                requestType: "BatchCopyAppIconInfoReq",
                responseType: "BatchCopyAppIconInfoResp"
              }
            }
          },
          HomePageBossService: {
            methods: {
              SaveHomePage: {
                requestType: "SaveHomePageReq",
                responseType: "SaveHomePageResp"
              },
              ListHomePage: {
                requestType: "ListHomePageReq",
                responseType: "ListHomePageResp"
              }
            }
          },
          HomePageSort: {
            fields: {
              type: {
                type: "int32",
                id: 1
              },
              sort: {
                type: "int32",
                id: 2
              }
            }
          },
          SaveHomePageReq: {
            fields: {
              homePageSort: {
                rule: "repeated",
                type: "HomePageSort",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              activeCrowdType: {
                type: "int32",
                id: 3
              }
            }
          },
          SaveHomePageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ListHomePageReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 2
              },
              activeCrowdType: {
                type: "int32",
                id: 3
              }
            }
          },
          ListHomePageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              homePageSort: {
                rule: "repeated",
                type: "HomePageSort",
                id: 2
              }
            }
          }
        }
      },
      pushtask: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss",
          java_outer_classname: "PushTask"
        },
        nested: {
          CancelTimingTaskReq: {
            fields: {
              pushTaskCode: {
                type: "string",
                id: 1
              }
            }
          },
          CancelTimingTaskResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          CreatePushTaskReq: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              pushChannel: {
                type: "PushChannelEnum",
                id: 2
              },
              pushType: {
                type: "string",
                id: 3
              },
              pushPic: {
                type: "string",
                id: 4
              },
              redirect: {
                type: "RedirectTypeEnum",
                id: 5
              },
              redirectParam: {
                type: "string",
                id: 6
              },
              pushLang: {
                rule: "repeated",
                type: "PushLang",
                id: 7
              }
            }
          },
          CreatePushTaskResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeletePushTaskReq: {
            fields: {
              pushTaskCode: {
                type: "string",
                id: 1
              }
            }
          },
          DeletePushTaskResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditPushTaskReq: {
            fields: {
              pushTaskCode: {
                type: "string",
                id: 1
              },
              pushChannel: {
                type: "PushChannelEnum",
                id: 2
              },
              pushType: {
                type: "string",
                id: 3
              },
              pushPic: {
                type: "string",
                id: 4
              },
              redirect: {
                type: "RedirectTypeEnum",
                id: 5
              },
              redirectParam: {
                type: "string",
                id: 6
              },
              pushLang: {
                rule: "repeated",
                type: "PushLang",
                id: 7
              }
            }
          },
          EditPushTaskResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditUserGroupReq: {
            fields: {
              pushTaskCode: {
                type: "string",
                id: 1
              },
              groupType: {
                type: "GroupTypeEnum",
                id: 2
              },
              userLevel: {
                rule: "repeated",
                type: "uint32",
                id: 3
              },
              userId: {
                rule: "repeated",
                type: "string",
                id: 4
              },
              userGroupId: {
                type: "string",
                id: 5
              }
            }
          },
          EditUserGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GroupTypeEnum: {
            values: {
              GROUP_TYPE_NULL: 0,
              GROUP_ALL: 1,
              USER_LEVEL: 2,
              USER_IDS: 3,
              USER_PROFILE_GROUP: 4
            }
          },
          PushChannelEnum: {
            values: {
              PUSH_CHANNEL_NULL: 0,
              CHANNEL_ALL: 1,
              INNER: 2,
              OUTER: 3
            }
          },
          PushLang: {
            fields: {
              language: {
                type: "string",
                id: 1
              },
              title: {
                type: "string",
                id: 2
              },
              content: {
                type: "string",
                id: 3
              }
            }
          },
          PushTaskItem: {
            fields: {
              pushTaskCode: {
                type: "string",
                id: 1
              },
              title: {
                type: "string",
                id: 2
              },
              content: {
                type: "string",
                id: 3
              },
              pushChannel: {
                type: "PushChannelEnum",
                id: 4
              },
              pushType: {
                type: "string",
                id: 5
              },
              creator: {
                type: "string",
                id: 6
              },
              sender: {
                type: "string",
                id: 7
              },
              successSentNum: {
                type: "string",
                id: 8
              },
              openRate: {
                type: "string",
                id: 9
              },
              createTime: {
                type: "string",
                id: 10
              },
              sentTime: {
                type: "string",
                id: 11
              },
              sendStatus: {
                type: "SendStatusEnum",
                id: 12
              },
              groupType: {
                type: "GroupTypeEnum",
                id: 13
              },
              userLevel: {
                rule: "repeated",
                type: "uint32",
                id: 14
              },
              userId: {
                rule: "repeated",
                type: "string",
                id: 15
              },
              itemLang: {
                rule: "repeated",
                type: "PushLang",
                id: 16
              },
              pushPic: {
                type: "string",
                id: 17
              },
              redirect: {
                type: "RedirectTypeEnum",
                id: 18
              },
              redirectParam: {
                type: "string",
                id: 19
              },
              userGroupId: {
                type: "string",
                id: 20
              }
            }
          },
          RedirectTypeEnum: {
            values: {
              REDIRECT_TYPE_NULL: 0,
              LINK: 1,
              INNER_APP: 2,
              NO_REDIRECT: 3
            }
          },
          SearchPushTaskOrRecordReq: {
            fields: {
              title: {
                type: "string",
                id: 1
              },
              content: {
                type: "string",
                id: 2
              },
              pushTaskCode: {
                type: "string",
                id: 3
              },
              pushChannel: {
                type: "PushChannelEnum",
                id: 4
              },
              pushType: {
                type: "string",
                id: 5
              },
              sendType: {
                type: "SendStatusEnum",
                id: 6
              },
              createTimeStart: {
                type: "string",
                id: 7
              },
              createTimeEnd: {
                type: "string",
                id: 8
              },
              sendTimeStart: {
                type: "string",
                id: 9
              },
              sendTimeEnd: {
                type: "string",
                id: 10
              },
              country: {
                type: "string",
                id: 11
              },
              type: {
                type: "TaskTypeEnum",
                id: 12
              },
              page: {
                type: "common.base.Pagination",
                id: 13
              },
              id: {
                rule: "repeated",
                type: "string",
                id: 14
              }
            }
          },
          TaskTypeEnum: {
            values: {
              TASK_TYPE_NULL: 0,
              TASK: 1,
              RECORD: 2
            }
          },
          SearchPushTaskOrRecordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "uint32",
                id: 2
              },
              item: {
                rule: "repeated",
                type: "PushTaskItem",
                id: 3
              }
            }
          },
          SendPushReq: {
            fields: {
              pushTaskCode: {
                type: "string",
                id: 1
              },
              sendType: {
                type: "SendTypeEnum",
                id: 2
              },
              sendTime: {
                type: "string",
                id: 3
              }
            }
          },
          SendPushResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SendStatusEnum: {
            values: {
              SEND_STATUS_NULL: 0,
              DONE: 1,
              SENDING: 2,
              SCHEDULE: 3
            }
          },
          SendTimingTaskNowReq: {
            fields: {
              pushTaskCode: {
                type: "string",
                id: 1
              }
            }
          },
          SendTimingTaskNowResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SendTypeEnum: {
            values: {
              SEND_TYPE_NULL: 0,
              IMMEDIATELY: 1,
              TIMING_TASK: 2
            }
          },
          PushTaskService: {
            methods: {
              CancelTimingTask: {
                requestType: "CancelTimingTaskReq",
                responseType: "CancelTimingTaskResp"
              },
              CreatePushTask: {
                requestType: "CreatePushTaskReq",
                responseType: "CreatePushTaskResp"
              },
              DeletePushTask: {
                requestType: "DeletePushTaskReq",
                responseType: "DeletePushTaskResp"
              },
              EditPushTask: {
                requestType: "EditPushTaskReq",
                responseType: "EditPushTaskResp"
              },
              EditUserGroup: {
                requestType: "EditUserGroupReq",
                responseType: "EditUserGroupResp"
              },
              SendPush: {
                requestType: "SendPushReq",
                responseType: "SendPushResp"
              },
              SendTimingTaskNow: {
                requestType: "SendTimingTaskNowReq",
                responseType: "SendTimingTaskNowResp"
              },
              SearchPushTaskOrRecord: {
                requestType: "SearchPushTaskOrRecordReq",
                responseType: "SearchPushTaskOrRecordResp"
              }
            }
          }
        }
      },
      sales: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.sales",
          java_outer_classname: "Sales"
        },
        nested: {
          SetProductSalesConfigReq: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              multiple: {
                type: "uint32",
                id: 2
              },
              growthStatus: {
                type: "GrowthStatus",
                id: 3
              },
              grandTotal: {
                type: "uint32",
                id: 4
              }
            }
          },
          SetProductSalesConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GrowthStatus: {
            values: {
              GROWTH_NULL: 0,
              START: 1,
              STOP: 2
            }
          },
          ProductSalesUnit: {
            fields: {
              productId: {
                type: "string",
                id: 1
              },
              cover: {
                type: "string",
                id: 2
              },
              title: {
                type: "string",
                id: 3
              },
              growthStatus: {
                type: "GrowthStatus",
                id: 4
              },
              multiple: {
                type: "uint32",
                id: 5
              },
              grandTotal: {
                type: "uint32",
                id: 6
              },
              realSales: {
                type: "uint32",
                id: 7
              },
              calcParam: {
                type: "string",
                id: 8
              },
              operationName: {
                type: "string",
                id: 9
              }
            }
          },
          GetProductSalesReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productId: {
                type: "string",
                id: 2
              },
              multiple: {
                type: "string",
                id: 3
              },
              cateId: {
                type: "string",
                id: 4
              },
              growthStatus: {
                type: "string",
                id: 5
              },
              multipleType: {
                type: "MultipleType",
                id: 6
              },
              attrId: {
                type: "string",
                id: 9
              },
              skuCode: {
                type: "string",
                id: 10
              },
              title: {
                type: "string",
                id: 11
              }
            },
            nested: {
              MultipleType: {
                values: {
                  MULTIPLE_NULL: 0,
                  EQUAL: 1,
                  GREATER_THAN: 2,
                  LESS_THAN: 3
                }
              }
            }
          },
          GetProductSalesResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              sales: {
                rule: "repeated",
                type: "ProductSalesUnit",
                id: 2
              },
              total: {
                type: "uint32",
                id: 3
              }
            }
          },
          SalesService: {
            methods: {
              SetProductSalesConfig: {
                requestType: "SetProductSalesConfigReq",
                responseType: "SetProductSalesConfigResp"
              },
              GetProductSales: {
                requestType: "GetProductSalesReq",
                responseType: "GetProductSalesResp"
              }
            }
          }
        }
      },
      staff: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.staff",
          java_outer_classname: "Staff"
        },
        nested: {
          BooleanResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              success: {
                type: "bool",
                id: 2
              }
            }
          },
          DeleteSysUserReq: {
            fields: {
              account: {
                type: "string",
                id: 1
              }
            }
          },
          SysUserAddOrUpdateReq: {
            fields: {
              account: {
                type: "string",
                id: 2
              },
              nickName: {
                type: "string",
                id: 4
              },
              groupId: {
                type: "int32",
                id: 5
              },
              mobile: {
                type: "string",
                id: 9
              },
              email: {
                type: "string",
                id: 10
              },
              gender: {
                type: "int32",
                id: 12
              },
              birthday: {
                type: "string",
                id: 13
              },
              wechatId: {
                type: "string",
                id: 14
              },
              wechatQr: {
                type: "string",
                id: 15
              },
              headImg: {
                type: "string",
                id: 16
              },
              countryCode: {
                type: "string",
                id: 17
              },
              realName: {
                type: "string",
                id: 18
              },
              dingUserId: {
                type: "string",
                id: 19
              },
              selfUpdate: {
                type: "bool",
                id: 20
              }
            }
          },
          ListSysUserByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              nickName: {
                type: "string",
                id: 2
              },
              groupId: {
                type: "int32",
                id: 3
              },
              groupIds: {
                rule: "repeated",
                type: "int32",
                id: 5
              }
            }
          },
          SysUserPb: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              account: {
                type: "string",
                id: 2
              },
              nickName: {
                type: "string",
                id: 3
              },
              groupId: {
                type: "int32",
                id: 4
              },
              createTime: {
                type: "string",
                id: 6
              },
              updateTime: {
                type: "string",
                id: 7
              },
              groupName: {
                type: "string",
                id: 8
              },
              mobile: {
                type: "string",
                id: 9
              },
              email: {
                type: "string",
                id: 10
              },
              gender: {
                type: "string",
                id: 12
              },
              birthday: {
                type: "string",
                id: 13
              },
              wechatId: {
                type: "string",
                id: 14
              },
              wechatQr: {
                type: "string",
                id: 15
              },
              headImg: {
                type: "string",
                id: 16
              },
              countryCode: {
                type: "string",
                id: 17
              },
              realName: {
                type: "string",
                id: 18
              },
              roleName: {
                rule: "repeated",
                type: "string",
                id: 19
              },
              dingUserId: {
                type: "string",
                id: 20
              },
              sysUserId: {
                type: "string",
                id: 21
              }
            }
          },
          ListSysUserByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              sysUserPb: {
                rule: "repeated",
                type: "SysUserPb",
                id: 3
              }
            }
          },
          SysLoginReq: {
            fields: {
              account: {
                type: "string",
                id: 1
              },
              password: {
                type: "string",
                id: 2
              },
              deviceId: {
                type: "string",
                id: 3
              }
            }
          },
          SysLoginResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              id: {
                type: "int32",
                id: 2
              },
              account: {
                type: "string",
                id: 3
              },
              nickName: {
                type: "string",
                id: 4
              },
              groupId: {
                type: "int32",
                id: 5
              },
              token: {
                type: "string",
                id: 6
              },
              permissionKeyMap: {
                keyType: "string",
                type: "int32",
                id: 7
              },
              headImg: {
                type: "string",
                id: 8
              },
              email: {
                type: "string",
                id: 9
              },
              mobile: {
                type: "string",
                id: 10
              }
            }
          },
          ResetPasswordReq: {
            fields: {
              account: {
                type: "string",
                id: 1
              }
            }
          },
          ResetPasswordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          UpdatePasswordReq: {
            fields: {
              account: {
                type: "string",
                id: 1
              },
              oldPassword: {
                type: "string",
                id: 2
              },
              newPassword: {
                type: "string",
                id: 3
              }
            }
          },
          UpdatePasswordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SysRoleIdReq: {
            fields: {
              roleId: {
                type: "int32",
                id: 1
              }
            }
          },
          SysRoleAddOrUpdateReq: {
            fields: {
              roleId: {
                type: "int32",
                id: 1
              },
              roleName: {
                type: "string",
                id: 2
              },
              permissionKey: {
                rule: "repeated",
                type: "string",
                id: 7
              }
            }
          },
          ListSysRoleByPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              roleName: {
                type: "string",
                id: 2
              }
            }
          },
          SysRolePb: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              roleName: {
                type: "string",
                id: 2
              },
              createTime: {
                type: "string",
                id: 3
              },
              updateTime: {
                type: "string",
                id: 4
              },
              status: {
                type: "int32",
                id: 5
              },
              permissionKey: {
                rule: "repeated",
                type: "string",
                id: 6
              },
              groupName: {
                rule: "repeated",
                type: "string",
                id: 7
              }
            }
          },
          ListSysRoleByPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              sysRolePb: {
                rule: "repeated",
                type: "SysRolePb",
                id: 3
              }
            }
          },
          ListAllSysRoleResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              sysRoleSimplePb: {
                rule: "repeated",
                type: "SysRoleSimplePb",
                id: 2
              }
            }
          },
          ListAllSysRoleReq: {
            fields: {}
          },
          SysRoleSimplePb: {
            fields: {
              roleId: {
                type: "int32",
                id: 1
              },
              roleName: {
                type: "string",
                id: 2
              }
            }
          },
          SysGroupIdReq: {
            fields: {
              groupId: {
                type: "int32",
                id: 1
              }
            }
          },
          AddSysGroupReq: {
            fields: {
              groupName: {
                type: "string",
                id: 1
              },
              roleIds: {
                rule: "repeated",
                type: "int32",
                id: 2
              },
              fid: {
                type: "int32",
                id: 3
              }
            }
          },
          AddSysGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupId: {
                type: "int32",
                id: 2
              },
              groupName: {
                type: "string",
                id: 3
              },
              roleIds: {
                rule: "repeated",
                type: "int32",
                id: 4
              },
              fid: {
                type: "int32",
                id: 5
              }
            }
          },
          UpdateSysGroupReq: {
            fields: {
              groupId: {
                type: "int32",
                id: 1
              },
              groupName: {
                type: "string",
                id: 2
              },
              roleIds: {
                rule: "repeated",
                type: "int32",
                id: 3
              }
            }
          },
          SysGroupPb: {
            fields: {
              groupId: {
                type: "int32",
                id: 1
              },
              groupName: {
                type: "string",
                id: 2
              },
              roleSimplePb: {
                rule: "repeated",
                type: "SysRoleSimplePb",
                id: 3
              }
            }
          },
          SysGroupSimplePb: {
            fields: {
              groupId: {
                type: "int32",
                id: 1
              },
              groupName: {
                type: "string",
                id: 2
              }
            }
          },
          ListAllGroupByFidReq: {
            fields: {
              fid: {
                type: "int32",
                id: 1
              }
            }
          },
          ListAllGroupByFidResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupPb: {
                rule: "repeated",
                type: "SysGroupPb",
                id: 2
              }
            }
          },
          ListGroupSimpleByFidReq: {
            fields: {
              fid: {
                type: "int32",
                id: 1
              }
            }
          },
          ListGroupSimpleByFidResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupSimple: {
                rule: "repeated",
                type: "SysGroupSimplePb",
                id: 2
              }
            }
          },
          GetPermissionKeysByGroupIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              permissionKeyMap: {
                keyType: "string",
                type: "int32",
                id: 2
              }
            }
          },
          FetchDDingIdReq: {
            fields: {
              userName: {
                type: "string",
                id: 1
              }
            }
          },
          FetchDDingIdResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              userInfo: {
                rule: "repeated",
                type: "DDingUserPb",
                id: 2
              }
            }
          },
          DDingUserPb: {
            fields: {
              DDingUserId: {
                type: "string",
                id: 1
              },
              dept: {
                type: "string",
                id: 2
              },
              position: {
                type: "string",
                id: 3
              },
              realName: {
                type: "string",
                id: 4
              }
            }
          },
          GetPermissionKeysReq: {
            fields: {}
          },
          GetPermissionKeysResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              permissionKeyMap: {
                keyType: "string",
                type: "int32",
                id: 2
              }
            }
          },
          SysUserBossService: {
            methods: {
              AddSysUser: {
                requestType: "SysUserAddOrUpdateReq",
                responseType: "BooleanResp"
              },
              UpdateSysUser: {
                requestType: "SysUserAddOrUpdateReq",
                responseType: "BooleanResp"
              },
              DeleteSysUser: {
                requestType: "DeleteSysUserReq",
                responseType: "BooleanResp"
              },
              ListSysUserByPage: {
                requestType: "ListSysUserByPageReq",
                responseType: "ListSysUserByPageResp"
              },
              SysLogin: {
                requestType: "SysLoginReq",
                responseType: "SysLoginResp"
              },
              ResetPassword: {
                requestType: "ResetPasswordReq",
                responseType: "ResetPasswordResp"
              },
              UpdatePassword: {
                requestType: "UpdatePasswordReq",
                responseType: "UpdatePasswordResp"
              },
              FetchDDingUserId: {
                requestType: "FetchDDingIdReq",
                responseType: "FetchDDingIdResp"
              },
              GetPermissionKeys: {
                requestType: "GetPermissionKeysReq",
                responseType: "GetPermissionKeysResp"
              }
            }
          },
          SysRoleBossService: {
            methods: {
              AddSysRole: {
                requestType: "SysRoleAddOrUpdateReq",
                responseType: "BooleanResp"
              },
              UpdateSysRole: {
                requestType: "SysRoleAddOrUpdateReq",
                responseType: "BooleanResp"
              },
              DeleteSysRole: {
                requestType: "SysRoleIdReq",
                responseType: "BooleanResp"
              },
              ListSysRoleByPage: {
                requestType: "ListSysRoleByPageReq",
                responseType: "ListSysRoleByPageResp"
              },
              ListAllSysRole: {
                requestType: "ListAllSysRoleReq",
                responseType: "ListAllSysRoleResp"
              }
            }
          },
          SysGroupBossService: {
            methods: {
              AddSysGroup: {
                requestType: "AddSysGroupReq",
                responseType: "AddSysGroupResp"
              },
              UpdateSysGroup: {
                requestType: "UpdateSysGroupReq",
                responseType: "BooleanResp"
              },
              DeleteSysGroup: {
                requestType: "SysGroupIdReq",
                responseType: "BooleanResp"
              },
              ListAllGroupByFid: {
                requestType: "ListAllGroupByFidReq",
                responseType: "ListAllGroupByFidResp"
              },
              ListGroupSimpleByFid: {
                requestType: "ListGroupSimpleByFidReq",
                responseType: "ListGroupSimpleByFidResp"
              },
              GetPermissionKeysByGroupId: {
                requestType: "SysGroupIdReq",
                responseType: "GetPermissionKeysByGroupIdResp"
              }
            }
          }
        }
      },
      ticket: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.boss.workorder",
          java_outer_classname: "Workorder"
        },
        nested: {
          WorkOrderCreateReq: {
            fields: {
              tagId: {
                type: "int64",
                id: 1
              },
              workOrderSource: {
                type: "common.base.WorkOrderSourceEnumPb",
                id: 2
              },
              workOrderDescribe: {
                type: "string",
                id: 3
              },
              workOrderPic: {
                type: "string",
                id: 4
              },
              emergencyLevel: {
                type: "int32",
                id: 5
              },
              doDispatch: {
                type: "int32",
                id: 6
              },
              dispatchDealManagerId: {
                type: "int64",
                id: 7
              },
              ccManagerId: {
                type: "int64",
                id: 8
              },
              workOrderContent: {
                type: "string",
                id: 9
              },
              userId: {
                type: "int64",
                id: 10
              },
              userNickName: {
                type: "string",
                id: 11
              },
              userMobile: {
                type: "string",
                id: 12
              },
              orderNo: {
                type: "string",
                id: 13
              },
              createId: {
                type: "int64",
                id: 14
              },
              subOrderNo: {
                type: "string",
                id: 15
              },
              userType: {
                type: "UserType",
                id: 16
              }
            }
          },
          UserType: {
            values: {
              REGISTERED: 0,
              UNREGISTERED: 1
            }
          },
          WorkOrderCreateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderViewReq: {
            fields: {
              workOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          WorkOrderViewResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              workOrderView: {
                type: "WorkOrderView",
                id: 2
              }
            }
          },
          WorkOrderView: {
            fields: {
              workOrderNo: {
                type: "string",
                id: 2
              },
              workOrderSource: {
                type: "common.base.WorkOrderSourceEnumPb",
                id: 3
              },
              workOrderDescribe: {
                type: "string",
                id: 4
              },
              workOrderPic: {
                type: "string",
                id: 5
              },
              emergencyLevel: {
                type: "int32",
                id: 6
              },
              doDispatch: {
                type: "int32",
                id: 7
              },
              createManagerName: {
                type: "string",
                id: 8
              },
              workOrderContent: {
                type: "string",
                id: 9
              },
              userId: {
                type: "string",
                id: 10
              },
              userNickName: {
                type: "string",
                id: 11
              },
              userMobile: {
                type: "string",
                id: 12
              },
              orderNo: {
                type: "string",
                id: 13
              },
              tagName: {
                type: "string",
                id: 14
              },
              createDate: {
                type: "string",
                id: 17
              },
              workOrderStatus: {
                type: "common.base.WorkOrderStatusEnumPb",
                id: 15
              },
              processRecords: {
                rule: "repeated",
                type: "WorkOrderProcessingRecord",
                id: 16
              },
              userType: {
                type: "UserType",
                id: 18
              },
              subOrderNo: {
                type: "string",
                id: 19
              }
            }
          },
          WorkOrderProcessingRecord: {
            fields: {
              workOrderNo: {
                type: "string",
                id: 2
              },
              dealManagerId: {
                type: "string",
                id: 3
              },
              dealManagerName: {
                type: "string",
                id: 4
              },
              dealType: {
                type: "common.base.WorkOrderDealTypeEnumPb",
                id: 5
              },
              dealContent: {
                type: "string",
                id: 6
              },
              dealPic: {
                type: "string",
                id: 7
              },
              dealEvaluation: {
                rule: "repeated",
                type: "common.base.WorkOrderEvaluationEnumPb",
                id: 8
              },
              createDate: {
                type: "string",
                id: 10
              },
              dealDate: {
                type: "string",
                id: 11
              },
              dealStatus: {
                type: "common.base.WorkOrderDealStatus",
                id: 12
              },
              processNo: {
                type: "string",
                id: 13
              }
            }
          },
          WorkOrderValidTagListReq: {
            fields: {}
          },
          WorkOrderValidTagListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "WorkOrderTag",
                id: 2
              }
            }
          },
          WorkOrderTag: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              tagName: {
                type: "string",
                id: 2
              },
              tagLevel: {
                type: "int32",
                id: 3
              },
              groupId: {
                type: "string",
                id: 4
              },
              superiorTagId: {
                type: "string",
                id: 5
              },
              status: {
                type: "int32",
                id: 6
              },
              subTags: {
                rule: "repeated",
                type: "WorkOrderTag",
                id: 7
              }
            }
          },
          WorkOrderTagPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              tagLevel: {
                type: "int32",
                id: 2
              },
              superiorTagId: {
                type: "int64",
                id: 3
              }
            }
          },
          WorkOrderTagPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              data: {
                rule: "repeated",
                type: "WorkOrderTag",
                id: 4
              }
            }
          },
          WorkOrderAddTagReq: {
            fields: {
              tagName: {
                type: "string",
                id: 1
              },
              groupId: {
                type: "int64",
                id: 2
              },
              superiorTagId: {
                type: "int64",
                id: 3
              },
              tagLevel: {
                type: "int32",
                id: 4
              }
            }
          },
          WorkOrderAddTagResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderUpdateTagReq: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              tagName: {
                type: "string",
                id: 2
              },
              groupId: {
                type: "int64",
                id: 3
              }
            }
          },
          WorkOrderUpdateTagResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderChangeTagStatusReq: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              status: {
                type: "int32",
                id: 2
              }
            }
          },
          WorkOrderChangeTagStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderAddGroupReq: {
            fields: {
              groupName: {
                type: "string",
                id: 1
              },
              groupType: {
                type: "common.base.WorkOrderGroupTypeEnumPb",
                id: 2
              },
              managerIds: {
                rule: "repeated",
                type: "int64",
                id: 3
              },
              status: {
                type: "int32",
                id: 4
              }
            }
          },
          WorkOrderAddGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderUpdateGroupReq: {
            fields: {
              id: {
                type: "int64",
                id: 1
              },
              groupName: {
                type: "string",
                id: 2
              },
              managerIds: {
                rule: "repeated",
                type: "int64",
                id: 3
              },
              status: {
                type: "int32",
                id: 4
              }
            }
          },
          WorkOrderUpdateGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderPageGroupReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              groupType: {
                type: "common.base.WorkOrderGroupTypeEnumPb",
                id: 2
              }
            }
          },
          WorkOrderPageGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              data: {
                rule: "repeated",
                type: "WorkOrderGroup",
                id: 4
              }
            }
          },
          WorkOrderGroup: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              groupName: {
                type: "string",
                id: 2
              },
              groupType: {
                type: "common.base.WorkOrderGroupTypeEnumPb",
                id: 3
              },
              managerUsers: {
                rule: "repeated",
                type: "ManagerUser",
                id: 4
              },
              tags: {
                rule: "repeated",
                type: "WorkOrderTag",
                id: 5
              },
              status: {
                type: "int32",
                id: 6
              }
            }
          },
          ManagerUser: {
            fields: {
              managerId: {
                type: "string",
                id: 1
              },
              managerName: {
                type: "string",
                id: 2
              }
            }
          },
          WorkOrderListGroupReq: {
            fields: {
              groupId: {
                type: "int64",
                id: 1
              },
              selectParam: {
                type: "string",
                id: 2
              }
            }
          },
          WorkOrderListGroupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "WorkOrderGroup",
                id: 2
              }
            }
          },
          WorkOrderDealReq: {
            fields: {
              workOrderNo: {
                type: "string",
                id: 1
              },
              dealType: {
                type: "common.base.WorkOrderDealTypeEnumPb",
                id: 2
              },
              dealManagerId: {
                type: "int64",
                id: 3
              },
              dealConetent: {
                type: "string",
                id: 4
              },
              dealPic: {
                type: "string",
                id: 5
              },
              ccManagerId: {
                type: "int64",
                id: 6
              },
              turnSendType: {
                type: "int32",
                id: 7
              },
              dealEvaluation: {
                rule: "repeated",
                type: "common.base.WorkOrderEvaluationEnumPb",
                id: 8
              }
            }
          },
          WorkOrderDealResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderFllowUpReq: {
            fields: {
              workOrderNo: {
                type: "string",
                id: 1
              },
              dealConetent: {
                type: "string",
                id: 2
              },
              dealPic: {
                type: "string",
                id: 3
              }
            }
          },
          WorkOrderFllowUpResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderCloseReq: {
            fields: {
              workOrderNo: {
                type: "string",
                id: 1
              },
              dealConetent: {
                type: "string",
                id: 2
              },
              dealPic: {
                type: "string",
                id: 3
              },
              ccManagerId: {
                type: "int64",
                id: 4
              }
            }
          },
          WorkOrderCloseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderGlobalSearchReq: {
            fields: {
              selectParam: {
                type: "string",
                id: 1
              },
              userId: {
                type: "int64",
                id: 2
              },
              userMobile: {
                type: "string",
                id: 3
              },
              startDate: {
                type: "int64",
                id: 4
              },
              endDate: {
                type: "int64",
                id: 5
              },
              selectDateType: {
                type: "common.base.WorkOrderSelectDateEnumPb",
                id: 6
              },
              orderDateType: {
                type: "common.base.WorkOrderSelectDateOrderEnumPb",
                id: 7
              },
              emergencyLevel: {
                type: "int32",
                id: 8
              },
              doDispatch: {
                type: "int32",
                id: 9
              },
              createManagerId: {
                type: "int64",
                id: 10
              },
              currentDealManagerId: {
                type: "int64",
                id: 11
              },
              ccManagerId: {
                type: "int64",
                id: 12
              },
              workOrderSource: {
                type: "common.base.WorkOrderSourceEnumPb",
                id: 13
              },
              historyDealManagerId: {
                type: "int64",
                id: 14
              },
              tagId: {
                type: "int64",
                id: 15
              },
              workOrderStatus: {
                type: "common.base.WorkOrderStatusEnumPb",
                id: 16
              },
              page: {
                type: "common.base.Pagination",
                id: 17
              },
              orderNo: {
                type: "string",
                id: 18
              }
            }
          },
          WorkOrderGlobalSearchResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              data: {
                rule: "repeated",
                type: "WorkOrderListView",
                id: 4
              }
            }
          },
          ExportByTimeSectionReq: {
            fields: {
              selectParam: {
                type: "string",
                id: 1
              },
              userId: {
                type: "int64",
                id: 2
              },
              userMobile: {
                type: "string",
                id: 3
              },
              startDate: {
                type: "int64",
                id: 4
              },
              endDate: {
                type: "int64",
                id: 5
              },
              selectDateType: {
                type: "common.base.WorkOrderSelectDateEnumPb",
                id: 6
              },
              orderDateType: {
                type: "common.base.WorkOrderSelectDateOrderEnumPb",
                id: 7
              },
              emergencyLevel: {
                type: "int32",
                id: 8
              },
              doDispatch: {
                type: "int32",
                id: 9
              },
              createManagerId: {
                type: "int64",
                id: 10
              },
              currentDealManagerId: {
                type: "int64",
                id: 11
              },
              ccManagerId: {
                type: "int64",
                id: 12
              },
              workOrderSource: {
                type: "common.base.WorkOrderSourceEnumPb",
                id: 13
              },
              historyDealManagerId: {
                type: "int64",
                id: 14
              },
              tagId: {
                type: "int64",
                id: 15
              },
              workOrderStatus: {
                type: "common.base.WorkOrderStatusEnumPb",
                id: 16
              },
              orderNo: {
                type: "string",
                id: 17
              }
            }
          },
          ExportByTimeSectionResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          WorkOrderListView: {
            fields: {
              workOrderNo: {
                type: "string",
                id: 2
              },
              emergencyLevel: {
                type: "int32",
                id: 6
              },
              doDispatch: {
                type: "int32",
                id: 7
              },
              createManagerName: {
                type: "string",
                id: 8
              },
              userId: {
                type: "string",
                id: 10
              },
              userNickName: {
                type: "string",
                id: 11
              },
              userMobile: {
                type: "string",
                id: 12
              },
              orderNo: {
                type: "string",
                id: 13
              },
              tagName: {
                type: "string",
                id: 14
              },
              workOrderStatus: {
                type: "common.base.WorkOrderStatusEnumPb",
                id: 15
              },
              createDate: {
                type: "string",
                id: 16
              },
              currentDealManagerId: {
                type: "string",
                id: 17
              },
              currentDealManagerName: {
                type: "string",
                id: 18
              }
            }
          },
          WorkOrderCreateSOPReq: {
            fields: {
              sopName: {
                type: "string",
                id: 1
              },
              tagId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              sopDesc: {
                type: "string",
                id: 3
              },
              reply: {
                rule: "repeated",
                type: "WorkOrderSOPReply",
                id: 4
              },
              sopPic: {
                type: "string",
                id: 5
              },
              status: {
                type: "SopStatusEnum",
                id: 6
              },
              browseNumber: {
                type: "int64",
                id: 7
              }
            }
          },
          SopStatusEnum: {
            values: {
              Offline: 0,
              Online: 1
            }
          },
          WorkOrderSOPReply: {
            fields: {
              sopId: {
                type: "string",
                id: 1
              },
              sopReply: {
                type: "string",
                id: 2
              },
              replyLanguage: {
                type: "string",
                id: 3
              }
            }
          },
          WorkOrderCreateSOPResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderEditSOPReq: {
            fields: {
              sopId: {
                type: "string",
                id: 1
              },
              sopName: {
                type: "string",
                id: 2
              },
              tagId: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              sopDesc: {
                type: "string",
                id: 4
              },
              reply: {
                rule: "repeated",
                type: "WorkOrderSOPReply",
                id: 5
              },
              sopPic: {
                type: "string",
                id: 6
              },
              status: {
                type: "SopStatusEnum",
                id: 7
              },
              browseNumber: {
                type: "int64",
                id: 8
              }
            }
          },
          WorkOrderEditSOPResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderSearchSOPReq: {
            fields: {
              sopName: {
                type: "string",
                id: 1
              },
              sopDesc: {
                type: "string",
                id: 2
              },
              tagId: {
                rule: "repeated",
                type: "string",
                id: 3
              },
              status: {
                type: "SopStatusEnum",
                id: 4
              },
              page: {
                type: "common.base.Pagination",
                id: 5
              }
            }
          },
          WorkOrderSearchSOPResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              page: {
                type: "common.base.Pagination",
                id: 3
              },
              workOrderSOPView: {
                rule: "repeated",
                type: "WorkOrderSOPView",
                id: 4
              }
            }
          },
          WorkOrderSOPView: {
            fields: {
              sopId: {
                type: "string",
                id: 1
              },
              sopName: {
                type: "string",
                id: 2
              },
              data: {
                rule: "repeated",
                type: "WorkOrderTag",
                id: 3
              },
              sopDesc: {
                type: "string",
                id: 4
              },
              reply: {
                rule: "repeated",
                type: "WorkOrderSOPReply",
                id: 5
              },
              sopPic: {
                type: "string",
                id: 6
              },
              status: {
                type: "SopStatusEnum",
                id: 7
              },
              browseNumber: {
                type: "int64",
                id: 8
              },
              lastUpdated: {
                type: "string",
                id: 9
              }
            }
          },
          WorkOrderSOPAddBrowseNumberReq: {
            fields: {
              sopId: {
                type: "string",
                id: 1
              }
            }
          },
          WorkOrderSOPAddBrowseNumberResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderDeleteSOPReq: {
            fields: {
              sopId: {
                type: "string",
                id: 1
              }
            }
          },
          WorkOrderDeleteSOPResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          WorkOrderSearchTop15Req: {
            fields: {}
          },
          WorkOrderService: {
            methods: {
              AddWorkOrder: {
                requestType: "WorkOrderCreateReq",
                responseType: "WorkOrderCreateResp"
              },
              ViewWorkOrder: {
                requestType: "WorkOrderViewReq",
                responseType: "WorkOrderViewResp"
              },
              DealWorkOrder: {
                requestType: "WorkOrderDealReq",
                responseType: "WorkOrderDealResp"
              },
              FllowUpWorkOrder: {
                requestType: "WorkOrderFllowUpReq",
                responseType: "WorkOrderFllowUpResp"
              },
              CloseWorkOrder: {
                requestType: "WorkOrderCloseReq",
                responseType: "WorkOrderCloseResp"
              },
              GlobalSearch: {
                requestType: "WorkOrderGlobalSearchReq",
                responseType: "WorkOrderGlobalSearchResp"
              },
              ExportByTimeSection: {
                requestType: "ExportByTimeSectionReq",
                responseType: "ExportByTimeSectionResp"
              }
            }
          },
          WorkOrderGroupService: {
            methods: {
              AddWorkOrderGroup: {
                requestType: "WorkOrderAddGroupReq",
                responseType: "WorkOrderAddGroupResp"
              },
              UpdateWorkOrderGroup: {
                requestType: "WorkOrderUpdateGroupReq",
                responseType: "WorkOrderUpdateGroupResp"
              },
              WorkOrderGroupPageList: {
                requestType: "WorkOrderPageGroupReq",
                responseType: "WorkOrderPageGroupResp"
              },
              ProcessTeamList: {
                requestType: "WorkOrderListGroupReq",
                responseType: "WorkOrderListGroupResp"
              }
            }
          },
          WorkOrderTagService: {
            methods: {
              ValidTagList: {
                requestType: "WorkOrderValidTagListReq",
                responseType: "WorkOrderValidTagListResp"
              },
              WorkOrderTagPageList: {
                requestType: "WorkOrderTagPageReq",
                responseType: "WorkOrderTagPageResp"
              },
              AddWorkOrderTag: {
                requestType: "WorkOrderAddTagReq",
                responseType: "WorkOrderAddTagResp"
              },
              UpdateTag: {
                requestType: "WorkOrderUpdateTagReq",
                responseType: "WorkOrderUpdateTagResp"
              },
              ChangeTagStatus: {
                requestType: "WorkOrderChangeTagStatusReq",
                responseType: "WorkOrderChangeTagStatusResp"
              }
            }
          },
          WorkOrderSOPService: {
            methods: {
              AddSOP: {
                requestType: "WorkOrderCreateSOPReq",
                responseType: "WorkOrderCreateSOPResp"
              },
              EditSOP: {
                requestType: "WorkOrderEditSOPReq",
                responseType: "WorkOrderEditSOPResp"
              },
              SearchSOP: {
                requestType: "WorkOrderSearchSOPReq",
                responseType: "WorkOrderSearchSOPResp"
              },
              AddSOPBrowseNumber: {
                requestType: "WorkOrderSOPAddBrowseNumberReq",
                responseType: "WorkOrderSOPAddBrowseNumberResp"
              },
              DeleteSOP: {
                requestType: "WorkOrderDeleteSOPReq",
                responseType: "WorkOrderDeleteSOPResp"
              },
              SearchMostBrowsedSOP: {
                requestType: "WorkOrderSearchTop15Req",
                responseType: "WorkOrderSearchSOPResp"
              }
            }
          }
        }
      }
    }
  },
  erp: {
    nested: {
      address: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.erp.address",
          java_outer_classname: "Address"
        },
        nested: {
          AddressInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              state: {
                type: "string",
                id: 3
              },
              stateEn: {
                type: "string",
                id: 4
              },
              city: {
                type: "string",
                id: 5
              },
              cityEn: {
                type: "string",
                id: 6
              },
              area: {
                type: "string",
                id: 7
              },
              postcode: {
                type: "string",
                id: 8
              },
              superiorPostcode: {
                type: "string",
                id: 9
              }
            }
          },
          GetAddressReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              state: {
                type: "string",
                id: 3
              },
              stateEn: {
                type: "string",
                id: 4
              },
              city: {
                type: "string",
                id: 5
              },
              cityEn: {
                type: "string",
                id: 6
              },
              area: {
                type: "string",
                id: 7
              },
              postcode: {
                type: "string",
                id: 8
              },
              superiorPostcode: {
                type: "string",
                id: 9
              }
            }
          },
          GetAddressResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              addressInfo: {
                rule: "repeated",
                type: "AddressInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          UpdateAddressReq: {
            fields: {
              addressInfo: {
                type: "AddressInfo",
                id: 1
              }
            }
          },
          UpdateAddressResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteAddressReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          DeleteAddressResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ImportAddressReq: {
            fields: {
              fileUrl: {
                type: "string",
                id: 1
              }
            }
          },
          ImportAddressResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AddressBossService: {
            methods: {
              GetAddress: {
                requestType: "GetAddressReq",
                responseType: "GetAddressResp"
              },
              UpdateAddress: {
                requestType: "UpdateAddressReq",
                responseType: "UpdateAddressResp"
              },
              DeleteAddress: {
                requestType: "DeleteAddressReq",
                responseType: "DeleteAddressResp"
              },
              ImportAddress: {
                requestType: "ImportAddressReq",
                responseType: "ImportAddressResp"
              }
            }
          }
        }
      },
      inventory: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.erp.inventory",
          java_outer_classname: "Inventory"
        },
        nested: {
          InventoryPB: {
            fields: {
              warehouseNo: {
                type: "string",
                id: 1
              },
              warehouseName: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              inStockQty: {
                type: "int32",
                id: 4
              },
              reserveQty: {
                type: "int32",
                id: 5
              },
              bookedQty: {
                type: "int32",
                id: 6
              },
              availableQty: {
                type: "int32",
                id: 7
              },
              nameCn: {
                type: "string",
                id: 9
              },
              skuCover: {
                type: "string",
                id: 10
              },
              standardAttr: {
                type: "string",
                id: 11
              },
              saleWay: {
                type: "common.enum.ProductEnum.SaleWay",
                id: 12
              },
              supplierQty: {
                type: "int32",
                id: 13
              },
              canMatchQty: {
                type: "int32",
                id: 14
              },
              occuptQty: {
                type: "int32",
                id: 15
              }
            }
          },
          InventoryPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              startInstockQty: {
                type: "int32",
                id: 4
              },
              endInstockQty: {
                type: "int32",
                id: 5
              },
              startReserveQty: {
                type: "int32",
                id: 6
              },
              endReserveQty: {
                type: "int32",
                id: 7
              },
              startBookedQty: {
                type: "int32",
                id: 8
              },
              endBookedQty: {
                type: "int32",
                id: 9
              },
              startAvailableQty: {
                type: "int32",
                id: 10
              },
              endAvailableQty: {
                type: "int32",
                id: 11
              }
            }
          },
          InventoryPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "InventoryPB",
                id: 4
              }
            }
          },
          InventoryRecordPB: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              type: {
                type: "common.enum.ErpEnum.InventoryRecordType",
                id: 3
              },
              qtyType: {
                type: "common.enum.ErpEnum.QtyType",
                id: 4
              },
              count: {
                type: "int32",
                id: 5
              },
              sourceNo: {
                type: "string",
                id: 6
              },
              remark: {
                type: "string",
                id: 7
              },
              userId: {
                type: "string",
                id: 8
              },
              userName: {
                type: "string",
                id: 9
              },
              nameCn: {
                type: "string",
                id: 10
              },
              sourceType: {
                type: "common.enum.ErpEnum.QtySourceType",
                id: 11
              },
              createTime: {
                type: "string",
                id: 12
              },
              warehouseName: {
                type: "string",
                id: 13
              },
              recordType: {
                type: "string",
                id: 14
              }
            }
          },
          InventoryRecordPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              type: {
                type: "common.enum.ErpEnum.InventoryRecordType",
                id: 4
              },
              qtyType: {
                type: "common.enum.ErpEnum.QtyType",
                id: 5
              },
              sourceNo: {
                type: "string",
                id: 6
              },
              sourceType: {
                type: "common.enum.ErpEnum.QtySourceType",
                id: 7
              },
              startTime: {
                type: "string",
                id: 8
              },
              endTime: {
                type: "string",
                id: 9
              },
              recordType: {
                type: "string",
                id: 10
              }
            }
          },
          InventoryRecordPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "InventoryRecordPB",
                id: 4
              }
            }
          },
          AdminUpdateInventoryReq: {
            fields: {
              warehouseNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              qty: {
                type: "int32",
                id: 3
              },
              operType: {
                type: "common.enum.ErpEnum.InventoryOperType",
                id: 4
              },
              remark: {
                type: "string",
                id: 5
              }
            }
          },
          AdminUpdateInventoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              qty: {
                type: "int32",
                id: 2
              },
              message: {
                type: "string",
                id: 3
              }
            }
          },
          AddInventoryReq: {
            fields: {
              warehouseNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          AddInventoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          SkuInfoReq: {
            fields: {
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          SkuInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              sku: {
                type: "SkuInfo",
                id: 3
              }
            },
            nested: {
              SkuInfo: {
                fields: {
                  nameCn: {
                    type: "string",
                    id: 1
                  },
                  skuCover: {
                    type: "string",
                    id: 2
                  },
                  standardAttr: {
                    type: "string",
                    id: 3
                  },
                  skuLink: {
                    type: "string",
                    id: 4
                  },
                  productId: {
                    type: "string",
                    id: 5
                  },
                  supplyPrice: {
                    type: "string",
                    id: 6
                  }
                }
              }
            }
          },
          GetRecordTypeReq: {
            fields: {}
          },
          GetRecordTypeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              type: {
                rule: "repeated",
                type: "RecordTypePB",
                id: 2
              }
            },
            nested: {
              RecordTypePB: {
                fields: {
                  type: {
                    type: "string",
                    id: 1
                  },
                  name: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          SupplierInventoryDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              totalCount: {
                type: "int32",
                id: 3
              },
              inventoryDataPB: {
                rule: "repeated",
                type: "SupplierInventoryDataPB",
                id: 2
              }
            }
          },
          SupplierInventoryDataPB: {
            fields: {
              skuCode: {
                type: "string",
                id: 2
              },
              skuPic: {
                type: "string",
                id: 3
              },
              skuName: {
                type: "string",
                id: 4
              },
              standardAttr: {
                type: "string",
                id: 5
              },
              snapCode: {
                type: "string",
                id: 1
              },
              supplierName: {
                type: "string",
                id: 6
              },
              supplierCountry: {
                type: "string",
                id: 7
              },
              stockQty: {
                type: "int32",
                id: 8
              },
              deliveryWay: {
                type: "int32",
                id: 9
              },
              saleStatus: {
                type: "int32",
                id: 10
              },
              supplierId: {
                type: "string",
                id: 11
              }
            }
          },
          SupplierInventoryDataReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 3
              },
              skuName: {
                type: "string",
                id: 4
              },
              productId: {
                type: "string",
                id: 5
              },
              supplierId: {
                type: "string",
                id: 6
              }
            }
          },
          SupplierInventoryRecordResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 3
              },
              supplierInventoryPB: {
                rule: "repeated",
                type: "SupplierInventoryRecordPB",
                id: 2
              }
            }
          },
          SupplierInventoryRecordPB: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              snapCode: {
                type: "string",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 3
              },
              sourceNo: {
                type: "string",
                id: 4
              },
              orderType: {
                type: "string",
                id: 5
              },
              qtyType: {
                type: "string",
                id: 6
              },
              optQty: {
                type: "string",
                id: 7
              },
              changeType: {
                type: "string",
                id: 8
              },
              operatorName: {
                type: "string",
                id: 9
              },
              optType: {
                type: "string",
                id: 10
              },
              createTime: {
                type: "string",
                id: 11
              },
              remark: {
                type: "string",
                id: 12
              },
              optSource: {
                type: "string",
                id: 13
              },
              skuName: {
                type: "string",
                id: 14
              }
            }
          },
          SupplierInventoryRecordReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              supplierId: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              snapCode: {
                type: "string",
                id: 4
              },
              sourceNo: {
                type: "string",
                id: 5
              },
              startDate: {
                type: "string",
                id: 6
              },
              endDate: {
                type: "string",
                id: 7
              },
              qtyType: {
                type: "int32",
                id: 8
              },
              orderType: {
                type: "int32",
                id: 9
              },
              optSource: {
                type: "int32",
                id: 10
              }
            }
          },
          InventoryBossService: {
            methods: {
              InventoryPage: {
                requestType: "InventoryPageReq",
                responseType: "InventoryPageResp"
              },
              GetRecordType: {
                requestType: "GetRecordTypeReq",
                responseType: "GetRecordTypeResp"
              },
              GetSkuInfo: {
                requestType: "SkuInfoReq",
                responseType: "SkuInfoResp"
              },
              AddInventory: {
                requestType: "AddInventoryReq",
                responseType: "AddInventoryResp"
              },
              InventoryRecordPage: {
                requestType: "InventoryRecordPageReq",
                responseType: "InventoryRecordPageResp"
              },
              AdminUpdateInventory: {
                requestType: "AdminUpdateInventoryReq",
                responseType: "AdminUpdateInventoryResp"
              },
              QuerySupplierInventoryByCondition: {
                requestType: "SupplierInventoryDataReq",
                responseType: "SupplierInventoryDataResp"
              },
              QuerySupplierInventoryRecordByCondition: {
                requestType: "SupplierInventoryRecordReq",
                responseType: "SupplierInventoryRecordResp"
              }
            }
          }
        }
      },
      jit: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.erp.jit",
          java_outer_classname: "Jit"
        },
        nested: {
          JitOrderPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              jitNo: {
                type: "string",
                id: 2
              },
              orderNo: {
                type: "string",
                id: 3
              },
              logiCode: {
                type: "string",
                id: 4
              },
              skuCode: {
                type: "string",
                id: 5
              },
              jitStatus: {
                type: "int32",
                id: 6
              },
              supplierId: {
                type: "int64",
                id: 16
              },
              subOrderNo: {
                type: "string",
                id: 17
              },
              countryCode: {
                type: "string",
                id: 18
              },
              isUseFingoSystem: {
                type: "common.enum.PurchaseOrderEnum.UseFingoSystem",
                id: 20
              },
              timeType: {
                type: "common.enum.ErpEnum.QueryTimeType",
                id: 7
              },
              startTime: {
                type: "string",
                id: 8
              },
              endTime: {
                type: "string",
                id: 9
              },
              productName: {
                type: "string",
                id: 10
              },
              tabType: {
                type: "string",
                id: 11
              },
              receiverName: {
                type: "string",
                id: 12
              },
              receiverPhone: {
                type: "string",
                id: 13
              },
              languageCode: {
                type: "string",
                id: 14
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 15
              },
              cateId: {
                type: "int32",
                id: 21
              }
            }
          },
          JitOrderPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "JitOrderPb",
                id: 4
              }
            }
          },
          JitOrderPageTabReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 2
              }
            }
          },
          JitOrderPageTabResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              tabInfo: {
                rule: "repeated",
                type: "TabInfo",
                id: 3
              }
            },
            nested: {
              TabInfo: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  count: {
                    type: "uint64",
                    id: 2
                  }
                }
              }
            }
          },
          JitOrderAddress: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              receiverName: {
                type: "string",
                id: 2
              },
              receiverPhone: {
                type: "string",
                id: 3
              },
              stateName: {
                type: "string",
                id: 4
              },
              cityName: {
                type: "string",
                id: 5
              },
              area: {
                type: "string",
                id: 6
              },
              postcode: {
                type: "string",
                id: 7
              },
              address: {
                type: "string",
                id: 8
              }
            }
          },
          JitOrderDetailPb: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productCover: {
                type: "string",
                id: 2
              },
              productLink: {
                type: "string",
                id: 3
              },
              skuDesc: {
                type: "string",
                id: 4
              },
              purchasePrice: {
                type: "string",
                id: 5
              },
              count: {
                type: "int32",
                id: 6
              },
              shipCount: {
                type: "int32",
                id: 7
              },
              stockoutCount: {
                type: "int32",
                id: 8
              },
              cancelCount: {
                type: "int32",
                id: 9
              },
              skuCode: {
                type: "string",
                id: 10
              },
              currency: {
                type: "string",
                id: 11
              }
            }
          },
          JitOrderPb: {
            fields: {
              jitNo: {
                type: "string",
                id: 1
              },
              supplierId: {
                type: "string",
                id: 2
              },
              supplierName: {
                type: "string",
                id: 3
              },
              jitStatus: {
                type: "string",
                id: 4
              },
              createTime: {
                type: "string",
                id: 5
              },
              updateTime: {
                type: "string",
                id: 6
              },
              shipTime: {
                type: "string",
                id: 7
              },
              payTime: {
                type: "string",
                id: 8
              },
              details: {
                rule: "repeated",
                type: "JitOrderDetailPb",
                id: 9
              },
              address: {
                type: "JitOrderAddress",
                id: 10
              },
              orderNo: {
                type: "string",
                id: 11
              },
              subOrderNo: {
                type: "string",
                id: 12
              },
              isShip: {
                type: "common.enum.ErpEnum.YesNo",
                id: 13
              },
              countryCode: {
                type: "string",
                id: 14
              }
            }
          },
          JitOrderShipReq: {
            fields: {
              deliver: {
                rule: "repeated",
                type: "JitOrderShipPB",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 3
              }
            }
          },
          JitOrderShipPB: {
            fields: {
              jitNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              logi: {
                rule: "repeated",
                type: "ShipLogi",
                id: 3
              }
            }
          },
          JitOrderShipResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ShipLogi: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              },
              logiCompany: {
                type: "string",
                id: 2
              },
              count: {
                type: "int32",
                id: 3
              }
            }
          },
          ImportJitShipReq: {
            fields: {
              fileUrl: {
                type: "string",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 3
              }
            }
          },
          ImportJitShipResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ExportJitResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              },
              languageCode: {
                type: "string",
                id: 4
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 5
              }
            }
          },
          QueryJitLogiReq: {
            fields: {
              jitNo: {
                type: "string",
                id: 1
              }
            }
          },
          QueryJitLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              logi: {
                rule: "repeated",
                type: "JitLogiPB",
                id: 2
              }
            },
            nested: {
              JitLogiPB: {
                fields: {
                  logiCode: {
                    type: "string",
                    id: 1
                  },
                  logiCompany: {
                    type: "string",
                    id: 2
                  },
                  skuInfo: {
                    rule: "repeated",
                    type: "JitLogiSkuInfo",
                    id: 3
                  }
                }
              },
              JitLogiSkuInfo: {
                fields: {
                  productName: {
                    type: "string",
                    id: 1
                  },
                  productCover: {
                    type: "string",
                    id: 2
                  },
                  productLink: {
                    type: "string",
                    id: 3
                  },
                  skuDesc: {
                    type: "string",
                    id: 4
                  },
                  count: {
                    type: "int32",
                    id: 5
                  }
                }
              }
            }
          },
          QueryLogiTrackingReq: {
            fields: {
              jitNo: {
                type: "string",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              },
              refresh: {
                type: "common.enum.ErpEnum.YesNo",
                id: 3
              }
            }
          },
          QueryLogiTrackingResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              logi: {
                rule: "repeated",
                type: "JitLogiPB",
                id: 2
              }
            },
            nested: {
              JitLogiPB: {
                fields: {
                  logiCode: {
                    type: "string",
                    id: 1
                  },
                  logiCompany: {
                    type: "string",
                    id: 2
                  },
                  shipTime: {
                    type: "string",
                    id: 3
                  },
                  queryUrl: {
                    type: "string",
                    id: 4
                  },
                  skuInfo: {
                    rule: "repeated",
                    type: "JitLogiSkuInfo",
                    id: 5
                  },
                  trackInfo: {
                    rule: "repeated",
                    type: "JitLogiTrackPB",
                    id: 6
                  }
                }
              },
              JitLogiTrackPB: {
                fields: {
                  time: {
                    type: "string",
                    id: 1
                  },
                  type: {
                    type: "string",
                    id: 2
                  },
                  desc: {
                    type: "string",
                    id: 3
                  }
                }
              },
              JitLogiSkuInfo: {
                fields: {
                  productName: {
                    type: "string",
                    id: 1
                  },
                  productCover: {
                    type: "string",
                    id: 2
                  },
                  productLink: {
                    type: "string",
                    id: 3
                  },
                  skuDesc: {
                    type: "string",
                    id: 4
                  },
                  count: {
                    type: "int32",
                    id: 5
                  }
                }
              }
            }
          },
          ExportJitOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          ModifyJitOrderLogiReq: {
            fields: {
              jitNo: {
                type: "string",
                id: 1
              },
              oldLogiCode: {
                type: "string",
                id: 2
              },
              oldLogiCompany: {
                type: "string",
                id: 3
              },
              logiCode: {
                type: "string",
                id: 4
              },
              logiCompany: {
                type: "string",
                id: 5
              },
              languageCode: {
                type: "string",
                id: 6
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 7
              }
            }
          },
          ModifyJitOrderLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ExportTemplateReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 2
              }
            }
          },
          CancelJitOrderReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              },
              reqType: {
                type: "common.enum.ErpEnum.ReqSourceType",
                id: 2
              },
              jitNo: {
                type: "string",
                id: 3
              }
            }
          },
          CancelJitOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          JitOrderBossService: {
            methods: {
              JitOrderPage: {
                requestType: "JitOrderPageReq",
                responseType: "JitOrderPageResp"
              },
              Ship: {
                requestType: "JitOrderShipReq",
                responseType: "JitOrderShipResp"
              },
              ImportShip: {
                requestType: "ImportJitShipReq",
                responseType: "ImportJitShipResp"
              },
              QueryJitLogi: {
                requestType: "QueryJitLogiReq",
                responseType: "QueryJitLogiResp"
              },
              QueryLogiTracking: {
                requestType: "QueryLogiTrackingReq",
                responseType: "QueryLogiTrackingResp"
              },
              ExportJitOrder: {
                requestType: "JitOrderPageReq",
                responseType: "ExportJitOrderResp"
              },
              ExportTemplate: {
                requestType: "ExportTemplateReq",
                responseType: "ExportJitOrderResp"
              },
              ModifyLogi: {
                requestType: "ModifyJitOrderLogiReq",
                responseType: "ModifyJitOrderLogiResp"
              },
              JitOrderPageTab: {
                requestType: "JitOrderPageTabReq",
                responseType: "JitOrderPageTabResp"
              },
              CancelOrder: {
                requestType: "CancelJitOrderReq",
                responseType: "CancelJitOrderResp"
              }
            }
          }
        }
      },
      logistics: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.erp.logistics",
          java_outer_classname: "Logistics"
        },
        nested: {
          AddressLogiInfo: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              companyCode: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              logiCountryCode: {
                type: "string",
                id: 4
              },
              state: {
                type: "string",
                id: 5
              },
              city: {
                type: "string",
                id: 6
              },
              area: {
                type: "string",
                id: 7
              },
              postcode: {
                type: "string",
                id: 8
              },
              companyName: {
                type: "string",
                id: 9
              }
            }
          },
          GetAddressLogiReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              companyCode: {
                type: "string",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              logiCountryCode: {
                type: "string",
                id: 4
              },
              state: {
                type: "string",
                id: 5
              },
              city: {
                type: "string",
                id: 6
              },
              area: {
                type: "string",
                id: 7
              },
              postcode: {
                type: "string",
                id: 8
              }
            }
          },
          GetAddressLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              addressInfo: {
                rule: "repeated",
                type: "AddressLogiInfo",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          UpdateAddressLogiReq: {
            fields: {
              addressInfo: {
                type: "AddressLogiInfo",
                id: 1
              }
            }
          },
          UpdateAddressLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          DeleteAddressLogiReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          DeleteAddressLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          SyncAddressLogiReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              },
              companyCode: {
                type: "string",
                id: 2
              }
            }
          },
          SyncAddressLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ImportAddressLogiReq: {
            fields: {
              fileUrl: {
                type: "string",
                id: 1
              }
            }
          },
          ImportAddressLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          LogiCompanyListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              type: {
                type: "common.enum.ErpEnum.LogiCompanyType",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              logiCompany: {
                type: "string",
                id: 4
              },
              companyName: {
                type: "string",
                id: 5
              },
              cooperateStatus: {
                type: "common.enum.ErpEnum.CooperateStatus",
                id: 6
              }
            }
          },
          LogiCompanyListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              logiCompany: {
                rule: "repeated",
                type: "LogiCompanyList",
                id: 3
              }
            },
            nested: {
              LogiCompanyList: {
                fields: {
                  id: {
                    type: "int32",
                    id: 1
                  },
                  type: {
                    type: "common.enum.ErpEnum.LogiCompanyType",
                    id: 2
                  },
                  countryCode: {
                    type: "string",
                    id: 3
                  },
                  logiCompany: {
                    type: "string",
                    id: 4
                  },
                  companyName: {
                    type: "string",
                    id: 5
                  },
                  logiCountryCode: {
                    type: "string",
                    id: 6
                  },
                  priority: {
                    type: "int32",
                    id: 7
                  },
                  config: {
                    type: "string",
                    id: 8
                  },
                  cooperateStatus: {
                    type: "common.enum.ErpEnum.CooperateStatus",
                    id: 9
                  },
                  updateTime: {
                    type: "string",
                    id: 10
                  },
                  postcodes: {
                    type: "string",
                    id: 11
                  },
                  trackingUrl: {
                    type: "string",
                    id: 12
                  }
                }
              }
            }
          },
          LogiCompanyDetailReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          LogiCompanyDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 11
              },
              id: {
                type: "int32",
                id: 1
              },
              type: {
                type: "common.enum.ErpEnum.LogiCompanyType",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              logiCompany: {
                type: "string",
                id: 4
              },
              companyName: {
                type: "string",
                id: 5
              },
              logiCountryCode: {
                type: "string",
                id: 6
              },
              priority: {
                type: "int32",
                id: 7
              },
              config: {
                type: "string",
                id: 8
              },
              cooperateStatus: {
                type: "common.enum.ErpEnum.CooperateStatus",
                id: 9
              },
              postcodes: {
                type: "string",
                id: 10
              }
            }
          },
          LogiCompanyPostcodesReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              }
            }
          },
          LogiCompanyPostcodesResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              postcodes: {
                type: "string",
                id: 2
              }
            }
          },
          SaveLogiCompanyReq: {
            fields: {
              id: {
                type: "int32",
                id: 1
              },
              type: {
                type: "common.enum.ErpEnum.LogiCompanyType",
                id: 2
              },
              countryCode: {
                type: "string",
                id: 3
              },
              logiCompany: {
                type: "string",
                id: 4
              },
              companyName: {
                type: "string",
                id: 5
              },
              logiCountryCode: {
                type: "string",
                id: 6
              },
              priority: {
                type: "int32",
                id: 7
              },
              config: {
                type: "string",
                id: 8
              },
              cooperateStatus: {
                type: "common.enum.ErpEnum.CooperateStatus",
                id: 9
              },
              postcodes: {
                type: "string",
                id: 10
              },
              trackingUrl: {
                type: "string",
                id: 11
              }
            }
          },
          SaveLogiCompanyResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          LogiAgingAddReq: {
            fields: {
              agingType: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              countryAgingInfo: {
                rule: "repeated",
                type: "AgingInfo",
                id: 3
              },
              areaInfo: {
                rule: "repeated",
                type: "AreaInfo",
                id: 4
              }
            }
          },
          AreaInfo: {
            fields: {
              agingInfo: {
                rule: "repeated",
                type: "AgingInfo",
                id: 1
              },
              stateInfo: {
                rule: "repeated",
                type: "StateInfo",
                id: 2
              }
            }
          },
          StateInfo: {
            fields: {
              area: {
                type: "string",
                id: 1
              },
              state: {
                type: "string",
                id: 2
              },
              stateEn: {
                type: "string",
                id: 3
              }
            }
          },
          AgingInfo: {
            fields: {
              nature: {
                type: "string",
                id: 1
              },
              minDay: {
                type: "int32",
                id: 2
              },
              maxDay: {
                type: "int32",
                id: 3
              }
            }
          },
          LogiAgingAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          LogiAgingUpdateReq: {
            fields: {
              agingType: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              countryAgingInfo: {
                rule: "repeated",
                type: "AgingInfo",
                id: 3
              },
              areaInfo: {
                rule: "repeated",
                type: "AreaInfo",
                id: 4
              }
            }
          },
          LogiAgingUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          QueryLogiAgingPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              }
            }
          },
          QueryLogiAgingPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              agingList: {
                rule: "repeated",
                type: "LogiAging",
                id: 3
              }
            },
            nested: {
              LogiAging: {
                fields: {
                  agingType: {
                    type: "string",
                    id: 1
                  },
                  countryCode: {
                    type: "string",
                    id: 2
                  },
                  minDay: {
                    type: "int32",
                    id: 3
                  },
                  maxDay: {
                    type: "int32",
                    id: 4
                  },
                  createTime: {
                    type: "string",
                    id: 5
                  },
                  updateTime: {
                    type: "string",
                    id: 6
                  }
                }
              }
            }
          },
          QueryLogiUpdateInfoReq: {
            fields: {
              agingType: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          QueryLogiUpdateInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              countryAgingInfo: {
                rule: "repeated",
                type: "AgingInfo",
                id: 2
              },
              areaInfo: {
                rule: "repeated",
                type: "AreaInfo",
                id: 3
              }
            }
          },
          QueryTimeoutInfoReq: {
            fields: {}
          },
          QueryTimeoutInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              timeoutInfo: {
                rule: "repeated",
                type: "TimeoutInfo",
                id: 2
              }
            },
            nested: {
              TimeoutInfo: {
                fields: {
                  timeoutConfigNo: {
                    type: "string",
                    id: 1
                  },
                  sysName: {
                    type: "string",
                    id: 2
                  },
                  timeName: {
                    type: "string",
                    id: 3
                  },
                  timeType: {
                    type: "string",
                    id: 4
                  },
                  minDay: {
                    type: "int32",
                    id: 5
                  },
                  maxDay: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          TimeoutUpdateReq: {
            fields: {
              timeoutConfigNo: {
                type: "string",
                id: 1
              },
              minDay: {
                type: "int32",
                id: 3
              },
              maxDay: {
                type: "int32",
                id: 4
              }
            }
          },
          TimeoutUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          FreightForwarderListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              logiNo: {
                type: "string",
                id: 3
              },
              jobNo: {
                type: "string",
                id: 4
              },
              blNo: {
                type: "string",
                id: 5
              },
              startTime: {
                type: "string",
                id: 6
              },
              endTime: {
                type: "string",
                id: 7
              },
              reqType: {
                type: "string",
                id: 8
              },
              marks: {
                type: "string",
                id: 9
              }
            }
          },
          FreightForwarderListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 3
              },
              pbList: {
                rule: "repeated",
                type: "FreightForwarderPB",
                id: 2
              }
            }
          },
          FreightForwarderPB: {
            fields: {
              id: {
                type: "string",
                id: 34
              },
              jobNo: {
                type: "string",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              outNo: {
                type: "string",
                id: 3
              },
              logiNo: {
                type: "string",
                id: 4
              },
              bgdNo: {
                type: "string",
                id: 5
              },
              shipper: {
                type: "string",
                id: 6
              },
              consignee: {
                type: "string",
                id: 7
              },
              tradeType: {
                type: "string",
                id: 8
              },
              polName: {
                type: "string",
                id: 9
              },
              podName: {
                type: "string",
                id: 10
              },
              masterNo: {
                type: "string",
                id: 11
              },
              vessel: {
                type: "string",
                id: 12
              },
              marks: {
                rule: "repeated",
                type: "string",
                id: 13
              },
              reqPickDate: {
                type: "string",
                id: 14
              },
              skuName: {
                type: "string",
                id: 15
              },
              pkgNum: {
                type: "string",
                id: 16
              },
              grossWeight: {
                type: "string",
                id: 17
              },
              measurement: {
                type: "string",
                id: 18
              },
              etd: {
                type: "string",
                id: 19
              },
              eta: {
                type: "string",
                id: 20
              },
              lastPassDate: {
                type: "string",
                id: 21
              },
              truckNo: {
                type: "string",
                id: 22
              },
              truckType: {
                type: "string",
                id: 23
              },
              loadingType: {
                type: "string",
                id: 24
              },
              invoiceDate: {
                type: "string",
                id: 25
              },
              sendPortDate: {
                type: "string",
                id: 26
              },
              cycleDayNum: {
                type: "string",
                id: 27
              },
              qty: {
                type: "string",
                id: 28
              },
              qtyUnit: {
                type: "string",
                id: 29
              },
              portClearanceDate: {
                type: "string",
                id: 30
              },
              invoiceNo: {
                type: "string",
                id: 31
              },
              arrivalDate: {
                type: "string",
                id: 32
              },
              expectedArrivalDate: {
                type: "string",
                id: 33
              }
            }
          },
          ImportB2BFreightForwarderReq: {
            fields: {
              fileUrl: {
                type: "string",
                id: 1
              }
            }
          },
          ImportB2BFreightForwarderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          QueryFreightForwarderInfoReq: {
            fields: {
              jobNo: {
                type: "string",
                id: 1
              }
            }
          },
          FreightForwarderInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditFreightForwarderReq: {
            fields: {
              jobNo: {
                type: "string",
                id: 1
              },
              logiNo: {
                type: "string",
                id: 2
              },
              outNo: {
                type: "string",
                id: 3
              }
            }
          },
          B2BOutOrderInfoReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              }
            }
          },
          B2BOutOrderInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              skuInfo: {
                rule: "repeated",
                type: "OutOrderSkuInfo",
                id: 2
              }
            },
            nested: {
              OutOrderSkuInfo: {
                fields: {
                  outNo: {
                    type: "string",
                    id: 1
                  },
                  skuCover: {
                    type: "string",
                    id: 2
                  },
                  skuId: {
                    type: "string",
                    id: 3
                  },
                  skuName: {
                    type: "string",
                    id: 4
                  },
                  skuCode: {
                    type: "string",
                    id: 5
                  },
                  values: {
                    type: "string",
                    id: 6
                  },
                  count: {
                    type: "int32",
                    id: 7
                  }
                }
              }
            }
          },
          B2BImportTemplateReq: {
            fields: {
              reqType: {
                type: "string",
                id: 1
              }
            }
          },
          B2BImportTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          CrossBorderDetailDTO: {
            fields: {
              id: {
                type: "string",
                id: 1
              },
              logisticsNo: {
                type: "string",
                id: 2
              },
              thridLogisticsNo: {
                type: "string",
                id: 3
              },
              outNo: {
                type: "string",
                id: 4
              },
              bagNo: {
                type: "string",
                id: 5
              },
              logisticsCompanyNo: {
                type: "int32",
                id: 6
              },
              logisticsCompanyName: {
                type: "string",
                id: 7
              },
              transportWay: {
                type: "int32",
                id: 8
              },
              transportWayName: {
                type: "string",
                id: 9
              },
              fromPlace: {
                type: "string",
                id: 10
              },
              toPlace: {
                type: "string",
                id: 11
              },
              status: {
                type: "int32",
                id: 12
              },
              statusName: {
                type: "string",
                id: 13
              },
              deadlineTime: {
                type: "string",
                id: 14
              },
              exceptionType: {
                type: "int32",
                id: 15
              },
              exceptionTypeName: {
                type: "string",
                id: 16
              },
              exceptionRecordTime: {
                type: "string",
                id: 17
              },
              logisticsInfo: {
                type: "string",
                id: 18
              },
              declaredAmount: {
                type: "string",
                id: 19
              },
              declaredWeight: {
                type: "string",
                id: 20
              },
              timeInfoList: {
                rule: "repeated",
                type: "string",
                id: 21
              },
              comment: {
                type: "string",
                id: 22
              }
            }
          },
          CrossBorderListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              logisticsNo: {
                type: "string",
                id: 2
              },
              thridLogisticsNo: {
                type: "string",
                id: 3
              },
              outNo: {
                type: "string",
                id: 4
              },
              status: {
                type: "int32",
                id: 5
              },
              logisticsCompanyNo: {
                type: "int32",
                id: 6
              },
              transportWay: {
                type: "int32",
                id: 7
              },
              exceptionType: {
                type: "int32",
                id: 8
              },
              fromPlace: {
                type: "int32",
                id: 9
              },
              toPlace: {
                type: "int32",
                id: 10
              },
              timeType: {
                type: "int32",
                id: 11
              },
              startTime: {
                type: "string",
                id: 12
              },
              endTime: {
                type: "string",
                id: 13
              }
            }
          },
          CrossBorderListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              totalCount: {
                type: "int32",
                id: 2
              },
              totalPage: {
                type: "int32",
                id: 3
              },
              dataList: {
                rule: "repeated",
                type: "CrossBorderDetailDTO",
                id: 4
              }
            }
          },
          CrossBorderExportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          SingleCrossBorderReq: {
            fields: {
              thridLogisticsNo: {
                type: "string",
                id: 1
              }
            }
          },
          SingleCrossBorderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                type: "CrossBorderDetailDTO",
                id: 2
              }
            }
          },
          ConfirmArriveBatchReq: {
            fields: {
              thridLogisticsNos: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          ConfirmArriveBatchResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EnumConfigResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              enumJson: {
                type: "string",
                id: 2
              }
            }
          },
          EnumConfigReq: {
            fields: {}
          },
          B2BFreightForwarderService: {
            methods: {
              GetB2BFreightForwarderList: {
                requestType: "FreightForwarderListReq",
                responseType: "FreightForwarderListResp"
              },
              ImportCostGoFreightForwarder: {
                requestType: "ImportB2BFreightForwarderReq",
                responseType: "ImportB2BFreightForwarderResp"
              },
              ImportPurchaseFreightForwarder: {
                requestType: "ImportB2BFreightForwarderReq",
                responseType: "ImportB2BFreightForwarderResp"
              },
              ExportCostGoFreightForwarder: {
                requestType: "FreightForwarderListReq",
                responseType: "ImportB2BFreightForwarderResp"
              },
              QueryFreightForwarderInfo: {
                requestType: "QueryFreightForwarderInfoReq",
                responseType: "FreightForwarderInfoResp"
              },
              EditFreightForwarderInfo: {
                requestType: "EditFreightForwarderReq",
                responseType: "FreightForwarderInfoResp"
              },
              EditOutNoFreightForwarder: {
                requestType: "EditFreightForwarderReq",
                responseType: "FreightForwarderInfoResp"
              },
              B2BFreightForwarderSkuInfo: {
                requestType: "B2BOutOrderInfoReq",
                responseType: "B2BOutOrderInfoResp"
              },
              B2BImportTemplates: {
                requestType: "B2BImportTemplateReq",
                responseType: "B2BImportTemplateResp"
              }
            }
          },
          AddressLogiBossService: {
            methods: {
              GetAddressLogi: {
                requestType: "GetAddressLogiReq",
                responseType: "GetAddressLogiResp"
              },
              UpdateAddressLogi: {
                requestType: "UpdateAddressLogiReq",
                responseType: "UpdateAddressLogiResp"
              },
              DeleteAddressLogi: {
                requestType: "DeleteAddressLogiReq",
                responseType: "DeleteAddressLogiResp"
              },
              SyncAddressLogi: {
                requestType: "SyncAddressLogiReq",
                responseType: "SyncAddressLogiResp"
              },
              ImportAddressLogi: {
                requestType: "ImportAddressLogiReq",
                responseType: "ImportAddressLogiResp"
              }
            }
          },
          LogiCompanyBossService: {
            methods: {
              GetLogiCompanyList: {
                requestType: "LogiCompanyListReq",
                responseType: "LogiCompanyListResp"
              },
              GetLogiCompanyDetail: {
                requestType: "LogiCompanyDetailReq",
                responseType: "LogiCompanyDetailResp"
              },
              GetLogiCompanyPostcodes: {
                requestType: "LogiCompanyPostcodesReq",
                responseType: "LogiCompanyPostcodesResp"
              },
              SaveLogiCompany: {
                requestType: "SaveLogiCompanyReq",
                responseType: "SaveLogiCompanyResp"
              }
            }
          },
          LogiConfigBossService: {
            methods: {
              LogiAgingAdd: {
                requestType: "LogiAgingAddReq",
                responseType: "LogiAgingAddResp"
              },
              LogiAgingUpdate: {
                requestType: "LogiAgingUpdateReq",
                responseType: "LogiAgingUpdateResp"
              },
              QueryLogiAgingPage: {
                requestType: "QueryLogiAgingPageReq",
                responseType: "QueryLogiAgingPageResp"
              },
              QueryLogiUpdateInfo: {
                requestType: "QueryLogiUpdateInfoReq",
                responseType: "QueryLogiUpdateInfoResp"
              },
              QueryTimeoutInfo: {
                requestType: "QueryTimeoutInfoReq",
                responseType: "QueryTimeoutInfoResp"
              },
              TimeoutUpdate: {
                requestType: "TimeoutUpdateReq",
                responseType: "TimeoutUpdateResp"
              }
            }
          },
          CrossBorderService: {
            methods: {
              CrossBorderList: {
                requestType: "CrossBorderListReq",
                responseType: "CrossBorderListResp"
              },
              ExportCrossBorderData: {
                requestType: "CrossBorderListReq",
                responseType: "CrossBorderExportResp"
              },
              SyncCrossBorderLogisticsInfo: {
                requestType: "SingleCrossBorderReq",
                responseType: "SingleCrossBorderResp"
              },
              CancelCrossBorder: {
                requestType: "SingleCrossBorderReq",
                responseType: "SingleCrossBorderResp"
              },
              ManualOrder: {
                requestType: "SingleCrossBorderReq",
                responseType: "SingleCrossBorderResp"
              },
              ConfirmArrive: {
                requestType: "SingleCrossBorderReq",
                responseType: "SingleCrossBorderResp"
              },
              SynCrossBorderAging: {
                requestType: "SingleCrossBorderReq",
                responseType: "SingleCrossBorderResp"
              },
              GetSelectEnum: {
                requestType: "EnumConfigReq",
                responseType: "EnumConfigResp"
              },
              ConfirmArriveBatch: {
                requestType: "ConfirmArriveBatchReq",
                responseType: "ConfirmArriveBatchResp"
              }
            }
          }
        }
      },
      purchase: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.erp.purchase",
          java_outer_classname: "Purchase"
        },
        nested: {
          PurchaseOrderReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              purchaseOrderNo: {
                type: "string",
                id: 2
              },
              refPurchaseOrderNo: {
                type: "string",
                id: 3
              },
              supplierId: {
                type: "string",
                id: 4
              },
              tabType: {
                type: "string",
                id: 5
              },
              purchaseOrderStatus: {
                type: "string",
                id: 7
              },
              purchaseType: {
                type: "string",
                id: 8
              },
              isUseFingoSystem: {
                type: "common.enum.PurchaseOrderEnum.UseFingoSystem",
                id: 9
              },
              warehouseNo: {
                type: "string",
                id: 10
              },
              deliveWay: {
                type: "common.enum.PurchaseOrderEnum.DeliveWay",
                id: 11
              },
              startTime: {
                type: "string",
                id: 12
              },
              endTime: {
                type: "string",
                id: 13
              },
              orderNo: {
                type: "string",
                id: 14
              },
              thirdOrderNo: {
                type: "string",
                id: 15
              },
              logiCode: {
                type: "string",
                id: 16
              },
              productName: {
                type: "string",
                id: 17
              },
              skuCode: {
                type: "string",
                id: 18
              },
              incomeStatus: {
                type: "common.enum.ErpEnum.IncomeStatus",
                id: 19
              },
              productId: {
                type: "string",
                id: 20
              },
              type: {
                rule: "repeated",
                type: "string",
                id: 21
              },
              exportImg: {
                type: "common.enum.ErpEnum.YesNo",
                id: 22
              },
              externalStatus: {
                type: "common.enum.ErpEnum.ExternalStatus",
                id: 23
              },
              cateId: {
                type: "int32",
                id: 24
              }
            }
          },
          PurchaseOrderDetailPb: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productCover: {
                type: "string",
                id: 2
              },
              productLink: {
                type: "string",
                id: 3
              },
              skuDesc: {
                type: "string",
                id: 4
              },
              purchasePrice: {
                type: "string",
                id: 5
              },
              thirdOrderNo: {
                type: "string",
                id: 6
              },
              systemCount: {
                type: "int32",
                id: 7
              },
              purchaseCount: {
                type: "int32",
                id: 8
              },
              shipCount: {
                type: "int32",
                id: 9
              },
              stockoutNum: {
                type: "int32",
                id: 10
              },
              signNum: {
                type: "int32",
                id: 11
              },
              unarrivedNum: {
                type: "int32",
                id: 12
              },
              incomeNum: {
                type: "int32",
                id: 13
              },
              incomeAbnormalNum: {
                type: "int32",
                id: 14
              },
              cancelCount: {
                type: "int32",
                id: 15
              },
              shipTime: {
                type: "string",
                id: 16
              },
              signTime: {
                type: "string",
                id: 17
              },
              incomeTime: {
                type: "string",
                id: 18
              },
              allIncomeTime: {
                type: "string",
                id: 19
              },
              createTime: {
                type: "string",
                id: 20
              },
              remark: {
                type: "string",
                id: 21
              },
              skuCode: {
                type: "string",
                id: 22
              },
              supplierCode: {
                type: "string",
                id: 23
              },
              qrCode: {
                type: "string",
                id: 24
              },
              orderNo: {
                rule: "repeated",
                type: "string",
                id: 25
              },
              logi: {
                rule: "repeated",
                type: "LogiInfo",
                id: 26
              },
              totalPrice: {
                type: "string",
                id: 27
              },
              availableShipCount: {
                type: "int32",
                id: 28
              },
              availableStockoutCount: {
                type: "int32",
                id: 29
              }
            }
          },
          PurchaseOrderPb: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              refPurchaseOrderNo: {
                type: "string",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 4
              },
              supplierName: {
                type: "string",
                id: 5
              },
              buyerId: {
                type: "string",
                id: 6
              },
              purchaseOrderStatus: {
                type: "string",
                id: 8
              },
              purchaseType: {
                type: "string",
                id: 9
              },
              isUseFingoSystem: {
                type: "common.enum.PurchaseOrderEnum.UseFingoSystem",
                id: 10
              },
              warehouseNo: {
                type: "string",
                id: 11
              },
              warehouseName: {
                type: "string",
                id: 12
              },
              purchaseAmount: {
                type: "string",
                id: 13
              },
              retainTime: {
                type: "string",
                id: 14
              },
              freight: {
                type: "string",
                id: 15
              },
              deliveWay: {
                type: "common.enum.PurchaseOrderEnum.DeliveWay",
                id: 16
              },
              createTime: {
                type: "string",
                id: 17
              },
              updateTime: {
                type: "string",
                id: 18
              },
              details: {
                rule: "repeated",
                type: "PurchaseOrderDetailPb",
                id: 19
              },
              isAbnormalProduct: {
                type: "bool",
                id: 20
              },
              isShip: {
                type: "common.enum.ErpEnum.YesNo",
                id: 23
              },
              incomeTime: {
                type: "string",
                id: 21
              },
              allIncomeTime: {
                type: "string",
                id: 22
              },
              transferName: {
                type: "string",
                id: 24
              },
              externalStatus: {
                type: "string",
                id: 25
              }
            }
          },
          PurchaseOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "PurchaseOrderPb",
                id: 4
              }
            }
          },
          PoDetailReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          PoDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              order: {
                type: "PurchaseOrderPb",
                id: 3
              }
            }
          },
          PurchaseOrderSavePbReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 3
              },
              isUse: {
                type: "common.enum.PurchaseOrderEnum.UseFingoSystem",
                id: 7
              },
              deliveWay: {
                type: "common.enum.PurchaseOrderEnum.DeliveWay",
                id: 4
              },
              freight: {
                type: "string",
                id: 5
              },
              detailInfo: {
                rule: "repeated",
                type: "PurchaseOrderDetailSave",
                id: 6
              }
            }
          },
          PurchaseOrderDetailSave: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              purchaseCount: {
                type: "int32",
                id: 2
              },
              purchasePrice: {
                type: "string",
                id: 3
              },
              thirdOrderNo: {
                type: "string",
                id: 4
              }
            }
          },
          PurchaseOrderSavePbResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          PurchaseOrderSingleMakeupReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 3
              },
              purchaseCount: {
                type: "int32",
                id: 4
              },
              purchasePrice: {
                type: "string",
                id: 5
              },
              thirdOrderNo: {
                type: "string",
                id: 6
              },
              freight: {
                type: "string",
                id: 7
              }
            }
          },
          PurchaseOrderSingleMakeupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          PurchaseOrderCancelReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          PurchaseOrderCancelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          PurchasePartCancelReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              cancelCount: {
                type: "int32",
                id: 3
              }
            }
          },
          PurchasePartCancelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          PoSingleEditReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              purchaseCount: {
                type: "int32",
                id: 3
              },
              purchasePrice: {
                type: "string",
                id: 4
              },
              thirdOrderNo: {
                type: "string",
                id: 5
              },
              freight: {
                type: "string",
                id: 6
              }
            }
          },
          PoSingleEditResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          EnsurePurchaseReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              transferId: {
                type: "uint64",
                id: 2
              }
            }
          },
          EnsurePurchaseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          StockOutReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 3
              }
            }
          },
          StockOutResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeliverInfo: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 3
              },
              logiList: {
                rule: "repeated",
                type: "LogiInfo",
                id: 4
              }
            }
          },
          LogiInfo: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              },
              logiCompany: {
                type: "string",
                id: 2
              },
              count: {
                type: "int32",
                id: 3
              }
            }
          },
          DeliverReq: {
            fields: {
              delivers: {
                rule: "repeated",
                type: "DeliverInfo",
                id: 1
              }
            }
          },
          DeliverResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ImportShipReq: {
            fields: {
              fileUrl: {
                type: "string",
                id: 1
              }
            }
          },
          ImportShipResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ExportPoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          PoTrackReq: {
            fields: {
              orderNo: {
                type: "string",
                id: 1
              }
            }
          },
          PoTrackResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              poInfos: {
                rule: "repeated",
                type: "PoInfo",
                id: 3
              },
              message: {
                type: "string",
                id: 4
              }
            },
            nested: {
              PoTrackInfo: {
                fields: {
                  poStatus: {
                    type: "string",
                    id: 1
                  },
                  time: {
                    type: "string",
                    id: 2
                  },
                  normalNum: {
                    type: "int32",
                    id: 3
                  },
                  abnormalNum: {
                    type: "int32",
                    id: 4
                  },
                  curr: {
                    type: "int32",
                    id: 5
                  },
                  statusName: {
                    type: "string",
                    id: 6
                  }
                }
              },
              SkuInfo: {
                fields: {
                  skuCode: {
                    type: "string",
                    id: 1
                  },
                  count: {
                    type: "string",
                    id: 2
                  }
                }
              },
              PoInfo: {
                fields: {
                  purchaseOrderNo: {
                    type: "string",
                    id: 1
                  },
                  skuCodes: {
                    rule: "repeated",
                    type: "SkuInfo",
                    id: 2
                  },
                  trackInfos: {
                    rule: "repeated",
                    type: "PoTrackInfo",
                    id: 3
                  }
                }
              }
            }
          },
          RiskPoReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              unIncomeDay: {
                type: "int32",
                id: 3
              }
            }
          },
          RiskPoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              riskOrderInfos: {
                rule: "repeated",
                type: "RiskOrderInfo",
                id: 4
              }
            },
            nested: {
              RiskPoInfo: {
                fields: {
                  purchaseOrderNo: {
                    type: "string",
                    id: 1
                  },
                  skuCode: {
                    type: "string",
                    id: 2
                  },
                  num: {
                    type: "int32",
                    id: 3
                  },
                  createTime: {
                    type: "string",
                    id: 4
                  },
                  warning: {
                    type: "int32",
                    id: 5
                  }
                }
              },
              RiskOrderInfo: {
                fields: {
                  orderNo: {
                    type: "string",
                    id: 1
                  },
                  riskPoInfos: {
                    rule: "repeated",
                    type: "RiskPoInfo",
                    id: 2
                  }
                }
              }
            }
          },
          PurchaseSkuOrderPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              purchaseOrderNo: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              }
            }
          },
          PurchaseSkuOrderPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              order: {
                rule: "repeated",
                type: "SkuOrder",
                id: 3
              }
            },
            nested: {
              SkuOrder: {
                fields: {
                  orderNo: {
                    type: "string",
                    id: 1
                  },
                  count: {
                    type: "int32",
                    id: 2
                  }
                }
              }
            }
          },
          PurchaseSkuOrderExportReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          PurchaseSkuOrderExportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          GetStockoutDataReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          GetStockoutDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              unShipCount: {
                type: "int32",
                id: 2
              },
              delivery: {
                rule: "repeated",
                type: "DeliveryData",
                id: 3
              }
            },
            nested: {
              DeliveryData: {
                fields: {
                  incomeNo: {
                    type: "string",
                    id: 1
                  },
                  logiCode: {
                    type: "string",
                    id: 2
                  },
                  logiCompany: {
                    type: "string",
                    id: 3
                  },
                  signStatus: {
                    type: "int32",
                    id: 4
                  },
                  totalCount: {
                    type: "int32",
                    id: 5
                  },
                  incomeCount: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          PurchaseStockoutReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              count: {
                type: "int32",
                id: 3
              },
              stockout: {
                rule: "repeated",
                type: "StockoutData",
                id: 4
              },
              autoCancel: {
                type: "common.enum.ErpEnum.YesNo",
                id: 5
              }
            },
            nested: {
              StockoutData: {
                fields: {
                  incomeNo: {
                    type: "string",
                    id: 1
                  },
                  count: {
                    type: "int32",
                    id: 2
                  }
                }
              }
            }
          },
          PurchaseStockoutResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PurchaseStatusRateReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          PurchaseStatusRateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pushTime: {
                type: "string",
                id: 2
              },
              pushContinueTime: {
                type: "int64",
                id: 3
              },
              confirmTime: {
                type: "string",
                id: 4
              },
              confirmContinueTime: {
                type: "int64",
                id: 5
              },
              detail: {
                rule: "repeated",
                type: "RateDeliveryDetail",
                id: 6
              }
            },
            nested: {
              RateDeliveryDetail: {
                fields: {
                  deliveryTime: {
                    type: "string",
                    id: 1
                  },
                  deliveryContinueTime: {
                    type: "int64",
                    id: 2
                  },
                  signTime: {
                    type: "string",
                    id: 3
                  },
                  signContinueTime: {
                    type: "int64",
                    id: 4
                  },
                  incomeTime: {
                    type: "string",
                    id: 5
                  },
                  incomeContinueTime: {
                    type: "int64",
                    id: 6
                  }
                }
              }
            }
          },
          SkuDeliveryDetailReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          SkuDeliveryDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              item: {
                rule: "repeated",
                type: "SkuDeliveryDetailPb",
                id: 2
              }
            },
            nested: {
              SkuDeliveryDetailPb: {
                fields: {
                  logiCode: {
                    type: "string",
                    id: 1
                  },
                  logiCompany: {
                    type: "string",
                    id: 2
                  },
                  deliveryCount: {
                    type: "int32",
                    id: 3
                  },
                  incomeNum: {
                    type: "int32",
                    id: 4
                  },
                  abnormalNum: {
                    type: "int32",
                    id: 5
                  },
                  signStatus: {
                    type: "int32",
                    id: 6
                  },
                  incomeStatus: {
                    type: "int32",
                    id: 7
                  },
                  deliveryTime: {
                    type: "string",
                    id: 8
                  },
                  deliveryTimeContinue: {
                    type: "int64",
                    id: 9
                  },
                  signTime: {
                    type: "string",
                    id: 10
                  },
                  signTimeContinue: {
                    type: "int64",
                    id: 11
                  },
                  incomeTime: {
                    type: "string",
                    id: 12
                  },
                  incomeTimeContinue: {
                    type: "int64",
                    id: 13
                  }
                }
              }
            }
          },
          SkuAbnormalDetailReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          SkuAbnormalDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              item: {
                rule: "repeated",
                type: "SkuAbnormalDetailPb",
                id: 2
              }
            },
            nested: {
              SkuAbnormalDetailPb: {
                fields: {
                  abnormalNo: {
                    type: "string",
                    id: 1
                  },
                  abnormalType: {
                    type: "string",
                    id: 2
                  },
                  abnormalNum: {
                    type: "int32",
                    id: 3
                  },
                  abnormalStatus: {
                    type: "int32",
                    id: 4
                  },
                  abnormalCreateTime: {
                    type: "string",
                    id: 5
                  }
                }
              }
            }
          },
          PurchaseRelationOrderReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              purchaseOrderNo: {
                type: "string",
                id: 2
              }
            }
          },
          PurchaseRelationOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "PurchaseRelationOrderPb",
                id: 3
              }
            }
          },
          PurchaseRelationOrderPb: {
            fields: {
              orderNo: {
                type: "string",
                id: 1
              },
              productCover: {
                type: "string",
                id: 2
              },
              skuDesc: {
                type: "string",
                id: 3
              },
              buyCount: {
                type: "int32",
                id: 4
              },
              createTime: {
                type: "string",
                id: 5
              },
              payTime: {
                type: "string",
                id: 6
              },
              orderStatus: {
                type: "common.enum.OrderEnum.OrderStatus",
                id: 7
              },
              continueTime: {
                type: "int64",
                id: 8
              },
              afterStatus: {
                type: "common.enum.OrderEnum.AfterStatus",
                id: 9
              },
              outInfo: {
                rule: "repeated",
                type: "OutOrderInfo",
                id: 10
              }
            }
          },
          OutOrderInfo: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              outStatus: {
                type: "common.enum.ErpEnum.OutOrderStatus",
                id: 2
              }
            }
          },
          ImportBatchPurchaseReq: {
            fields: {
              uploadUrl: {
                type: "string",
                id: 1
              }
            }
          },
          ImportBatchPurchaseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ExportPurEnsureTemplateReq: {
            fields: {}
          },
          ExportPurEnsureTemplateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          PurEnsureImportPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              beginSubmitTime: {
                type: "string",
                id: 2
              },
              endSubmitTime: {
                type: "string",
                id: 3
              },
              beginStartTime: {
                type: "string",
                id: 4
              },
              endStartTime: {
                type: "string",
                id: 5
              },
              beginEndTime: {
                type: "string",
                id: 6
              },
              endEndTime: {
                type: "string",
                id: 7
              },
              importType: {
                type: "int32",
                id: 8
              },
              buyerId: {
                type: "string",
                id: 9
              },
              importStatus: {
                type: "int32",
                id: 10
              }
            }
          },
          PurEnsureImportPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "PurEnsureImportPb",
                id: 4
              }
            }
          },
          PurEnsureImportPb: {
            fields: {
              importNo: {
                type: "string",
                id: 1
              },
              submitTime: {
                type: "string",
                id: 2
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              },
              importType: {
                type: "int32",
                id: 5
              },
              buyerId: {
                type: "string",
                id: 6
              },
              importStatus: {
                type: "int32",
                id: 7
              },
              errorUrl: {
                type: "string",
                id: 8
              },
              submitName: {
                type: "string",
                id: 9
              }
            }
          },
          PurExportTaskPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              beginSubmitTime: {
                type: "string",
                id: 2
              },
              endSubmitTime: {
                type: "string",
                id: 3
              },
              beginStartTime: {
                type: "string",
                id: 4
              },
              endStartTime: {
                type: "string",
                id: 5
              },
              beginEndTime: {
                type: "string",
                id: 6
              },
              endEndTime: {
                type: "string",
                id: 7
              },
              exportType: {
                type: "int32",
                id: 8
              },
              buyerName: {
                type: "string",
                id: 9
              },
              exportStatus: {
                type: "int32",
                id: 10
              }
            }
          },
          PurExportTaskPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "PurExportTaskPb",
                id: 4
              }
            }
          },
          PurExportTaskPb: {
            fields: {
              exportNo: {
                type: "string",
                id: 1
              },
              submitTime: {
                type: "string",
                id: 2
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              },
              exportType: {
                type: "int32",
                id: 5
              },
              buyerId: {
                type: "string",
                id: 6
              },
              exportStatus: {
                type: "int32",
                id: 7
              },
              exportFileUrl: {
                type: "string",
                id: 8
              },
              submitName: {
                type: "string",
                id: 9
              },
              remark: {
                type: "string",
                id: 10
              }
            }
          },
          PurEnsureImportDetailPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              importNo: {
                type: "string",
                id: 2
              }
            }
          },
          PurEnsureImportDetailPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "PurEnsureImportDetailPb",
                id: 4
              }
            }
          },
          PurEnsureImportDetailPb: {
            fields: {
              importNo: {
                type: "string",
                id: 1
              },
              executeTime: {
                type: "string",
                id: 2
              },
              purchaseOrderNo: {
                type: "string",
                id: 3
              },
              skuCode: {
                type: "string",
                id: 4
              },
              importStatus: {
                type: "int32",
                id: 5
              },
              remark: {
                type: "string",
                id: 6
              }
            }
          },
          PurCateGroupQueryReq: {
            fields: {
              buyerName: {
                type: "string",
                id: 1
              },
              cateId: {
                type: "string",
                id: 2
              },
              groupName: {
                type: "string",
                id: 3
              },
              page: {
                type: "common.base.Pagination",
                id: 4
              }
            }
          },
          PurCateGroupBuyerListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 4
              },
              groupPB: {
                rule: "repeated",
                type: "PurCateGroupBuyerPB",
                id: 3
              }
            }
          },
          PurCateGroupBuyerPB: {
            fields: {
              buyerId: {
                type: "string",
                id: 1
              },
              buyerName: {
                type: "string",
                id: 2
              },
              updateTime: {
                type: "string",
                id: 3
              },
              createTime: {
                type: "string",
                id: 4
              },
              nickName: {
                type: "string",
                id: 5
              },
              realName: {
                type: "string",
                id: 6
              },
              permissionGroup: {
                type: "string",
                id: 9
              },
              role: {
                rule: "repeated",
                type: "string",
                id: 7
              },
              group: {
                rule: "repeated",
                type: "PurCateGroupListPB",
                id: 8
              }
            }
          },
          PurCateGroupListPB: {
            fields: {
              groupId: {
                type: "string",
                id: 1
              },
              groupName: {
                type: "string",
                id: 2
              }
            }
          },
          PurCateGroupListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 4
              },
              groupPB: {
                rule: "repeated",
                type: "PurCateGroupPB",
                id: 3
              }
            }
          },
          PurCateGroupPB: {
            fields: {
              groupName: {
                type: "string",
                id: 1
              },
              cateList: {
                rule: "repeated",
                type: "PurCateListPB",
                id: 2
              },
              groupId: {
                type: "string",
                id: 3
              },
              updateTime: {
                type: "string",
                id: 4
              },
              createTime: {
                type: "string",
                id: 5
              },
              buyerList: {
                rule: "repeated",
                type: "PurBuyerIdListPB",
                id: 6
              }
            }
          },
          PurCateListPB: {
            fields: {
              cateId: {
                type: "string",
                id: 1
              },
              cateName: {
                type: "string",
                id: 2
              },
              cateList: {
                rule: "repeated",
                type: "PurCateListPB",
                id: 7
              }
            }
          },
          PurBuyerIdListPB: {
            fields: {
              buyerId: {
                type: "string",
                id: 1
              },
              buyerName: {
                type: "string",
                id: 2
              }
            }
          },
          PurCateGroupAddReq: {
            fields: {
              pbList: {
                rule: "repeated",
                type: "PurCateGroupAddPB",
                id: 1
              }
            }
          },
          PurCateGroupAddPB: {
            fields: {
              groupName: {
                type: "string",
                id: 1
              },
              groupId: {
                type: "string",
                id: 4
              },
              cateId: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              userId: {
                rule: "repeated",
                type: "string",
                id: 3
              }
            }
          },
          PurCateGroupAddResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PurCateGroupEditBuyerReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              },
              groupId: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          PurCateGroupEditBuyerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PurCateGroupDetailReq: {
            fields: {
              groupId: {
                type: "string",
                id: 1
              }
            }
          },
          PurCateGroupDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupName: {
                type: "string",
                id: 2
              },
              buyerIds: {
                rule: "repeated",
                type: "PurBuyerIdListPB",
                id: 3
              },
              cateIds: {
                rule: "repeated",
                type: "PurCateListPB",
                id: 4
              },
              cateIdList: {
                rule: "repeated",
                type: "string",
                id: 5
              },
              message: {
                type: "string",
                id: 6
              }
            }
          },
          PurCateGroupBuyerDetailReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              }
            }
          },
          PurCateGroupBuyerDetailResp: {
            fields: {
              buyerId: {
                type: "string",
                id: 1
              },
              buyerName: {
                type: "string",
                id: 2
              },
              realName: {
                type: "string",
                id: 3
              },
              group: {
                rule: "repeated",
                type: "PurCateGroupListPB",
                id: 4
              },
              cateList: {
                rule: "repeated",
                type: "PurCateListPB",
                id: 5
              },
              cateIdList: {
                rule: "repeated",
                type: "string",
                id: 7
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 6
              },
              message: {
                type: "string",
                id: 8
              }
            }
          },
          PurCateGroupSelectReq: {
            fields: {
              groupName: {
                type: "string",
                id: 1
              }
            }
          },
          PurCateGroupSelectResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              groupList: {
                rule: "repeated",
                type: "PurCateGroupListPB",
                id: 2
              }
            }
          },
          DeletePurCateGroupBuyerReq: {
            fields: {
              userId: {
                type: "string",
                id: 1
              }
            }
          },
          DeletePurCateGroupBuyerResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          AutoPayCheckReq: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              skuId: {
                type: "string",
                id: 2
              },
              productId: {
                type: "string",
                id: 3
              },
              purchaseNo: {
                type: "string",
                id: 4
              },
              supplierId: {
                type: "string",
                id: 5
              },
              cateId: {
                type: "string",
                id: 6
              },
              orderNo: {
                type: "string",
                id: 7
              },
              startDate: {
                type: "string",
                id: 8
              },
              endDate: {
                type: "string",
                id: 9
              },
              productName: {
                type: "string",
                id: 10
              },
              thirdNo: {
                type: "string",
                id: 11
              },
              tabType: {
                type: "string",
                id: 12
              }
            }
          },
          AutoPayCheckResp: {
            fields: {
              successSum: {
                type: "int32",
                id: 1
              },
              checkContent: {
                rule: "repeated",
                type: "CheckContent",
                id: 2
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 3
              }
            },
            nested: {
              CheckContent: {
                fields: {
                  checkPayNo: {
                    type: "string",
                    id: 1
                  },
                  sum: {
                    type: "int32",
                    id: 2
                  },
                  purchaseAmount: {
                    type: "string",
                    id: 3
                  },
                  freight: {
                    type: "string",
                    id: 4
                  }
                }
              }
            }
          },
          CanPayBatchReq: {
            fields: {
              purchaseOrders: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          CanPayBatchResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GeneratePayUrlReq: {
            fields: {
              checkPayNo: {
                type: "string",
                id: 1
              }
            }
          },
          GeneratePayUrlResp: {
            fields: {
              payUrl: {
                type: "string",
                id: 1
              },
              ret: {
                type: "common.base.ErrorMessage",
                id: 2
              }
            }
          },
          AutoPurchaseOrderListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 15
              },
              createFailReason: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              skuId: {
                type: "string",
                id: 3
              },
              productId: {
                type: "string",
                id: 4
              },
              purchaseOrderNo: {
                type: "string",
                id: 5
              },
              supplierId: {
                type: "string",
                id: 6
              },
              cateId: {
                type: "string",
                id: 7
              },
              orderNo: {
                type: "string",
                id: 8
              },
              startDate: {
                type: "string",
                id: 9
              },
              endDate: {
                type: "string",
                id: 10
              },
              payFailReason: {
                type: "string",
                id: 11
              },
              productName: {
                type: "string",
                id: 12
              },
              thirdNo: {
                type: "string",
                id: 13
              },
              tabType: {
                type: "string",
                id: 14
              }
            }
          },
          AutoPurchaseOrderListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              pbList: {
                rule: "repeated",
                type: "AutoPurchasePB",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              }
            }
          },
          AutoPurchasePB: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              supplierId: {
                type: "string",
                id: 2
              },
              thirdNo: {
                type: "string",
                id: 11
              },
              supplierName: {
                type: "string",
                id: 3
              },
              purchaseOrderStatus: {
                type: "string",
                id: 4
              },
              purchaseType: {
                type: "string",
                id: 5
              },
              purchaseAmount: {
                type: "string",
                id: 6
              },
              freight: {
                type: "string",
                id: 7
              },
              createTime: {
                type: "string",
                id: 8
              },
              failReason: {
                type: "string",
                id: 9
              },
              externalStatus: {
                type: "string",
                id: 10
              }
            }
          },
          AutoPurchaseDetailReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          AutoPurchaseDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 6
              },
              supplierId: {
                type: "string",
                id: 1
              },
              supplierName: {
                type: "string",
                id: 2
              },
              purchaseAmount: {
                type: "string",
                id: 3
              },
              freight: {
                type: "string",
                id: 4
              },
              skuList: {
                rule: "repeated",
                type: "AutoPurchaseDetailPB",
                id: 5
              }
            }
          },
          AutoPurchaseDetailPB: {
            fields: {
              skuName: {
                type: "string",
                id: 1
              },
              skuCover: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              skuLink: {
                type: "string",
                id: 4
              },
              skuValues: {
                type: "string",
                id: 5
              },
              supplyPrice: {
                type: "string",
                id: 6
              },
              sysCount: {
                type: "int32",
                id: 7
              },
              purchaseCount: {
                type: "int32",
                id: 8
              },
              failReason: {
                type: "string",
                id: 9
              },
              thirdNo: {
                type: "string",
                id: 10
              },
              cancelReason: {
                type: "string",
                id: 11
              },
              cancelStatus: {
                type: "int32",
                id: 12
              },
              productId: {
                type: "string",
                id: 13
              }
            }
          },
          AutoPurchaseSkuPriceReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          AutoPurchaseSkuPriceResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              price: {
                type: "string",
                id: 2
              }
            }
          },
          AutoPurchaseSkuCancelReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              },
              cancelReason: {
                type: "string",
                id: 3
              }
            }
          },
          AutoPurchaseSkuCancelResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AutoPurchaseUpdateReq: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              },
              purchaseOrderNo: {
                type: "string",
                id: 4
              },
              sku: {
                rule: "repeated",
                type: "AutoPurchaseUpdateSkuReq",
                id: 2
              },
              isPurchase: {
                type: "int32",
                id: 3
              }
            }
          },
          AutoPurchaseUpdateSkuReq: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              purchaseCount: {
                type: "int32",
                id: 2
              },
              thirdNo: {
                type: "string",
                id: 3
              },
              cancelStatus: {
                type: "string",
                id: 4
              },
              cancelReason: {
                type: "string",
                id: 5
              }
            }
          },
          AutoPurchaseUpdateResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AutoBatchPurchaseReq: {
            fields: {
              purchaseNo: {
                rule: "repeated",
                type: "string",
                id: 1
              },
              isUseSpotPrice: {
                type: "bool",
                id: 2
              }
            }
          },
          AutoBatchPurchaseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          PurCateGroupService: {
            methods: {
              GetPurCateGroupList: {
                requestType: "PurCateGroupQueryReq",
                responseType: "PurCateGroupListResp"
              },
              GetPurCateGroupBuyerList: {
                requestType: "PurCateGroupQueryReq",
                responseType: "PurCateGroupBuyerListResp"
              },
              SaveAndUpdate: {
                requestType: "PurCateGroupAddReq",
                responseType: "PurCateGroupAddResp"
              },
              EditBuyerGroup: {
                requestType: "PurCateGroupEditBuyerReq",
                responseType: "PurCateGroupEditBuyerResp"
              },
              PurCateGroupDetail: {
                requestType: "PurCateGroupDetailReq",
                responseType: "PurCateGroupDetailResp"
              },
              PurCateGroupBuyerDetail: {
                requestType: "PurCateGroupBuyerDetailReq",
                responseType: "PurCateGroupBuyerDetailResp"
              },
              GetPurCateGroupSelect: {
                requestType: "PurCateGroupSelectReq",
                responseType: "PurCateGroupSelectResp"
              },
              DeletePurCateGroupBuyer: {
                requestType: "DeletePurCateGroupBuyerReq",
                responseType: "DeletePurCateGroupBuyerResp"
              }
            }
          },
          PurchaseOrderTrackService: {
            methods: {
              GetPoTrackByOrderNo: {
                requestType: "PoTrackReq",
                responseType: "PoTrackResp"
              },
              GetRiskPo: {
                requestType: "RiskPoReq",
                responseType: "RiskPoResp"
              }
            }
          },
          PurchaseOrderService: {
            methods: {
              PurchaseOrderPage: {
                requestType: "PurchaseOrderReq",
                responseType: "PurchaseOrderResp"
              },
              PurchaseSkuOrderPage: {
                requestType: "PurchaseSkuOrderPageReq",
                responseType: "PurchaseSkuOrderPageResp"
              },
              PurchaseSkuOrderExport: {
                requestType: "PurchaseSkuOrderExportReq",
                responseType: "PurchaseSkuOrderExportResp"
              },
              GetStockoutData: {
                requestType: "GetStockoutDataReq",
                responseType: "GetStockoutDataResp"
              },
              GetPurchaseOrder: {
                requestType: "PoDetailReq",
                responseType: "PoDetailResp"
              },
              ExportoPos: {
                requestType: "PurchaseOrderReq",
                responseType: "ExportPoResp"
              },
              ExportoPo: {
                requestType: "PoDetailReq",
                responseType: "ExportPoResp"
              },
              ExportShipOrder: {
                requestType: "PurchaseOrderReq",
                responseType: "ExportPoResp"
              },
              PurchaseStatusRate: {
                requestType: "PurchaseStatusRateReq",
                responseType: "PurchaseStatusRateResp"
              },
              SkuDeliveryDetail: {
                requestType: "SkuDeliveryDetailReq",
                responseType: "SkuDeliveryDetailResp"
              },
              SkuAbnormalDetail: {
                requestType: "SkuAbnormalDetailReq",
                responseType: "SkuAbnormalDetailResp"
              },
              PurchaseRelationOrder: {
                requestType: "PurchaseRelationOrderReq",
                responseType: "PurchaseRelationOrderResp"
              },
              ExportPurEnsureTemplate: {
                requestType: "ExportPurEnsureTemplateReq",
                responseType: "ExportPurEnsureTemplateResp"
              },
              PurEnsureImportPage: {
                requestType: "PurEnsureImportPageReq",
                responseType: "PurEnsureImportPageResp"
              },
              PurEnsureImportDetailPage: {
                requestType: "PurEnsureImportDetailPageReq",
                responseType: "PurEnsureImportDetailPageResp"
              },
              PurExportTaskPage: {
                requestType: "PurExportTaskPageReq",
                responseType: "PurExportTaskPageResp"
              }
            }
          },
          PurchaseOrderHandleService: {
            methods: {
              SavePo: {
                requestType: "PurchaseOrderSavePbReq",
                responseType: "PurchaseOrderSavePbResp"
              },
              SinglePoEdit: {
                requestType: "PoSingleEditReq",
                responseType: "PoSingleEditResp"
              },
              SingleMakeup: {
                requestType: "PurchaseOrderSingleMakeupReq",
                responseType: "PurchaseOrderSingleMakeupResp"
              },
              AllCancel: {
                requestType: "PurchaseOrderCancelReq",
                responseType: "PurchaseOrderCancelResp"
              },
              PartCancel: {
                requestType: "PurchasePartCancelReq",
                responseType: "PurchasePartCancelResp"
              },
              EnsurePurchase: {
                requestType: "EnsurePurchaseReq",
                responseType: "EnsurePurchaseResp"
              },
              Stockout: {
                requestType: "StockOutReq",
                responseType: "StockOutResp"
              },
              PurchaseStockout: {
                requestType: "PurchaseStockoutReq",
                responseType: "PurchaseStockoutResp"
              },
              Deliver: {
                requestType: "DeliverReq",
                responseType: "DeliverResp"
              },
              ImportShip: {
                requestType: "ImportShipReq",
                responseType: "ImportShipResp"
              },
              ImportBatchPurchase: {
                requestType: "ImportBatchPurchaseReq",
                responseType: "ImportBatchPurchaseResp"
              }
            }
          },
          PurchaseAutoService: {
            methods: {
              AutoPayCheck: {
                requestType: "AutoPayCheckReq",
                responseType: "AutoPayCheckResp"
              },
              CanPayBatch: {
                requestType: "CanPayBatchReq",
                responseType: "CanPayBatchResp"
              },
              GeneratePayUrl: {
                requestType: "GeneratePayUrlReq",
                responseType: "GeneratePayUrlResp"
              },
              AutoPurchaseList: {
                requestType: "AutoPurchaseOrderListReq",
                responseType: "AutoPurchaseOrderListResp"
              },
              AutoPurchaseDetail: {
                requestType: "AutoPurchaseDetailReq",
                responseType: "AutoPurchaseDetailResp"
              },
              AutoPurchaseSkuPrice: {
                requestType: "AutoPurchaseSkuPriceReq",
                responseType: "AutoPurchaseSkuPriceResp"
              },
              AutoPurchaseSkuCancel: {
                requestType: "AutoPurchaseSkuCancelReq",
                responseType: "AutoPurchaseSkuCancelResp"
              },
              AutoPurchaseUpdate: {
                requestType: "AutoPurchaseUpdateReq",
                responseType: "AutoPurchaseUpdateResp"
              },
              AutoBatchPurchase: {
                requestType: "AutoBatchPurchaseReq",
                responseType: "AutoBatchPurchaseResp"
              }
            }
          }
        }
      },
      supplier: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.erp.supplier",
          java_outer_classname: "Supplier"
        },
        nested: {
          SupplierPB: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              },
              supplierName: {
                type: "string",
                id: 2
              },
              shortName: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              type: {
                type: "int32",
                id: 5
              },
              cooperativeStatus: {
                type: "int32",
                id: 6
              },
              buyerUserId: {
                type: "string",
                id: 7
              },
              supplierContact: {
                type: "string",
                id: 8
              },
              supplierContactMobile: {
                type: "string",
                id: 9
              },
              email: {
                type: "string",
                id: 10
              },
              isUseSticker: {
                type: "int32",
                id: 11
              },
              isUseFingoSystem: {
                type: "int32",
                id: 12
              },
              brandIds: {
                type: "string",
                id: 13
              },
              businessCategory: {
                type: "string",
                id: 14
              },
              retentionMoney: {
                type: "int32",
                id: 15
              },
              retentionMoneyCurrency: {
                type: "string",
                id: 16
              },
              paymentWay: {
                type: "int32",
                id: 17
              },
              paymentWayDesc: {
                type: "string",
                id: 18
              },
              paymentWayCurrency: {
                type: "string",
                id: 19
              },
              collectionInfo: {
                type: "string",
                id: 20
              },
              contactInfo: {
                type: "string",
                id: 21
              },
              paymentWayType: {
                type: "int32",
                id: 22
              },
              invoiceTitle: {
                type: "string",
                id: 23
              },
              invoiceRegistrationNumber: {
                type: "string",
                id: 24
              },
              invoiceBankAccount: {
                type: "string",
                id: 25
              },
              invoiceBankName: {
                type: "string",
                id: 26
              },
              invoiceMobile: {
                type: "string",
                id: 27
              },
              invoiceAddress: {
                type: "string",
                id: 28
              },
              supplierShortCode: {
                type: "string",
                id: 29
              },
              status: {
                type: "string",
                id: 30
              },
              contractBeginTime: {
                type: "string",
                id: 31
              },
              contractEndTime: {
                type: "string",
                id: 32
              }
            }
          },
          SupplierInfoGallery: {
            fields: {
              infoType: {
                type: "string",
                id: 1
              },
              urls: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          SupplierAddressPB: {
            fields: {
              supplierId: {
                type: "string",
                id: 2
              },
              type: {
                type: "int32",
                id: 3
              },
              countryName: {
                type: "string",
                id: 13
              },
              provinceName: {
                type: "string",
                id: 5
              },
              cityName: {
                type: "string",
                id: 7
              },
              areaName: {
                type: "string",
                id: 9
              },
              address: {
                type: "string",
                id: 10
              },
              longitude: {
                type: "string",
                id: 11
              },
              latitude: {
                type: "string",
                id: 12
              }
            }
          },
          SupplierPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              supplierName: {
                type: "string",
                id: 2
              },
              shortName: {
                type: "string",
                id: 3
              },
              status: {
                type: "int32",
                id: 4
              },
              supplierId: {
                type: "string",
                id: 5
              },
              cooperativeStatus: {
                type: "int32",
                id: 6
              }
            }
          },
          SupplierPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "SupplierPB",
                id: 4
              }
            }
          },
          SupplierDetailReq: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              }
            }
          },
          SupplierDeleteReq: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              }
            }
          },
          DeleteSupplierResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierDisableReq: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              }
            }
          },
          DisableSupplierResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              supplier: {
                type: "SupplierPB",
                id: 3
              },
              galleries: {
                rule: "repeated",
                type: "SupplierInfoGallery",
                id: 4
              },
              userId: {
                rule: "repeated",
                type: "string",
                id: 5
              },
              address: {
                rule: "repeated",
                type: "SupplierAddressPB",
                id: 6
              },
              canModifyName: {
                type: "common.enum.ErpEnum.YesNo",
                id: 7
              }
            }
          },
          SupplierSaveReq: {
            fields: {
              supplier: {
                type: "SupplierPB",
                id: 1
              },
              galleries: {
                rule: "repeated",
                type: "SupplierInfoGallery",
                id: 2
              },
              address: {
                rule: "repeated",
                type: "SupplierAddressPB",
                id: 3
              },
              userId: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          SupplierSaveResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierEnableReq: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              }
            }
          },
          SupplierEnableResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierBasePageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              supplierName: {
                type: "string",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 3
              }
            }
          },
          SupplierBasePageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "SupplierBasePB",
                id: 4
              }
            }
          },
          SupplierBasePB: {
            fields: {
              supplierId: {
                type: "string",
                id: 1
              },
              supplierName: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierOrderPB: {
            fields: {
              supplierOrderNo: {
                type: "string",
                id: 1
              },
              supplierId: {
                type: "string",
                id: 2
              },
              purchaseOrderNo: {
                type: "string",
                id: 3
              },
              warehouseNo: {
                type: "string",
                id: 4
              },
              warehouseName: {
                type: "string",
                id: 5
              },
              freight: {
                type: "string",
                id: 6
              },
              supplierOrderStatus: {
                type: "string",
                id: 7
              },
              skuCode: {
                type: "string",
                id: 8
              },
              purchasePrice: {
                type: "string",
                id: 9
              },
              purchaseCount: {
                type: "int32",
                id: 10
              },
              purchaseAmount: {
                type: "int32",
                id: 18
              },
              shipCount: {
                type: "int32",
                id: 11
              },
              shipTime: {
                type: "string",
                id: 12
              },
              stockoutCount: {
                type: "int32",
                id: 25
              },
              shipWarningTime: {
                type: "string",
                id: 13
              },
              createTime: {
                type: "string",
                id: 14
              },
              nameCn: {
                type: "string",
                id: 15
              },
              skuCover: {
                type: "string",
                id: 16
              },
              standardAttr: {
                type: "string",
                id: 17
              },
              orgLink: {
                type: "string",
                id: 19
              },
              supplierCode: {
                type: "string",
                id: 22
              },
              qrCode: {
                type: "string",
                id: 23
              },
              logi: {
                rule: "repeated",
                type: "DeliverLogi",
                id: 20
              },
              totalPrice: {
                type: "string",
                id: 21
              },
              supplierName: {
                type: "string",
                id: 24
              },
              transferId: {
                type: "int64",
                id: 26
              }
            }
          },
          SupplierOrderPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              supplierOrderNo: {
                type: "string",
                id: 2
              },
              purchaseOrderNo: {
                type: "string",
                id: 3
              },
              supplierId: {
                type: "string",
                id: 4
              },
              skuCode: {
                type: "string",
                id: 5
              },
              logiCode: {
                type: "string",
                id: 6
              },
              supplierOrderStatus: {
                type: "string",
                id: 7
              },
              startTime: {
                type: "string",
                id: 8
              },
              endTime: {
                type: "string",
                id: 9
              },
              warehouseNo: {
                type: "string",
                id: 10
              }
            }
          },
          SupplierOrderPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "SupplierOrderPB",
                id: 4
              }
            }
          },
          SupplierOrderStockoutReq: {
            fields: {
              supplierOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          SupplierOrderStockoutResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierOrderDeliverReq: {
            fields: {
              deliver: {
                rule: "repeated",
                type: "SupplierOrderDeliverPB",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierOrderDeliverPB: {
            fields: {
              supplierOrderNo: {
                type: "string",
                id: 1
              },
              logi: {
                rule: "repeated",
                type: "DeliverLogi",
                id: 2
              }
            }
          },
          SupplierOrderDeliverResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          DeliverLogi: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              },
              logiCompany: {
                type: "string",
                id: 2
              },
              count: {
                type: "int32",
                id: 3
              }
            }
          },
          ExportSupplierOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          SupplierOrderCountNumPB: {
            fields: {
              today: {
                type: "int32",
                id: 1
              },
              towDays: {
                type: "int32",
                id: 2
              },
              moreThreeDay: {
                type: "int32",
                id: 3
              },
              countNumber: {
                type: "int32",
                id: 4
              },
              orderType: {
                type: "int32",
                id: 5
              }
            }
          },
          SupplierOrderCountListRes: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              supplierCountList: {
                rule: "repeated",
                type: "SupplierOrderCountNumPB",
                id: 2
              },
              contact: {
                type: "string",
                id: 3
              },
              email: {
                type: "string",
                id: 4
              },
              phone: {
                type: "string",
                id: 5
              },
              message: {
                type: "string",
                id: 6
              }
            }
          },
          SupplierOrderCountListReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              }
            }
          },
          SupplierOrderDataListPB: {
            fields: {
              orderNum: {
                type: "int32",
                id: 1
              },
              date: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierOrderAmountListPB: {
            fields: {
              amount: {
                type: "string",
                id: 1
              },
              date: {
                type: "string",
                id: 2
              }
            }
          },
          SupplierOrderDataTableRes: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              jitOrderNum: {
                type: "int32",
                id: 2
              },
              purchaseOrderNum: {
                type: "int32",
                id: 3
              },
              jitOrderAmount: {
                type: "string",
                id: 4
              },
              purchaseOrderAmount: {
                type: "string",
                id: 5
              },
              purchaseOrderNumberList: {
                rule: "repeated",
                type: "SupplierOrderDataListPB",
                id: 6
              },
              jitOrderNumberList: {
                rule: "repeated",
                type: "SupplierOrderDataListPB",
                id: 7
              },
              purchaseOrderAmountList: {
                rule: "repeated",
                type: "SupplierOrderAmountListPB",
                id: 8
              },
              jitOrderAmountList: {
                rule: "repeated",
                type: "SupplierOrderAmountListPB",
                id: 9
              },
              message: {
                type: "string",
                id: 10
              }
            }
          },
          SupplierOrderDateTableReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              }
            }
          },
          SupplierBossService: {
            methods: {
              SupplierPage: {
                requestType: "SupplierPageReq",
                responseType: "SupplierPageResp"
              },
              SupplierBasePage: {
                requestType: "SupplierBasePageReq",
                responseType: "SupplierBasePageResp"
              },
              SaveSupplier: {
                requestType: "SupplierSaveReq",
                responseType: "SupplierSaveResp"
              },
              GetSupplierDetail: {
                requestType: "SupplierDetailReq",
                responseType: "SupplierDetailResp"
              },
              DisableSupplier: {
                requestType: "SupplierDisableReq",
                responseType: "DisableSupplierResp"
              },
              EnableSupplier: {
                requestType: "SupplierEnableReq",
                responseType: "SupplierEnableResp"
              },
              DeleteSupplier: {
                requestType: "SupplierDeleteReq",
                responseType: "DeleteSupplierResp"
              }
            }
          },
          SupplierOrderBossService: {
            methods: {
              SupplierOrderPage: {
                requestType: "SupplierOrderPageReq",
                responseType: "SupplierOrderPageResp"
              },
              OrderStockout: {
                requestType: "SupplierOrderStockoutReq",
                responseType: "SupplierOrderStockoutResp"
              },
              OrderDeliver: {
                requestType: "SupplierOrderDeliverReq",
                responseType: "SupplierOrderDeliverResp"
              },
              ExportOrder: {
                requestType: "SupplierOrderPageReq",
                responseType: "ExportSupplierOrderResp"
              }
            }
          },
          SupplierOrderBusinessService: {
            methods: {
              SupplierOrderPage: {
                requestType: "SupplierOrderBusinessPageReq",
                responseType: "SupplierOrderBusinessPageResp"
              },
              GetSupplierOrderDetail: {
                requestType: "SupplierOrderDetailBusinessReq",
                responseType: "SupplierOrderDetailBusinessResp"
              },
              OrderDeliver: {
                requestType: "SupplierOrderDeliverReq",
                responseType: "SupplierOrderDeliverResp"
              },
              OrderStockOut: {
                requestType: "SupplierOrderStockOutBusinessReq",
                responseType: "SupplierOrderStockoutResp"
              },
              GetLogiCompanyList: {
                requestType: "LogiCompanyListReq",
                responseType: "LogiCompanyListResp"
              },
              ModifyLogiCode: {
                requestType: "ModifyLogiCodeReq",
                responseType: "ModifyLogiCodeResp"
              },
              ExportOrder: {
                requestType: "SupplierOrderBusinessPageReq",
                responseType: "ExportSupplierOrderResp"
              },
              ImportOrderDeliver: {
                requestType: "ImportOrderDeliverReq",
                responseType: "ImportOrderDeliverResp"
              },
              GetSupplierOrderPageTabList: {
                requestType: "GetSupplierOrderPageTabListReq",
                responseType: "GetSupplierOrderPageTabListResp"
              },
              QueryLogiCompanyList: {
                requestType: "QueryLogiCompanyListReq",
                responseType: "QueryLogiCompanyListResp"
              },
              QueryOrderCountNumList: {
                requestType: "SupplierOrderCountListReq",
                responseType: "SupplierOrderCountListRes"
              },
              QueryOrderDataTable: {
                requestType: "SupplierOrderDateTableReq",
                responseType: "SupplierOrderDataTableRes"
              }
            }
          },
          SupplierOrderBusinessPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              productName: {
                type: "string",
                id: 2
              },
              startTime: {
                type: "string",
                id: 3
              },
              endTime: {
                type: "string",
                id: 4
              },
              supplierOrderNo: {
                type: "string",
                id: 5
              },
              logiCode: {
                type: "string",
                id: 6
              },
              supplierOrderStatus: {
                type: "string",
                id: 7
              },
              countryCode: {
                type: "string",
                id: 8
              },
              skuCode: {
                type: "string",
                id: 9
              },
              supplierCode: {
                type: "string",
                id: 10
              },
              qrCode: {
                type: "string",
                id: 11
              },
              shipStartTime: {
                type: "string",
                id: 12
              },
              shipEndTime: {
                type: "string",
                id: 13
              },
              languageCode: {
                type: "string",
                id: 14
              }
            }
          },
          SupplierOrderBusinessPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "SupplierOrderBusinessPB",
                id: 4
              }
            }
          },
          SupplierOrderBusinessPB: {
            fields: {
              supplierOrderNo: {
                type: "string",
                id: 1
              },
              createTime: {
                type: "string",
                id: 2
              },
              skuCover: {
                type: "string",
                id: 3
              },
              skuName: {
                type: "string",
                id: 4
              },
              supplierCode: {
                type: "string",
                id: 5
              },
              skuCode: {
                type: "string",
                id: 6
              },
              standardAttr: {
                type: "string",
                id: 7
              },
              purchaseCount: {
                type: "int32",
                id: 8
              },
              shipCount: {
                type: "int32",
                id: 9
              },
              purchasePrice: {
                type: "string",
                id: 10
              },
              totalPrice: {
                type: "string",
                id: 11
              },
              orgLink: {
                type: "string",
                id: 12
              },
              warehouseName: {
                type: "string",
                id: 13
              },
              freight: {
                type: "string",
                id: 14
              },
              supplierOrderStatus: {
                type: "string",
                id: 15
              },
              supplierId: {
                type: "string",
                id: 16
              },
              transferCountryCode: {
                type: "string",
                id: 17
              },
              transferCountryName: {
                type: "string",
                id: 18
              },
              transferUserName: {
                type: "string",
                id: 19
              },
              transferMobile: {
                type: "string",
                id: 20
              },
              transferAddress: {
                type: "string",
                id: 21
              },
              stockoutNum: {
                type: "int32",
                id: 22
              },
              transferName: {
                type: "string",
                id: 23
              },
              qrCode: {
                type: "string",
                id: 24
              }
            }
          },
          SupplierOrderDetailBusinessReq: {
            fields: {
              supplierOrderNo: {
                type: "string",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              },
              languageCode: {
                type: "string",
                id: 14
              }
            }
          },
          SupplierOrderDetailBusinessResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              orderDetail: {
                type: "SupplierOrderDetailBusinessPB",
                id: 3
              },
              orderPackage: {
                rule: "repeated",
                type: "SupplierOrderPackageBusinessPB",
                id: 4
              }
            }
          },
          SupplierOrderDetailBusinessPB: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              purchaseOrderStatus: {
                type: "string",
                id: 2
              },
              transferWarehouseName: {
                type: "string",
                id: 3
              },
              transferWarehouseUserName: {
                type: "string",
                id: 4
              },
              transferWarehouseMobile: {
                type: "string",
                id: 5
              },
              transferWarehouseAddress: {
                type: "string",
                id: 6
              },
              createTime: {
                type: "string",
                id: 7
              },
              skuCover: {
                type: "string",
                id: 8
              },
              skuName: {
                type: "string",
                id: 9
              },
              skuCode: {
                type: "string",
                id: 10
              },
              supplierCode: {
                type: "string",
                id: 11
              },
              standardAttr: {
                type: "string",
                id: 12
              },
              purchaseCount: {
                type: "int32",
                id: 13
              },
              shipCount: {
                type: "int32",
                id: 14
              },
              stockoutNum: {
                type: "int32",
                id: 15
              },
              purchasePrice: {
                type: "string",
                id: 16
              },
              productTotalPrice: {
                type: "string",
                id: 17
              },
              supplierOrderStatus: {
                type: "string",
                id: 18
              },
              totalPrice: {
                type: "string",
                id: 19
              },
              freight: {
                type: "string",
                id: 20
              },
              transferCountryCode: {
                type: "string",
                id: 21
              },
              transferCountryName: {
                type: "string",
                id: 22
              }
            }
          },
          SupplierOrderPackageBusinessPB: {
            fields: {
              shipCount: {
                type: "int32",
                id: 1
              },
              logiCode: {
                type: "string",
                id: 2
              },
              logiCompany: {
                type: "string",
                id: 3
              },
              queryUrl: {
                type: "string",
                id: 4
              },
              logi: {
                rule: "repeated",
                type: "BusinessLogiPB",
                id: 5
              },
              incomeNo: {
                type: "string",
                id: 6
              },
              shipTime: {
                type: "string",
                id: 7
              },
              logiCompanyName: {
                type: "string",
                id: 8
              }
            },
            nested: {
              BusinessLogiPB: {
                fields: {
                  time: {
                    type: "string",
                    id: 1
                  },
                  type: {
                    type: "string",
                    id: 2
                  },
                  desc: {
                    type: "string",
                    id: 3
                  },
                  needI18n: {
                    type: "int32",
                    id: 4
                  }
                }
              }
            }
          },
          SupplierOrderStockOutBusinessReq: {
            fields: {
              stockOut: {
                rule: "repeated",
                type: "BusinessStockOutPB",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 14
              }
            },
            nested: {
              BusinessStockOutPB: {
                fields: {
                  supplierOrderNo: {
                    type: "string",
                    id: 1
                  },
                  count: {
                    type: "int32",
                    id: 2
                  }
                }
              }
            }
          },
          LogiCompanyListReq: {
            fields: {
              countryCode: {
                type: "string",
                id: 1
              }
            }
          },
          LogiCompanyListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              logiCompanyInfo: {
                rule: "repeated",
                type: "LogiCompanyInfo",
                id: 3
              }
            },
            nested: {
              LogiCompanyInfo: {
                fields: {
                  logiCompany: {
                    type: "string",
                    id: 1
                  },
                  companyName: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          ModifyLogiCodeReq: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              },
              logiCompany: {
                type: "string",
                id: 2
              },
              logiCode: {
                type: "string",
                id: 3
              },
              languageCode: {
                type: "string",
                id: 14
              }
            }
          },
          ModifyLogiCodeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ImportOrderDeliverReq: {
            fields: {
              uploadUrl: {
                type: "string",
                id: 1
              },
              languageCode: {
                type: "string",
                id: 14
              }
            }
          },
          ImportOrderDeliverResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          GetSupplierOrderPageTabListReq: {
            fields: {
              languageCode: {
                type: "string",
                id: 1
              }
            }
          },
          GetSupplierOrderPageTabListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              tabInfo: {
                rule: "repeated",
                type: "TabInfo",
                id: 3
              }
            },
            nested: {
              TabInfo: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  orderStatus: {
                    type: "string",
                    id: 2
                  },
                  count: {
                    type: "uint64",
                    id: 3
                  }
                }
              }
            }
          },
          QueryLogiCompanyListReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              countryCode: {
                type: "string",
                id: 2
              }
            }
          },
          QueryLogiCompanyListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              company: {
                rule: "repeated",
                type: "LogiCompanyPB",
                id: 3
              }
            },
            nested: {
              LogiCompanyPB: {
                fields: {
                  logiCompany: {
                    type: "string",
                    id: 1
                  },
                  companyName: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          }
        }
      },
      warehouse: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.erp.warehouse",
          java_outer_classname: "Warehouse"
        },
        nested: {
          WarehousePB: {
            fields: {
              warehouseNo: {
                type: "string",
                id: 1
              },
              warehouseName: {
                type: "string",
                id: 2
              }
            }
          },
          WarehousePageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              warehouseNo: {
                rule: "repeated",
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              }
            }
          },
          WarehousePageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "WarehousePB",
                id: 3
              }
            }
          },
          OutOrderPB: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              orderNo: {
                type: "string",
                id: 4
              },
              subOrderNo: {
                type: "string",
                id: 5
              },
              logiCode: {
                type: "string",
                id: 6
              },
              logiCompany: {
                type: "string",
                id: 7
              },
              outStatus: {
                type: "common.enum.ErpEnum.OutOrderStatus",
                id: 8
              },
              syncStatus: {
                type: "common.enum.ErpEnum.SyncStatus",
                id: 9
              },
              shipTime: {
                type: "string",
                id: 10
              },
              syncTime: {
                type: "string",
                id: 11
              },
              createTime: {
                type: "string",
                id: 12
              },
              address: {
                type: "OutOrderAddress",
                id: 13
              },
              cannelReason: {
                type: "string",
                id: 14
              },
              cannelTime: {
                type: "string",
                id: 15
              },
              refOutNo: {
                type: "string",
                id: 16
              },
              outType: {
                type: "string",
                id: 17
              },
              userId: {
                type: "string",
                id: 18
              },
              userName: {
                type: "string",
                id: 19
              },
              sku: {
                rule: "repeated",
                type: "OutOrderSku",
                id: 20
              },
              countryCode: {
                type: "string",
                id: 21
              },
              syncRemark: {
                type: "string",
                id: 22
              },
              orderType: {
                type: "int32",
                id: 23
              },
              payType: {
                type: "string",
                id: 24
              },
              payAmount: {
                type: "string",
                id: 25
              },
              payCurrency: {
                type: "string",
                id: 26
              },
              jobNo: {
                type: "string",
                id: 27
              }
            }
          },
          OutOrderSku: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              count: {
                type: "int32",
                id: 2
              },
              matchCount: {
                type: "int32",
                id: 3
              },
              nameCn: {
                type: "string",
                id: 4
              },
              skuCover: {
                type: "string",
                id: 5
              },
              standardAttr: {
                type: "string",
                id: 6
              },
              cateName: {
                rule: "repeated",
                type: "string",
                id: 7
              }
            }
          },
          OutOrderAddress: {
            fields: {
              country: {
                type: "string",
                id: 1
              },
              receiverName: {
                type: "string",
                id: 2
              },
              receiverPhone: {
                type: "string",
                id: 3
              },
              stateName: {
                type: "string",
                id: 4
              },
              cityName: {
                type: "string",
                id: 5
              },
              area: {
                type: "string",
                id: 6
              },
              postcode: {
                type: "string",
                id: 7
              },
              address: {
                type: "string",
                id: 8
              }
            }
          },
          OutOrderPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              outNo: {
                type: "string",
                id: 2
              },
              warehouseNo: {
                type: "string",
                id: 3
              },
              orderNo: {
                type: "string",
                id: 4
              },
              subOrderNo: {
                type: "string",
                id: 5
              },
              logiCode: {
                type: "string",
                id: 6
              },
              skuCode: {
                type: "string",
                id: 7
              },
              outStatus: {
                type: "common.enum.ErpEnum.OutOrderStatus",
                id: 8
              },
              syncStatus: {
                type: "common.enum.ErpEnum.SyncStatus",
                id: 9
              },
              startTime: {
                type: "string",
                id: 10
              },
              endTime: {
                type: "string",
                id: 11
              },
              refOutNo: {
                type: "string",
                id: 12
              },
              outType: {
                type: "string",
                id: 14
              },
              countryCode: {
                type: "string",
                id: 15
              },
              payType: {
                type: "string",
                id: 16
              }
            }
          },
          OutOrderPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "OutOrderPB",
                id: 4
              }
            }
          },
          OutOrderNewPB: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              orderNo: {
                type: "string",
                id: 4
              },
              logiCode: {
                type: "string",
                id: 6
              },
              logiCompany: {
                type: "string",
                id: 7
              },
              crossCode: {
                type: "string",
                id: 8
              },
              crossCompany: {
                type: "string",
                id: 9
              },
              crossStatus: {
                type: "string",
                id: 18
              },
              bizType: {
                type: "common.enum.ErpEnum.BizType",
                id: 10
              },
              outStatus: {
                type: "common.enum.ErpEnum.OutOrderStatus",
                id: 11
              },
              aging: {
                type: "string",
                id: 12
              },
              syncStatus: {
                type: "common.enum.ErpEnum.SyncStatus",
                id: 13
              },
              outType: {
                type: "string",
                id: 14
              },
              productType: {
                type: "common.enum.ProductEnum.Nature",
                id: 15
              },
              errorMessage: {
                type: "string",
                id: 16
              },
              errorHappenTime: {
                type: "string",
                id: 17
              },
              systemTime: {
                type: "string",
                id: 19
              },
              countryCode: {
                type: "string",
                id: 20
              },
              cancelReason: {
                type: "string",
                id: 21
              },
              syncRemark: {
                type: "string",
                id: 22
              },
              createTime: {
                type: "string",
                id: 23
              },
              syncTime: {
                type: "string",
                id: 24
              },
              outTime: {
                type: "string",
                id: 25
              },
              matchTime: {
                type: "string",
                id: 26
              },
              cancelTime: {
                type: "string",
                id: 27
              }
            }
          },
          OutOrderNewPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              outNo: {
                type: "string",
                id: 2
              },
              warehouseNo: {
                type: "string",
                id: 3
              },
              orderNo: {
                type: "string",
                id: 4
              },
              bizType: {
                type: "common.enum.ErpEnum.BizType",
                id: 5
              },
              queryType: {
                type: "common.enum.ErpEnum.QueryTimeType",
                id: 6
              },
              outStatus: {
                type: "common.enum.ErpEnum.OutOrderStatus",
                id: 7
              },
              syncStatus: {
                type: "common.enum.ErpEnum.SyncStatus",
                id: 8
              },
              createStartTime: {
                type: "string",
                id: 9
              },
              createEndTime: {
                type: "string",
                id: 10
              },
              inventoryMatchStartTime: {
                type: "string",
                id: 11
              },
              inventoryMatchEndTime: {
                type: "string",
                id: 12
              },
              syncStartTime: {
                type: "string",
                id: 13
              },
              syncEndTime: {
                type: "string",
                id: 14
              },
              cancelStartTime: {
                type: "string",
                id: 15
              },
              cancelEndTime: {
                type: "string",
                id: 16
              },
              shipStartTime: {
                type: "string",
                id: 17
              },
              shipEndTime: {
                type: "string",
                id: 18
              },
              crossOutNo: {
                type: "string",
                id: 19
              },
              logiOutNo: {
                type: "string",
                id: 20
              },
              outType: {
                type: "string",
                id: 21
              },
              productType: {
                type: "common.enum.ProductEnum.Nature",
                id: 22
              },
              errorType: {
                type: "int32",
                id: 23
              },
              skuCode: {
                type: "string",
                id: 24
              }
            }
          },
          OutOrderNewPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 2
              },
              list: {
                rule: "repeated",
                type: "OutOrderNewPB",
                id: 3
              }
            }
          },
          RepushOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              }
            }
          },
          RepushOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          CancelOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              cancelReason: {
                type: "string",
                id: 2
              },
              isRelease: {
                type: "common.enum.ErpEnum.YesNo",
                id: 7
              }
            }
          },
          CancelOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          CreateOutOrderReq: {
            fields: {
              oldOutNo: {
                type: "string",
                id: 1
              },
              outType: {
                type: "string",
                id: 2
              },
              sku: {
                rule: "repeated",
                type: "OutOrderSkuPB",
                id: 10
              }
            }
          },
          OutOrderSkuPB: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              count: {
                type: "int32",
                id: 2
              },
              batchNo: {
                type: "string",
                id: 3
              }
            }
          },
          CreateOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          OutOrderDetailReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              }
            }
          },
          OutOrderDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              outOrder: {
                type: "OutOrderPB",
                id: 3
              }
            }
          },
          OutOrderNewDetailReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          OutOrderNewDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              total: {
                type: "int32",
                id: 3
              },
              sku: {
                rule: "repeated",
                type: "OutOrderSku",
                id: 2
              }
            }
          },
          IncomeOrderPB: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              warehouseName: {
                type: "string",
                id: 3
              },
              logiCode: {
                type: "string",
                id: 6
              },
              logiCompany: {
                type: "string",
                id: 7
              },
              signStatus: {
                type: "int32",
                id: 8
              },
              signTime: {
                type: "string",
                id: 9
              },
              logiSignStatus: {
                type: "int32",
                id: 13
              },
              incomeStatus: {
                type: "int32",
                id: 10
              },
              incomeTime: {
                type: "string",
                id: 11
              },
              createTime: {
                type: "string",
                id: 12
              },
              sku: {
                rule: "repeated",
                type: "IncomeOrderSku",
                id: 20
              }
            }
          },
          NewIncomeOrderPB: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              },
              logiCode: {
                type: "string",
                id: 2
              },
              logiCompany: {
                type: "string",
                id: 3
              },
              logiCompanyName: {
                type: "string",
                id: 4
              },
              incomeOrderStatus: {
                type: "int32",
                id: 5
              },
              logiDetailInfo: {
                rule: "repeated",
                type: "string",
                id: 6
              },
              warehouseName: {
                type: "string",
                id: 8
              },
              totalCount: {
                type: "int32",
                id: 9
              },
              incomeCount: {
                type: "int32",
                id: 10
              },
              cancelCount: {
                type: "int32",
                id: 11
              },
              abnormalCount: {
                type: "int32",
                id: 12
              },
              logiSignTime: {
                type: "string",
                id: 13
              },
              warehouseSignTime: {
                type: "string",
                id: 14
              },
              incomeTime: {
                type: "string",
                id: 15
              },
              overTime: {
                type: "string",
                id: 16
              },
              incomeExceptionInfo: {
                type: "IncomeExceptionInfo",
                id: 18
              },
              simplePurchaseOrderInfo: {
                rule: "repeated",
                type: "SimplePurchaseOrderInfo",
                id: 19
              },
              countDownEndTime: {
                type: "string",
                id: 20
              }
            }
          },
          SimplePurchaseOrderInfo: {
            fields: {
              purchaseNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                rule: "repeated",
                type: "string",
                id: 2
              }
            }
          },
          IncomeExceptionInfo: {
            fields: {
              exceptionType: {
                type: "int32",
                id: 1
              },
              exceptionTime: {
                type: "string",
                id: 2
              }
            }
          },
          IncomeOrderSku: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              nameCn: {
                type: "string",
                id: 2
              },
              skuCover: {
                type: "string",
                id: 3
              },
              standardAttr: {
                type: "string",
                id: 4
              },
              totalCount: {
                type: "int32",
                id: 5
              },
              incomeCount: {
                type: "int32",
                id: 6
              },
              abnormalCount: {
                type: "int32",
                id: 7
              },
              remark: {
                type: "string",
                id: 8
              },
              purchaseOrderNo: {
                rule: "repeated",
                type: "string",
                id: 9
              }
            }
          },
          IncomeOrderPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              incomeNo: {
                type: "string",
                id: 2
              },
              logiCode: {
                type: "string",
                id: 3
              },
              signStatus: {
                type: "common.enum.ErpEnum.SignStatus",
                id: 4
              },
              incomeStatus: {
                type: "common.enum.ErpEnum.IncomeStatus",
                id: 5
              },
              skuCode: {
                type: "string",
                id: 6
              },
              warehouseNo: {
                type: "string",
                id: 7
              },
              purchaseOrderNo: {
                type: "string",
                id: 8
              },
              supplierId: {
                type: "int64",
                id: 9
              },
              startTime: {
                type: "string",
                id: 10
              },
              endTime: {
                type: "string",
                id: 11
              }
            }
          },
          NewIncomeOrderPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              incomeNo: {
                type: "string",
                id: 2
              },
              logiCode: {
                type: "string",
                id: 3
              },
              incomeOrderStatus: {
                type: "int32",
                id: 4
              },
              logiCompany: {
                type: "string",
                id: 5
              },
              warehouseNo: {
                type: "string",
                id: 6
              },
              purchaseOrderNo: {
                type: "string",
                id: 7
              },
              incomeOrderTimeType: {
                type: "int32",
                id: 8
              },
              startTime: {
                type: "string",
                id: 9
              },
              endTime: {
                type: "string",
                id: 10
              },
              incomeExceptionType: {
                type: "int32",
                id: 11
              }
            }
          },
          NewIncomeOrderPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "NewIncomeOrderPB",
                id: 4
              }
            }
          },
          NewIncomeOrderExportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          SyncLogicDetailReq: {
            fields: {
              purchaseNo: {
                type: "string",
                id: 1
              },
              logiCode: {
                type: "string",
                id: 2
              },
              logiCompany: {
                type: "string",
                id: 3
              }
            }
          },
          SyncLogicDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          SyncIncomeReq: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              }
            }
          },
          SyncIncomeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          IncomeProductDetailReq: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              },
              page: {
                type: "common.base.Pagination",
                id: 2
              }
            }
          },
          IncomeProductDetailResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              incomeOrderProductDetail: {
                rule: "repeated",
                type: "IncomeOrderProductDetailPb",
                id: 3
              }
            }
          },
          CategoryUnit: {
            fields: {
              backCateFirstId: {
                type: "string",
                id: 1
              },
              backCateFirstName: {
                type: "string",
                id: 2
              },
              backCateSecondId: {
                type: "string",
                id: 3
              },
              backCateSecondName: {
                type: "string",
                id: 4
              },
              backCateThirdId: {
                type: "string",
                id: 5
              },
              backCateThirdName: {
                type: "string",
                id: 6
              }
            }
          },
          IncomeOrderProductDetailPb: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productCover: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              standardAttr: {
                type: "string",
                id: 4
              },
              categoryUnit: {
                type: "CategoryUnit",
                id: 5
              },
              totalCount: {
                type: "int32",
                id: 6
              },
              incomeCount: {
                type: "int32",
                id: 7
              },
              cancelCount: {
                type: "int32",
                id: 8
              }
            }
          },
          IncomeOrderPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "IncomeOrderPB",
                id: 4
              }
            }
          },
          IncomeOrderSignReq: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              }
            }
          },
          IncomeOrderSignResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          OrderIncomeReq: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              },
              incomeNo: {
                type: "string",
                id: 3
              },
              sku: {
                rule: "repeated",
                type: "IncomeSku",
                id: 2
              },
              imgInfo: {
                rule: "repeated",
                type: "IncomeSkuImgInfo",
                id: 4
              }
            }
          },
          OrderIncomeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          IncomeSku: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              count: {
                type: "int32",
                id: 2
              },
              abnormalCount: {
                type: "int32",
                id: 3
              },
              abnormalType: {
                type: "string",
                id: 4
              },
              remark: {
                type: "string",
                id: 6
              },
              imgs: {
                type: "string",
                id: 7
              }
            }
          },
          IncomeSkuImgInfo: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              imgs: {
                type: "string",
                id: 2
              },
              remark: {
                type: "string",
                id: 3
              }
            }
          },
          ModifyIncomeOrderLogiReq: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              },
              logiCode: {
                type: "string",
                id: 2
              },
              logiCompany: {
                type: "string",
                id: 3
              },
              skuCode: {
                rule: "repeated",
                type: "string",
                id: 4
              }
            }
          },
          ModifyIncomeOrderLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          PurchaseLogiPB: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              },
              logiCode: {
                type: "string",
                id: 2
              },
              logiCompany: {
                type: "string",
                id: 3
              },
              signTime: {
                type: "string",
                id: 4
              },
              createTime: {
                type: "string",
                id: 5
              },
              incomeTime: {
                type: "string",
                id: 6
              },
              isAbnormal: {
                type: "int32",
                id: 7
              }
            }
          },
          PurchaseLogiListReq: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              }
            }
          },
          PurchaseLogiListResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              logi: {
                rule: "repeated",
                type: "PurchaseLogiPB",
                id: 3
              }
            }
          },
          AbnormalSkuPB: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              logiCode: {
                type: "string",
                id: 3
              },
              skuCode: {
                type: "string",
                id: 4
              },
              abnormalCount: {
                type: "int32",
                id: 5
              },
              abnormalReason: {
                type: "string",
                id: 6
              },
              content: {
                type: "string",
                id: 7
              },
              imgs: {
                type: "string",
                id: 8
              },
              abnormalStatus: {
                type: "int32",
                id: 9
              },
              acceptTime: {
                type: "string",
                id: 10
              },
              finishTime: {
                type: "string",
                id: 11
              },
              userId: {
                type: "string",
                id: 12
              },
              userName: {
                type: "string",
                id: 13
              },
              createTime: {
                type: "string",
                id: 14
              },
              nameCn: {
                type: "string",
                id: 15
              },
              skuCover: {
                type: "string",
                id: 16
              },
              standardAttr: {
                type: "string",
                id: 17
              },
              remark: {
                type: "string",
                id: 18
              },
              process: {
                rule: "repeated",
                type: "AbnormalProcessPB",
                id: 20
              },
              buyerName: {
                type: "string",
                id: 19
              },
              supplierName: {
                type: "string",
                id: 21
              }
            }
          },
          AbnormalLogiPB: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              logiCode: {
                type: "string",
                id: 3
              },
              abnormalCount: {
                type: "string",
                id: 5
              },
              abnormalReason: {
                type: "string",
                id: 6
              },
              content: {
                type: "string",
                id: 7
              },
              imgs: {
                type: "string",
                id: 8
              },
              abnormalStatus: {
                type: "int32",
                id: 9
              },
              acceptTime: {
                type: "string",
                id: 10
              },
              finishTime: {
                type: "string",
                id: 11
              },
              userId: {
                type: "string",
                id: 12
              },
              userName: {
                type: "string",
                id: 13
              },
              createTime: {
                type: "string",
                id: 14
              },
              remark: {
                type: "string",
                id: 15
              },
              dealUserId: {
                type: "string",
                id: 16
              },
              dealUserName: {
                type: "string",
                id: 17
              },
              purGroupName: {
                type: "string",
                id: 18
              },
              process: {
                rule: "repeated",
                type: "AbnormalProcessPB",
                id: 20
              }
            }
          },
          AbnormalProcessPB: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              },
              type: {
                type: "int32",
                id: 2
              },
              userId: {
                type: "string",
                id: 3
              },
              userName: {
                type: "string",
                id: 4
              },
              content: {
                type: "string",
                id: 5
              },
              imgs: {
                type: "string",
                id: 6
              },
              createTime: {
                type: "string",
                id: 7
              }
            }
          },
          AbnormalLogiPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              abnormalNo: {
                type: "string",
                id: 3
              },
              logiCode: {
                type: "string",
                id: 4
              },
              abnormalStatus: {
                type: "int32",
                id: 5
              },
              abnormalReason: {
                type: "string",
                id: 6
              },
              startTime: {
                type: "string",
                id: 10
              },
              endTime: {
                type: "string",
                id: 11
              },
              groupId: {
                type: "string",
                id: 8
              },
              dealUserId: {
                type: "string",
                id: 7
              }
            }
          },
          AbnormalLogiPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "AbnormalLogiPB",
                id: 4
              }
            }
          },
          AbnormalSkuPageReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              abnormalNo: {
                type: "string",
                id: 3
              },
              logiCode: {
                type: "string",
                id: 4
              },
              abnormalStatus: {
                type: "int32",
                id: 5
              },
              status: {
                rule: "repeated",
                type: "int32",
                id: 12
              },
              abnormalReason: {
                type: "string",
                id: 6
              },
              skuCode: {
                type: "string",
                id: 7
              },
              buyerId: {
                type: "string",
                id: 8
              },
              supplierId: {
                type: "string",
                id: 9
              },
              startTime: {
                type: "string",
                id: 10
              },
              endTime: {
                type: "string",
                id: 11
              },
              cateId: {
                type: "string",
                id: 13
              }
            }
          },
          AbnormalSkuPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              list: {
                rule: "repeated",
                type: "AbnormalSkuPB",
                id: 4
              }
            }
          },
          PurchaseDealAbnormalReq: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              },
              content: {
                type: "string",
                id: 2
              },
              imgs: {
                type: "string",
                id: 3
              }
            }
          },
          PurchaseDealAbnormalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          AddSignAbnormalReq: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              },
              abnormalReason: {
                type: "string",
                id: 2
              },
              content: {
                type: "string",
                id: 3
              },
              imgs: {
                type: "string",
                id: 4
              },
              groupName: {
                type: "string",
                id: 5
              }
            }
          },
          AddSignAbnormalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          AbnormalType: {
            fields: {
              type: {
                type: "string",
                id: 1
              },
              remark: {
                type: "string",
                id: 2
              }
            }
          },
          SignAbnormalTypeReq: {
            fields: {}
          },
          SignAbnormalTypeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              type: {
                rule: "repeated",
                type: "AbnormalType",
                id: 2
              }
            }
          },
          SkuAbnormalTypeReq: {
            fields: {}
          },
          SkuAbnormalTypeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              type: {
                rule: "repeated",
                type: "AbnormalType",
                id: 2
              }
            }
          },
          AbnormalIncomeSku: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              abnormalCount: {
                type: "int32",
                id: 3
              },
              abnormalType: {
                type: "string",
                id: 4
              },
              remark: {
                type: "string",
                id: 6
              },
              imgs: {
                type: "string",
                id: 7
              }
            }
          },
          IncomeOrderAbnormalFeedbackReq: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              }
            }
          },
          EnterAbnormalProductReq: {
            fields: {
              logiCode: {
                type: "string",
                id: 1
              },
              abnormalIncomeSku: {
                rule: "repeated",
                type: "AbnormalIncomeSku",
                id: 2
              }
            }
          },
          EnterAbnormalProductResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          LogiCompanyReq: {
            fields: {}
          },
          LogiCompanyResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              company: {
                rule: "repeated",
                type: "LogiCompany",
                id: 2
              }
            },
            nested: {
              LogiCompany: {
                fields: {
                  code: {
                    type: "string",
                    id: 1
                  },
                  name: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          AbnormalMakeupReq: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              },
              purchase: {
                rule: "repeated",
                type: "AbnormalPurchasePB",
                id: 2
              }
            }
          },
          AbnormalMakeupResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          OverAbnormalReq: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              },
              type: {
                type: "int32",
                id: 2
              }
            }
          },
          OverAbnormalResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          AbnormalProcessReq: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              }
            }
          },
          AbnormalProcessResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              process: {
                rule: "repeated",
                type: "AbnormalProcessPB",
                id: 2
              }
            }
          },
          AbnormalPurchaseOrderReq: {
            fields: {
              abnormalNo: {
                type: "string",
                id: 1
              }
            }
          },
          AbnormalPurchaseOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              purchase: {
                rule: "repeated",
                type: "AbnormalPurchasePB",
                id: 2
              }
            }
          },
          AbnormalPurchasePB: {
            fields: {
              purchaseOrderNo: {
                type: "string",
                id: 1
              },
              count: {
                type: "int32",
                id: 2
              },
              supplierId: {
                type: "string",
                id: 3
              },
              purchasePrice: {
                type: "string",
                id: 4
              },
              thirdOrderNo: {
                type: "string",
                id: 5
              },
              freight: {
                type: "string",
                id: 6
              },
              logiCode: {
                type: "string",
                id: 7
              },
              logiCompany: {
                type: "string",
                id: 8
              }
            }
          },
          GetTransferWarehouseReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              }
            }
          },
          GetTransferWarehouseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              warehouse: {
                rule: "repeated",
                type: "WarehousePB",
                id: 2
              }
            }
          },
          TransferOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              bizType: {
                type: "common.enum.ErpEnum.BizType",
                id: 3
              }
            }
          },
          TransferOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetSkuBarCodeReq: {
            fields: {
              skuCode: {
                rule: "repeated",
                type: "string",
                id: 1
              }
            }
          },
          GetSkuBarCodeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              barCode: {
                rule: "repeated",
                type: "SkuBarCode",
                id: 2
              }
            },
            nested: {
              SkuBarCode: {
                fields: {
                  skuCode: {
                    type: "string",
                    id: 1
                  },
                  barcode: {
                    type: "string",
                    id: 2
                  }
                }
              }
            }
          },
          GetTransferAddressReq: {
            fields: {}
          },
          GetTransferAddressResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              twhList: {
                rule: "repeated",
                type: "TransferWareHouse",
                id: 2
              }
            },
            nested: {
              TransferWareHouse: {
                fields: {
                  name: {
                    type: "string",
                    id: 1
                  },
                  country: {
                    type: "string",
                    id: 2
                  },
                  address: {
                    type: "string",
                    id: 3
                  },
                  userName: {
                    type: "string",
                    id: 4
                  },
                  mobile: {
                    type: "string",
                    id: 5
                  },
                  transferId: {
                    type: "uint64",
                    id: 6
                  },
                  isDefault: {
                    type: "common.enum.ErpEnum.YesNo",
                    id: 7
                  },
                  deliveWay: {
                    type: "common.enum.PurchaseOrderEnum.DeliveWay",
                    id: 8
                  }
                }
              }
            }
          },
          SpiltOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              sku: {
                rule: "repeated",
                type: "OutOrderSkuPB",
                id: 2
              }
            }
          },
          SpiltOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          RevokeSpiltOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              }
            }
          },
          RevokeSpiltOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ReissueOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              sku: {
                rule: "repeated",
                type: "OutOrderSkuPB",
                id: 3
              },
              phone: {
                type: "string",
                id: 8
              },
              countryCode: {
                type: "string",
                id: 4
              },
              province: {
                type: "string",
                id: 9
              },
              city: {
                type: "string",
                id: 10
              },
              name: {
                type: "string",
                id: 5
              },
              address: {
                type: "string",
                id: 6
              },
              postcode: {
                type: "string",
                id: 7
              }
            }
          },
          ReissueOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          GetReissueWarehouseReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              }
            }
          },
          GetReissueWarehouseResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              warehouse: {
                rule: "repeated",
                type: "WarehousePB",
                id: 2
              }
            }
          },
          BarterOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              sku: {
                rule: "repeated",
                type: "OutOrderSkuPB",
                id: 2
              }
            }
          },
          BarterOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          EditOutOrderReq: {
            fields: {
              outNo: {
                type: "string",
                id: 1
              },
              sku: {
                rule: "repeated",
                type: "OutOrderSkuPB",
                id: 2
              },
              phone: {
                type: "string",
                id: 3
              },
              countryCode: {
                type: "string",
                id: 4
              },
              province: {
                type: "string",
                id: 5
              },
              city: {
                type: "string",
                id: 6
              },
              name: {
                type: "string",
                id: 7
              },
              address: {
                type: "string",
                id: 8
              },
              postcode: {
                type: "string",
                id: 9
              }
            }
          },
          EditOutOrderResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          ExportAbnormalLogiResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          ExportAbnormalSkuResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              fileUrl: {
                type: "string",
                id: 2
              }
            }
          },
          ExportPoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              fileUrl: {
                type: "string",
                id: 3
              }
            }
          },
          DiffInventorySkuInfo: {
            fields: {
              productName: {
                type: "string",
                id: 1
              },
              productCover: {
                type: "string",
                id: 2
              },
              skuCode: {
                type: "string",
                id: 3
              },
              standardAttr: {
                type: "string",
                id: 4
              },
              categoryUnit: {
                type: "CategoryUnit",
                id: 5
              },
              saleWay: {
                type: "int32",
                id: 6
              },
              warehouseName: {
                type: "string",
                id: 7
              },
              validateTime: {
                type: "string",
                id: 8
              },
              countdownEndTime: {
                type: "string",
                id: 9
              },
              isProcess: {
                type: "int32",
                id: 10
              },
              inStockQty: {
                type: "int32",
                id: 11
              },
              thirdStockQty: {
                type: "int32",
                id: 12
              },
              diffStockQty: {
                type: "int32",
                id: 13
              },
              warehouseNo: {
                type: "string",
                id: 14
              }
            }
          },
          DiffInventoryRecordPageReq: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              isProcess: {
                type: "int32",
                id: 2
              },
              timeType: {
                type: "int32",
                id: 3
              },
              startTime: {
                type: "string",
                id: 4
              },
              endTime: {
                type: "string",
                id: 5
              },
              warehouseNo: {
                type: "string",
                id: 6
              },
              page: {
                type: "common.base.Pagination",
                id: 7
              },
              isTimeout: {
                type: "int32",
                id: 8
              }
            }
          },
          DiffInventoryRecordPageResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 4
              },
              skuInfo: {
                rule: "repeated",
                type: "DiffInventorySkuInfo",
                id: 5
              }
            }
          },
          DiffInventoryRecordExportResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              }
            }
          },
          ValidateWarehouseInventoryReq: {
            fields: {
              warehouNo: {
                type: "string",
                id: 1
              },
              skuCode: {
                type: "string",
                id: 2
              }
            }
          },
          ValidateWarehouseInventoryResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              }
            }
          },
          OrderIncomeCheckReq: {
            fields: {
              incomeNo: {
                type: "string",
                id: 1
              },
              sku: {
                rule: "repeated",
                type: "OrderIncomeCheckSku",
                id: 2
              }
            }
          },
          OrderIncomeCheckResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              sku: {
                rule: "repeated",
                type: "OrderIncomeCheckResult",
                id: 3
              }
            }
          },
          OrderIncomeCheckSku: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              count: {
                type: "int32",
                id: 2
              }
            }
          },
          OrderIncomeCheckResult: {
            fields: {
              skuCode: {
                type: "string",
                id: 1
              },
              skuName: {
                type: "string",
                id: 2
              },
              standardAttr: {
                type: "string",
                id: 3
              },
              count: {
                type: "int32",
                id: 4
              }
            }
          },
          WarehouseBossService: {
            methods: {
              WarehousePage: {
                requestType: "WarehousePageReq",
                responseType: "WarehousePageResp"
              },
              LogiCompany: {
                requestType: "LogiCompanyReq",
                responseType: "LogiCompanyResp"
              },
              GetSkuBarCode: {
                requestType: "GetSkuBarCodeReq",
                responseType: "GetSkuBarCodeResp"
              },
              GetTransferAddress: {
                requestType: "GetTransferAddressReq",
                responseType: "GetTransferAddressResp"
              }
            }
          },
          OutOrderBossService: {
            methods: {
              OutOrderPage: {
                requestType: "OutOrderPageReq",
                responseType: "OutOrderPageResp"
              },
              OutOrderNewPage: {
                requestType: "OutOrderNewPageReq",
                responseType: "OutOrderNewPageResp"
              },
              OutOrderDetail: {
                requestType: "OutOrderDetailReq",
                responseType: "OutOrderDetailResp"
              },
              OutOrderNewDetail: {
                requestType: "OutOrderNewDetailReq",
                responseType: "OutOrderNewDetailResp"
              },
              ExportList: {
                requestType: "OutOrderNewPageReq",
                responseType: "ExportPoResp"
              },
              RepushOutOrder: {
                requestType: "RepushOutOrderReq",
                responseType: "RepushOutOrderResp"
              },
              CancelOutOrder: {
                requestType: "CancelOutOrderReq",
                responseType: "CancelOutOrderResp"
              },
              CreateOutOrder: {
                requestType: "CreateOutOrderReq",
                responseType: "CreateOutOrderResp"
              },
              GetTransferWarehouse: {
                requestType: "GetTransferWarehouseReq",
                responseType: "GetTransferWarehouseResp"
              },
              TransferOutOrder: {
                requestType: "TransferOutOrderReq",
                responseType: "TransferOutOrderResp"
              },
              SpiltOutOrder: {
                requestType: "SpiltOutOrderReq",
                responseType: "SpiltOutOrderResp"
              },
              RevokeSpiltOutOrder: {
                requestType: "RevokeSpiltOutOrderReq",
                responseType: "RevokeSpiltOutOrderResp"
              },
              GetReissueWarehouse: {
                requestType: "GetReissueWarehouseReq",
                responseType: "GetReissueWarehouseResp"
              },
              ReissueOutOrder: {
                requestType: "ReissueOutOrderReq",
                responseType: "ReissueOutOrderResp"
              },
              BarterOutOrder: {
                requestType: "BarterOutOrderReq",
                responseType: "BarterOutOrderResp"
              },
              EditOutOrder: {
                requestType: "EditOutOrderReq",
                responseType: "EditOutOrderResp"
              }
            }
          },
          IncomeOrderBossService: {
            methods: {
              IncomeOrderPage: {
                requestType: "IncomeOrderPageReq",
                responseType: "IncomeOrderPageResp"
              },
              LogiOrderPage: {
                requestType: "IncomeOrderPageReq",
                responseType: "IncomeOrderPageResp"
              },
              IncomeOrderSign: {
                requestType: "IncomeOrderSignReq",
                responseType: "IncomeOrderSignResp"
              },
              OrderIncome: {
                requestType: "OrderIncomeReq",
                responseType: "OrderIncomeResp"
              },
              ModifyIncomeOrderLogi: {
                requestType: "ModifyIncomeOrderLogiReq",
                responseType: "ModifyIncomeOrderLogiResp"
              },
              PurchaseLogiList: {
                requestType: "PurchaseLogiListReq",
                responseType: "PurchaseLogiListResp"
              },
              NewIncomeOrderPage: {
                requestType: "NewIncomeOrderPageReq",
                responseType: "NewIncomeOrderPageResp"
              },
              NewIncomeOrderExport: {
                requestType: "NewIncomeOrderPageReq",
                responseType: "NewIncomeOrderExportResp"
              },
              SyncLogicDetail: {
                requestType: "SyncLogicDetailReq",
                responseType: "SyncLogicDetailResp"
              },
              SyncIncome: {
                requestType: "SyncIncomeReq",
                responseType: "SyncIncomeResp"
              },
              IncomeProductDetail: {
                requestType: "IncomeProductDetailReq",
                responseType: "IncomeProductDetailResp"
              },
              OrderIncomeCheck: {
                requestType: "OrderIncomeCheckReq",
                responseType: "OrderIncomeCheckResp"
              }
            }
          },
          AbnormalBossService: {
            methods: {
              ExportAbnormalLogi: {
                requestType: "AbnormalLogiPageReq",
                responseType: "ExportAbnormalLogiResp"
              },
              ExportAbnormalSku: {
                requestType: "AbnormalSkuPageReq",
                responseType: "ExportAbnormalSkuResp"
              },
              AbnormalLogiPage: {
                requestType: "AbnormalLogiPageReq",
                responseType: "AbnormalLogiPageResp"
              },
              AbnormalSkuPage: {
                requestType: "AbnormalSkuPageReq",
                responseType: "AbnormalSkuPageResp"
              },
              PurchaseDealAbnormal: {
                requestType: "PurchaseDealAbnormalReq",
                responseType: "PurchaseDealAbnormalResp"
              },
              AbnormalPurchaseOrder: {
                requestType: "AbnormalPurchaseOrderReq",
                responseType: "AbnormalPurchaseOrderResp"
              },
              AbnormalMakeup: {
                requestType: "AbnormalMakeupReq",
                responseType: "AbnormalMakeupResp"
              },
              OverAbnormal: {
                requestType: "OverAbnormalReq",
                responseType: "OverAbnormalResp"
              },
              AbnormalProcess: {
                requestType: "AbnormalProcessReq",
                responseType: "AbnormalProcessResp"
              },
              AddSignAbnormal: {
                requestType: "AddSignAbnormalReq",
                responseType: "AddSignAbnormalResp"
              },
              SkuAbnormalType: {
                requestType: "SkuAbnormalTypeReq",
                responseType: "SkuAbnormalTypeResp"
              },
              SignAbnormalType: {
                requestType: "SignAbnormalTypeReq",
                responseType: "SignAbnormalTypeResp"
              },
              IncomeOrderAbnormalFeedback: {
                requestType: "IncomeOrderAbnormalFeedbackReq",
                responseType: "IncomeProductDetailResp"
              },
              EnterAbnormalProduct: {
                requestType: "EnterAbnormalProductReq",
                responseType: "EnterAbnormalProductResp"
              }
            }
          },
          DiffInventoryRecordBossService: {
            methods: {
              DiffInventoryRecordPage: {
                requestType: "DiffInventoryRecordPageReq",
                responseType: "DiffInventoryRecordPageResp"
              },
              DiffInventoryRecordExport: {
                requestType: "DiffInventoryRecordPageReq",
                responseType: "DiffInventoryRecordExportResp"
              },
              ValidateWarehouseInventory: {
                requestType: "ValidateWarehouseInventoryReq",
                responseType: "ValidateWarehouseInventoryResp"
              }
            }
          }
        }
      }
    }
  },
  mdc: {
    nested: {
      screendata: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.mdc.screendata",
          java_outer_classname: "Screendata"
        },
        nested: {
          RiskPoReq: {
            fields: {
              page: {
                type: "common.base.Pagination",
                id: 1
              },
              orderNo: {
                type: "string",
                id: 2
              },
              unIncomeDay: {
                type: "int32",
                id: 3
              }
            }
          },
          RiskPoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              message: {
                type: "string",
                id: 2
              },
              total: {
                type: "int32",
                id: 3
              },
              riskOrderInfos: {
                rule: "repeated",
                type: "RiskOrderInfo",
                id: 4
              }
            },
            nested: {
              RiskPoInfo: {
                fields: {
                  purchaseOrderNo: {
                    type: "string",
                    id: 1
                  },
                  skuCode: {
                    type: "string",
                    id: 2
                  },
                  num: {
                    type: "int32",
                    id: 3
                  },
                  createTime: {
                    type: "string",
                    id: 4
                  },
                  warning: {
                    type: "int32",
                    id: 5
                  }
                }
              },
              RiskOrderInfo: {
                fields: {
                  orderNo: {
                    type: "string",
                    id: 1
                  },
                  riskPoInfos: {
                    rule: "repeated",
                    type: "RiskPoInfo",
                    id: 2
                  }
                }
              }
            }
          },
          ErpBossService: {
            methods: {
              GetRiskPo: {
                requestType: "RiskPoReq",
                responseType: "RiskPoResp"
              }
            }
          },
          BigScreenDataReq: {
            fields: {}
          },
          BigScreenDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              maximumSingleDayTurnover: {
                type: "string",
                id: 4
              },
              maximumSingleDayRegistrations: {
                type: "string",
                id: 5
              },
              totayGiftTurnover: {
                type: "string",
                id: 6
              },
              totayGiftNum: {
                type: "string",
                id: 7
              },
              totayOrdinaryTurnover: {
                type: "string",
                id: 8
              },
              totayOrdinaryNum: {
                type: "string",
                id: 9
              },
              todayRegistrations: {
                type: "string",
                id: 10
              },
              fourHourRegistrations: {
                rule: "repeated",
                type: "FourHourRegistrations",
                id: 12
              },
              hourTurnover: {
                rule: "repeated",
                type: "HourTurnover",
                id: 13
              },
              commissionTop_10: {
                rule: "repeated",
                type: "CommissionTop10",
                id: 14
              },
              hourTurnover2: {
                rule: "repeated",
                type: "HourTurnover2",
                id: 15
              }
            },
            nested: {
              FourHourRegistrations: {
                fields: {
                  userTotalNum: {
                    type: "string",
                    id: 1
                  },
                  psNum: {
                    type: "string",
                    id: 2
                  },
                  time: {
                    type: "string",
                    id: 3
                  }
                }
              },
              HourTurnover: {
                fields: {
                  time: {
                    type: "string",
                    id: 1
                  },
                  giftTurnover: {
                    type: "string",
                    id: 2
                  },
                  ordinaryTurnover: {
                    type: "string",
                    id: 3
                  }
                }
              },
              CommissionTop10: {
                fields: {
                  nickName: {
                    type: "string",
                    id: 1
                  },
                  commissionAmount: {
                    type: "string",
                    id: 2
                  }
                }
              },
              HourTurnover2: {
                fields: {
                  time: {
                    type: "string",
                    id: 1
                  },
                  giftTurnover: {
                    type: "string",
                    id: 2
                  },
                  ordinaryTurnover: {
                    type: "string",
                    id: 3
                  },
                  totalTurnover: {
                    type: "string",
                    id: 4
                  }
                }
              }
            }
          },
          ScreendataBossService: {
            methods: {
              BigScreenData: {
                requestType: "BigScreenDataReq",
                responseType: "BigScreenDataResp"
              }
            }
          }
        }
      },
      performance: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.mdc.performance",
          java_outer_classname: "performance"
        },
        nested: {
          OutOrderStatReq: {
            fields: {
              warehouseNo: {
                type: "string",
                id: 1
              },
              refresh: {
                type: "common.enum.ErpEnum.YesNo",
                id: 2
              }
            }
          },
          OutOrderStatResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              stat: {
                rule: "repeated",
                type: "OutOrderStat",
                id: 2
              }
            },
            nested: {
              OutOrderStat: {
                fields: {
                  title: {
                    type: "string",
                    id: 1
                  },
                  beginTime: {
                    type: "int64",
                    id: 2
                  },
                  endTime: {
                    type: "int64",
                    id: 3
                  },
                  syncFail: {
                    type: "int32",
                    id: 4
                  },
                  unOut: {
                    type: "int32",
                    id: 5
                  }
                }
              }
            }
          },
          IncomeOrderStatReq: {
            fields: {
              supplierId: {
                type: "int64",
                id: 1
              },
              warehouseNo: {
                type: "string",
                id: 2
              },
              refresh: {
                type: "common.enum.ErpEnum.YesNo",
                id: 3
              }
            }
          },
          IncomeOrderStatResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              stat: {
                rule: "repeated",
                type: "IncomeOrderStat",
                id: 2
              }
            },
            nested: {
              IncomeOrderStat: {
                fields: {
                  title: {
                    type: "string",
                    id: 1
                  },
                  beginTime: {
                    type: "int64",
                    id: 2
                  },
                  endTime: {
                    type: "int64",
                    id: 3
                  },
                  unSign: {
                    type: "int32",
                    id: 4
                  },
                  unIncome: {
                    type: "int32",
                    id: 5
                  },
                  abnormal: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          SystemPurchaseOrderStatReq: {
            fields: {
              warehouseNo: {
                type: "string",
                id: 1
              },
              refresh: {
                type: "common.enum.ErpEnum.YesNo",
                id: 2
              }
            }
          },
          SystemPurchaseOrderStatResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              stat: {
                rule: "repeated",
                type: "SystemPurchaseOrderStat",
                id: 2
              }
            },
            nested: {
              SystemPurchaseOrderStat: {
                fields: {
                  title: {
                    type: "string",
                    id: 1
                  },
                  beginTime: {
                    type: "int64",
                    id: 2
                  },
                  endTime: {
                    type: "int64",
                    id: 3
                  },
                  purchaseStatus: {
                    type: "string",
                    id: 4
                  },
                  purchase: {
                    type: "int32",
                    id: 5
                  },
                  sku: {
                    type: "int32",
                    id: 6
                  },
                  order: {
                    type: "int32",
                    id: 7
                  }
                }
              }
            }
          },
          ArtificialPurchaseOrderStatReq: {
            fields: {
              warehouseNo: {
                type: "string",
                id: 1
              },
              deliveWay: {
                type: "common.enum.PurchaseOrderEnum.DeliveWay",
                id: 2
              },
              refresh: {
                type: "common.enum.ErpEnum.YesNo",
                id: 3
              }
            }
          },
          ArtificialPurchaseOrderStatResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              stat: {
                rule: "repeated",
                type: "ArtificialPurchaseOrderStat",
                id: 2
              }
            },
            nested: {
              ArtificialPurchaseOrderStat: {
                fields: {
                  title: {
                    type: "string",
                    id: 1
                  },
                  beginTime: {
                    type: "int64",
                    id: 2
                  },
                  endTime: {
                    type: "int64",
                    id: 3
                  },
                  purchaseStatus: {
                    type: "string",
                    id: 4
                  },
                  purchase: {
                    type: "int32",
                    id: 5
                  },
                  sku: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          PerformanceBossService: {
            methods: {
              OutOrderStat: {
                requestType: "OutOrderStatReq",
                responseType: "OutOrderStatResp"
              },
              IncomeOrderStat: {
                requestType: "IncomeOrderStatReq",
                responseType: "IncomeOrderStatResp"
              },
              SystemPurchaseOrderStat: {
                requestType: "SystemPurchaseOrderStatReq",
                responseType: "SystemPurchaseOrderStatResp"
              },
              ArtificialPurchaseOrderStat: {
                requestType: "ArtificialPurchaseOrderStatReq",
                responseType: "ArtificialPurchaseOrderStatResp"
              }
            }
          }
        }
      },
      summary: {
        options: {
          java_multiple_files: true,
          java_package: "com.fingo.littlec.proto.mdc.summary",
          java_outer_classname: "Summary"
        },
        nested: {
          PlatformOrderStatusReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          PlatformOrderStatusResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                type: "PlatformOrderStatus",
                id: 2
              }
            },
            nested: {
              PlatformOrderStatus: {
                fields: {
                  toPayOrderNum: {
                    type: "int32",
                    id: 1
                  },
                  toShipOrderNum: {
                    type: "int32",
                    id: 2
                  },
                  toReceiveOrderNum: {
                    type: "int32",
                    id: 3
                  },
                  completedOrderNum: {
                    type: "int32",
                    id: 4
                  },
                  closedOrderNum: {
                    type: "int32",
                    id: 5
                  },
                  afterSalesOrderNum: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          OrderTradeChartReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          OrderTradeChartResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              chart: {
                rule: "repeated",
                type: "OrderTradeChart",
                id: 2
              }
            },
            nested: {
              OrderTradeChart: {
                fields: {
                  date: {
                    type: "string",
                    id: 1
                  },
                  totalOrderNum: {
                    type: "int32",
                    id: 2
                  },
                  giftOrderNum: {
                    type: "int32",
                    id: 3
                  },
                  giftOrderAmount: {
                    type: "string",
                    id: 4
                  },
                  ordinaryOrderNum: {
                    type: "int32",
                    id: 5
                  },
                  ordinaryOrderAmount: {
                    type: "string",
                    id: 6
                  }
                }
              }
            }
          },
          OrderTradeReq: {
            fields: {}
          },
          OrderTradeResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                rule: "repeated",
                type: "OrderTradeData",
                id: 2
              }
            },
            nested: {
              OrderTradeData: {
                fields: {
                  code: {
                    type: "string",
                    id: 1
                  },
                  ordinaryOrderNum: {
                    type: "int32",
                    id: 3
                  },
                  ordinaryOrderAmount: {
                    type: "string",
                    id: 4
                  },
                  totalOrderNum: {
                    type: "int32",
                    id: 8
                  },
                  totalOrderAmount: {
                    type: "string",
                    id: 9
                  },
                  giftOrderNum: {
                    type: "int32",
                    id: 5
                  },
                  superGiftOrderNum: {
                    type: "int32",
                    id: 6
                  },
                  giftOrderAmount: {
                    type: "string",
                    id: 7
                  },
                  ordinaryOrderAmountRate: {
                    type: "string",
                    id: 10
                  },
                  wholesaleOrderNum: {
                    type: "int32",
                    id: 11
                  },
                  wholesaleOrderAmount: {
                    type: "string",
                    id: 12
                  },
                  perCustomerTransaction: {
                    type: "string",
                    id: 13
                  }
                }
              }
            }
          },
          OrderTradeCountReq: {
            fields: {}
          },
          OrderTradeCountResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                type: "OrderCount",
                id: 2
              }
            },
            nested: {
              OrderCount: {
                fields: {
                  tradeAmount: {
                    type: "string",
                    id: 1
                  },
                  orderCount: {
                    type: "int32",
                    id: 2
                  },
                  userCount: {
                    type: "int32",
                    id: 3
                  },
                  productCount: {
                    type: "int32",
                    id: 4
                  }
                }
              }
            }
          },
          OrderTradeChartCountReq: {
            fields: {}
          },
          OrderTradeChartCountResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                type: "OrderTradeChartCount",
                id: 2
              }
            },
            nested: {
              OrderTradeChartCount: {
                fields: {
                  weekCount: {
                    type: "int32",
                    id: 1
                  },
                  weekAmount: {
                    type: "string",
                    id: 2
                  },
                  lastWeekCount: {
                    type: "int32",
                    id: 3
                  },
                  lastWeekAmount: {
                    type: "string",
                    id: 4
                  },
                  monthCount: {
                    type: "int32",
                    id: 5
                  },
                  monthAmount: {
                    type: "string",
                    id: 6
                  },
                  lastMonthCount: {
                    type: "int32",
                    id: 7
                  },
                  lastMonthAmount: {
                    type: "string",
                    id: 8
                  }
                }
              }
            }
          },
          ProductInfoReq: {
            fields: {}
          },
          ProductInfoResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              data: {
                type: "ProductInfo",
                id: 2
              }
            },
            nested: {
              ProductInfo: {
                fields: {
                  offShelfSpu: {
                    type: "int32",
                    id: 1
                  },
                  spu: {
                    type: "int32",
                    id: 2
                  },
                  todaySpu: {
                    type: "int32",
                    id: 3
                  },
                  giftSpu: {
                    type: "int32",
                    id: 4
                  },
                  weekSpu: {
                    type: "int32",
                    id: 5
                  },
                  monthSpu: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          UserRegistLineReq: {
            fields: {
              startTime: {
                type: "string",
                id: 1
              },
              endTime: {
                type: "string",
                id: 2
              }
            }
          },
          UserRegistLineResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              line: {
                rule: "repeated",
                type: "LineData",
                id: 2
              }
            },
            nested: {
              LineData: {
                fields: {
                  date: {
                    type: "string",
                    id: 1
                  },
                  userCount: {
                    type: "int32",
                    id: 2
                  },
                  fansCount: {
                    type: "int32",
                    id: 3
                  },
                  memberCount: {
                    type: "int32",
                    id: 4
                  },
                  managerCount: {
                    type: "int32",
                    id: 5
                  },
                  generalManagerCount: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          UserRegistDataReq: {
            fields: {}
          },
          UserRegistDataResp: {
            fields: {
              ret: {
                type: "common.base.ErrorMessage",
                id: 1
              },
              chart: {
                type: "UserChart",
                id: 2
              },
              data: {
                type: "UserData",
                id: 3
              }
            },
            nested: {
              UserChart: {
                fields: {
                  totalCount: {
                    type: "int32",
                    id: 1
                  },
                  fansCount: {
                    type: "int32",
                    id: 2
                  },
                  fansRatio: {
                    type: "string",
                    id: 3
                  },
                  memberCount: {
                    type: "int32",
                    id: 4
                  },
                  memberRati: {
                    type: "string",
                    id: 5
                  },
                  managerCount: {
                    type: "int32",
                    id: 6
                  },
                  managerRati: {
                    type: "string",
                    id: 7
                  },
                  generalManagerCount: {
                    type: "int32",
                    id: 8
                  },
                  generalRati: {
                    type: "string",
                    id: 9
                  }
                }
              },
              UserData: {
                fields: {
                  weekCount: {
                    type: "int32",
                    id: 1
                  },
                  lastWeekCount: {
                    type: "int32",
                    id: 2
                  },
                  monthCount: {
                    type: "int32",
                    id: 4
                  },
                  lastMonthCount: {
                    type: "int32",
                    id: 6
                  }
                }
              }
            }
          },
          SummaryBossService: {
            methods: {
              OrderTrade: {
                requestType: "OrderTradeReq",
                responseType: "OrderTradeResp"
              },
              OrderTradeCount: {
                requestType: "OrderTradeCountReq",
                responseType: "OrderTradeCountResp"
              },
              PlatformOrderStatus: {
                requestType: "PlatformOrderStatusReq",
                responseType: "PlatformOrderStatusResp"
              },
              OrderTradeChartCount: {
                requestType: "OrderTradeChartCountReq",
                responseType: "OrderTradeChartCountResp"
              },
              OrderTradeChart: {
                requestType: "OrderTradeChartReq",
                responseType: "OrderTradeChartResp"
              },
              ProductInfo: {
                requestType: "ProductInfoReq",
                responseType: "ProductInfoResp"
              },
              UserRegistLine: {
                requestType: "UserRegistLineReq",
                responseType: "UserRegistLineResp"
              },
              UserRegistData: {
                requestType: "UserRegistDataReq",
                responseType: "UserRegistDataResp"
              }
            }
          }
        }
      }
    }
  }
});

module.exports = $root;
